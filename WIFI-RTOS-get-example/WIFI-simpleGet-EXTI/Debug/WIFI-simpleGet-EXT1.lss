
WIFI-simpleGet-EXT1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006f5c  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00406f5c  00406f5c  00016f5c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009c0  20400000  00406f64  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          0000018c  204009c0  00407924  000209c0  2**2
                  ALLOC
  4 .stack        00002004  20400b4c  00407ab0  000209c0  2**0
                  ALLOC
  5 .heap         00000200  20402b50  00409ab4  000209c0  2**0
                  ALLOC
  6 .ARM.attributes 0000002e  00000000  00000000  000209c0  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  000209ee  2**0
                  CONTENTS, READONLY
  8 .debug_info   00019a84  00000000  00000000  00020a47  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 0000377c  00000000  00000000  0003a4cb  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000069e8  00000000  00000000  0003dc47  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000c98  00000000  00000000  0004462f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000e30  00000000  00000000  000452c7  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0000952d  00000000  00000000  000460f7  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000eddc  00000000  00000000  0004f624  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    000959c3  00000000  00000000  0005e400  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00002f60  00000000  00000000  000f3dc4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	50 2b 40 20 85 0e 40 00 83 0e 40 00 83 0e 40 00     P+@ ..@...@...@.
  400010:	83 0e 40 00 83 0e 40 00 83 0e 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	ed 01 40 00 83 0e 40 00 00 00 00 00 11 02 40 00     ..@...@.......@.
  40003c:	79 02 40 00 83 0e 40 00 83 0e 40 00 83 0e 40 00     y.@...@...@...@.
  40004c:	83 0e 40 00 83 0e 40 00 83 0e 40 00 83 0e 40 00     ..@...@...@...@.
  40005c:	83 0e 40 00 83 0e 40 00 00 00 00 00 75 0b 40 00     ..@...@.....u.@.
  40006c:	89 0b 40 00 9d 0b 40 00 83 0e 40 00 83 0e 40 00     ..@...@...@...@.
  40007c:	83 0e 40 00 b1 0b 40 00 c5 0b 40 00 83 0e 40 00     ..@...@...@...@.
  40008c:	83 0e 40 00 83 0e 40 00 83 0e 40 00 83 0e 40 00     ..@...@...@...@.
  40009c:	83 0e 40 00 83 0e 40 00 83 0e 40 00 83 0e 40 00     ..@...@...@...@.
  4000ac:	83 0e 40 00 83 0e 40 00 83 0e 40 00 83 0e 40 00     ..@...@...@...@.
  4000bc:	83 0e 40 00 83 0e 40 00 83 0e 40 00 83 0e 40 00     ..@...@...@...@.
  4000cc:	83 0e 40 00 00 00 00 00 83 0e 40 00 00 00 00 00     ..@.......@.....
  4000dc:	83 0e 40 00 83 0e 40 00 83 0e 40 00 83 0e 40 00     ..@...@...@...@.
  4000ec:	83 0e 40 00 83 0e 40 00 83 0e 40 00 83 0e 40 00     ..@...@...@...@.
  4000fc:	83 0e 40 00 83 0e 40 00 83 0e 40 00 83 0e 40 00     ..@...@...@...@.
  40010c:	83 0e 40 00 83 0e 40 00 00 00 00 00 00 00 00 00     ..@...@.........
  40011c:	00 00 00 00 83 0e 40 00 83 0e 40 00 83 0e 40 00     ......@...@...@.
  40012c:	83 0e 40 00 83 0e 40 00 00 00 00 00 83 0e 40 00     ..@...@.......@.
  40013c:	83 0e 40 00                                         ..@.

00400140 <__do_global_dtors_aux>:
  400140:	b510      	push	{r4, lr}
  400142:	4c05      	ldr	r4, [pc, #20]	; (400158 <__do_global_dtors_aux+0x18>)
  400144:	7823      	ldrb	r3, [r4, #0]
  400146:	b933      	cbnz	r3, 400156 <__do_global_dtors_aux+0x16>
  400148:	4b04      	ldr	r3, [pc, #16]	; (40015c <__do_global_dtors_aux+0x1c>)
  40014a:	b113      	cbz	r3, 400152 <__do_global_dtors_aux+0x12>
  40014c:	4804      	ldr	r0, [pc, #16]	; (400160 <__do_global_dtors_aux+0x20>)
  40014e:	f3af 8000 	nop.w
  400152:	2301      	movs	r3, #1
  400154:	7023      	strb	r3, [r4, #0]
  400156:	bd10      	pop	{r4, pc}
  400158:	204009c0 	.word	0x204009c0
  40015c:	00000000 	.word	0x00000000
  400160:	00406f64 	.word	0x00406f64

00400164 <frame_dummy>:
  400164:	4b0c      	ldr	r3, [pc, #48]	; (400198 <frame_dummy+0x34>)
  400166:	b143      	cbz	r3, 40017a <frame_dummy+0x16>
  400168:	480c      	ldr	r0, [pc, #48]	; (40019c <frame_dummy+0x38>)
  40016a:	490d      	ldr	r1, [pc, #52]	; (4001a0 <frame_dummy+0x3c>)
  40016c:	b510      	push	{r4, lr}
  40016e:	f3af 8000 	nop.w
  400172:	480c      	ldr	r0, [pc, #48]	; (4001a4 <frame_dummy+0x40>)
  400174:	6803      	ldr	r3, [r0, #0]
  400176:	b923      	cbnz	r3, 400182 <frame_dummy+0x1e>
  400178:	bd10      	pop	{r4, pc}
  40017a:	480a      	ldr	r0, [pc, #40]	; (4001a4 <frame_dummy+0x40>)
  40017c:	6803      	ldr	r3, [r0, #0]
  40017e:	b933      	cbnz	r3, 40018e <frame_dummy+0x2a>
  400180:	4770      	bx	lr
  400182:	4b09      	ldr	r3, [pc, #36]	; (4001a8 <frame_dummy+0x44>)
  400184:	2b00      	cmp	r3, #0
  400186:	d0f7      	beq.n	400178 <frame_dummy+0x14>
  400188:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40018c:	4718      	bx	r3
  40018e:	4b06      	ldr	r3, [pc, #24]	; (4001a8 <frame_dummy+0x44>)
  400190:	2b00      	cmp	r3, #0
  400192:	d0f5      	beq.n	400180 <frame_dummy+0x1c>
  400194:	4718      	bx	r3
  400196:	bf00      	nop
  400198:	00000000 	.word	0x00000000
  40019c:	00406f64 	.word	0x00406f64
  4001a0:	204009c4 	.word	0x204009c4
  4001a4:	00406f64 	.word	0x00406f64
  4001a8:	00000000 	.word	0x00000000

004001ac <vListInsertEnd>:
}
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
  4001ac:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
  4001ae:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
  4001b0:	689a      	ldr	r2, [r3, #8]
  4001b2:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
  4001b4:	689a      	ldr	r2, [r3, #8]
  4001b6:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
  4001b8:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pvContainer = ( void * ) pxList;
  4001ba:	6108      	str	r0, [r1, #16]

	( pxList->uxNumberOfItems )++;
  4001bc:	6803      	ldr	r3, [r0, #0]
  4001be:	3301      	adds	r3, #1
  4001c0:	6003      	str	r3, [r0, #0]
  4001c2:	4770      	bx	lr

004001c4 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = ( List_t * ) pxItemToRemove->pvContainer;
  4001c4:	6903      	ldr	r3, [r0, #16]

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
  4001c6:	6842      	ldr	r2, [r0, #4]
  4001c8:	6881      	ldr	r1, [r0, #8]
  4001ca:	6091      	str	r1, [r2, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
  4001cc:	6882      	ldr	r2, [r0, #8]
  4001ce:	6841      	ldr	r1, [r0, #4]
  4001d0:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
  4001d2:	685a      	ldr	r2, [r3, #4]
  4001d4:	4290      	cmp	r0, r2
  4001d6:	d005      	beq.n	4001e4 <uxListRemove+0x20>
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pvContainer = NULL;
  4001d8:	2200      	movs	r2, #0
  4001da:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
  4001dc:	6818      	ldr	r0, [r3, #0]
  4001de:	3801      	subs	r0, #1
  4001e0:	6018      	str	r0, [r3, #0]

	return pxList->uxNumberOfItems;
}
  4001e2:	4770      	bx	lr
		pxList->pxIndex = pxItemToRemove->pxPrevious;
  4001e4:	6882      	ldr	r2, [r0, #8]
  4001e6:	605a      	str	r2, [r3, #4]
  4001e8:	e7f6      	b.n	4001d8 <uxListRemove+0x14>
	...

004001ec <SVC_Handler>:
}
/*-----------------------------------------------------------*/

void vPortSVCHandler( void )
{
	__asm volatile (
  4001ec:	4b06      	ldr	r3, [pc, #24]	; (400208 <pxCurrentTCBConst2>)
  4001ee:	6819      	ldr	r1, [r3, #0]
  4001f0:	6808      	ldr	r0, [r1, #0]
  4001f2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4001f6:	f380 8809 	msr	PSP, r0
  4001fa:	f3bf 8f6f 	isb	sy
  4001fe:	f04f 0000 	mov.w	r0, #0
  400202:	f380 8811 	msr	BASEPRI, r0
  400206:	4770      	bx	lr

00400208 <pxCurrentTCBConst2>:
  400208:	204009dc 	.word	0x204009dc
  40020c:	4770      	bx	lr
  40020e:	bf00      	nop

00400210 <PendSV_Handler>:

void xPortPendSVHandler( void )
{
	/* This is a naked function. */

	__asm volatile
  400210:	f3ef 8009 	mrs	r0, PSP
  400214:	f3bf 8f6f 	isb	sy
  400218:	4b15      	ldr	r3, [pc, #84]	; (400270 <pxCurrentTCBConst>)
  40021a:	681a      	ldr	r2, [r3, #0]
  40021c:	f01e 0f10 	tst.w	lr, #16
  400220:	bf08      	it	eq
  400222:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
  400226:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40022a:	6010      	str	r0, [r2, #0]
  40022c:	f84d 3d04 	str.w	r3, [sp, #-4]!
  400230:	f04f 0080 	mov.w	r0, #128	; 0x80
  400234:	b672      	cpsid	i
  400236:	f380 8811 	msr	BASEPRI, r0
  40023a:	f3bf 8f4f 	dsb	sy
  40023e:	f3bf 8f6f 	isb	sy
  400242:	b662      	cpsie	i
  400244:	f000 f8f0 	bl	400428 <vTaskSwitchContext>
  400248:	f04f 0000 	mov.w	r0, #0
  40024c:	f380 8811 	msr	BASEPRI, r0
  400250:	bc08      	pop	{r3}
  400252:	6819      	ldr	r1, [r3, #0]
  400254:	6808      	ldr	r0, [r1, #0]
  400256:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40025a:	f01e 0f10 	tst.w	lr, #16
  40025e:	bf08      	it	eq
  400260:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
  400264:	f380 8809 	msr	PSP, r0
  400268:	f3bf 8f6f 	isb	sy
  40026c:	4770      	bx	lr
  40026e:	bf00      	nop

00400270 <pxCurrentTCBConst>:
  400270:	204009dc 	.word	0x204009dc
  400274:	4770      	bx	lr
  400276:	bf00      	nop

00400278 <SysTick_Handler>:
	);
}
/*-----------------------------------------------------------*/

void xPortSysTickHandler( void )
{
  400278:	b508      	push	{r3, lr}

portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
{
uint32_t ulOriginalBASEPRI, ulNewBASEPRI;

	__asm volatile
  40027a:	f3ef 8311 	mrs	r3, BASEPRI
  40027e:	f04f 0280 	mov.w	r2, #128	; 0x80
  400282:	b672      	cpsid	i
  400284:	f382 8811 	msr	BASEPRI, r2
  400288:	f3bf 8f6f 	isb	sy
  40028c:	f3bf 8f4f 	dsb	sy
  400290:	b662      	cpsie	i
	save and then restore the interrupt mask value as its value is already
	known. */
	( void ) portSET_INTERRUPT_MASK_FROM_ISR();
	{
		/* Increment the RTOS tick. */
		if( xTaskIncrementTick() != pdFALSE )
  400292:	4b05      	ldr	r3, [pc, #20]	; (4002a8 <SysTick_Handler+0x30>)
  400294:	4798      	blx	r3
  400296:	b118      	cbz	r0, 4002a0 <SysTick_Handler+0x28>
		{
			/* A context switch is required.  Context switching is performed in
			the PendSV interrupt.  Pend the PendSV interrupt. */
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
  400298:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  40029c:	4b03      	ldr	r3, [pc, #12]	; (4002ac <SysTick_Handler+0x34>)
  40029e:	601a      	str	r2, [r3, #0]
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
  4002a0:	2300      	movs	r3, #0
  4002a2:	f383 8811 	msr	BASEPRI, r3
  4002a6:	bd08      	pop	{r3, pc}
  4002a8:	004002dd 	.word	0x004002dd
  4002ac:	e000ed04 	.word	0xe000ed04

004002b0 <prvResetNextTaskUnblockTime>:

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
  4002b0:	4b08      	ldr	r3, [pc, #32]	; (4002d4 <prvResetNextTaskUnblockTime+0x24>)
  4002b2:	681b      	ldr	r3, [r3, #0]
  4002b4:	681b      	ldr	r3, [r3, #0]
  4002b6:	b13b      	cbz	r3, 4002c8 <prvResetNextTaskUnblockTime+0x18>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
  4002b8:	4b06      	ldr	r3, [pc, #24]	; (4002d4 <prvResetNextTaskUnblockTime+0x24>)
  4002ba:	681b      	ldr	r3, [r3, #0]
  4002bc:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xGenericListItem ) );
  4002be:	68db      	ldr	r3, [r3, #12]
  4002c0:	685a      	ldr	r2, [r3, #4]
  4002c2:	4b05      	ldr	r3, [pc, #20]	; (4002d8 <prvResetNextTaskUnblockTime+0x28>)
  4002c4:	601a      	str	r2, [r3, #0]
  4002c6:	4770      	bx	lr
		xNextTaskUnblockTime = portMAX_DELAY;
  4002c8:	f04f 32ff 	mov.w	r2, #4294967295
  4002cc:	4b02      	ldr	r3, [pc, #8]	; (4002d8 <prvResetNextTaskUnblockTime+0x28>)
  4002ce:	601a      	str	r2, [r3, #0]
  4002d0:	4770      	bx	lr
  4002d2:	bf00      	nop
  4002d4:	204009e0 	.word	0x204009e0
  4002d8:	20400a58 	.word	0x20400a58

004002dc <xTaskIncrementTick>:
{
  4002dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
  4002e0:	4b42      	ldr	r3, [pc, #264]	; (4003ec <xTaskIncrementTick+0x110>)
  4002e2:	681b      	ldr	r3, [r3, #0]
  4002e4:	2b00      	cmp	r3, #0
  4002e6:	d178      	bne.n	4003da <xTaskIncrementTick+0xfe>
		++xTickCount;
  4002e8:	4b41      	ldr	r3, [pc, #260]	; (4003f0 <xTaskIncrementTick+0x114>)
  4002ea:	681a      	ldr	r2, [r3, #0]
  4002ec:	3201      	adds	r2, #1
  4002ee:	601a      	str	r2, [r3, #0]
			const TickType_t xConstTickCount = xTickCount;
  4002f0:	681e      	ldr	r6, [r3, #0]
			if( xConstTickCount == ( TickType_t ) 0U )
  4002f2:	b9d6      	cbnz	r6, 40032a <xTaskIncrementTick+0x4e>
				taskSWITCH_DELAYED_LISTS();
  4002f4:	4b3f      	ldr	r3, [pc, #252]	; (4003f4 <xTaskIncrementTick+0x118>)
  4002f6:	681b      	ldr	r3, [r3, #0]
  4002f8:	681b      	ldr	r3, [r3, #0]
  4002fa:	b153      	cbz	r3, 400312 <xTaskIncrementTick+0x36>
	__asm volatile
  4002fc:	f04f 0380 	mov.w	r3, #128	; 0x80
  400300:	b672      	cpsid	i
  400302:	f383 8811 	msr	BASEPRI, r3
  400306:	f3bf 8f6f 	isb	sy
  40030a:	f3bf 8f4f 	dsb	sy
  40030e:	b662      	cpsie	i
  400310:	e7fe      	b.n	400310 <xTaskIncrementTick+0x34>
  400312:	4a38      	ldr	r2, [pc, #224]	; (4003f4 <xTaskIncrementTick+0x118>)
  400314:	6811      	ldr	r1, [r2, #0]
  400316:	4b38      	ldr	r3, [pc, #224]	; (4003f8 <xTaskIncrementTick+0x11c>)
  400318:	6818      	ldr	r0, [r3, #0]
  40031a:	6010      	str	r0, [r2, #0]
  40031c:	6019      	str	r1, [r3, #0]
  40031e:	4a37      	ldr	r2, [pc, #220]	; (4003fc <xTaskIncrementTick+0x120>)
  400320:	6813      	ldr	r3, [r2, #0]
  400322:	3301      	adds	r3, #1
  400324:	6013      	str	r3, [r2, #0]
  400326:	4b36      	ldr	r3, [pc, #216]	; (400400 <xTaskIncrementTick+0x124>)
  400328:	4798      	blx	r3
			if( xConstTickCount >= xNextTaskUnblockTime )
  40032a:	4b36      	ldr	r3, [pc, #216]	; (400404 <xTaskIncrementTick+0x128>)
  40032c:	681b      	ldr	r3, [r3, #0]
  40032e:	429e      	cmp	r6, r3
  400330:	d218      	bcs.n	400364 <xTaskIncrementTick+0x88>
BaseType_t xSwitchRequired = pdFALSE;
  400332:	2400      	movs	r4, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
  400334:	4b34      	ldr	r3, [pc, #208]	; (400408 <xTaskIncrementTick+0x12c>)
  400336:	681b      	ldr	r3, [r3, #0]
  400338:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  40033a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
  40033e:	4a33      	ldr	r2, [pc, #204]	; (40040c <xTaskIncrementTick+0x130>)
  400340:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
				xSwitchRequired = pdTRUE;
  400344:	2b02      	cmp	r3, #2
  400346:	bf28      	it	cs
  400348:	2401      	movcs	r4, #1
			if( uxPendedTicks == ( UBaseType_t ) 0U )
  40034a:	4b31      	ldr	r3, [pc, #196]	; (400410 <xTaskIncrementTick+0x134>)
  40034c:	681b      	ldr	r3, [r3, #0]
  40034e:	b90b      	cbnz	r3, 400354 <xTaskIncrementTick+0x78>
				vApplicationTickHook();
  400350:	4b30      	ldr	r3, [pc, #192]	; (400414 <xTaskIncrementTick+0x138>)
  400352:	4798      	blx	r3
		if( xYieldPending != pdFALSE )
  400354:	4b30      	ldr	r3, [pc, #192]	; (400418 <xTaskIncrementTick+0x13c>)
  400356:	681b      	ldr	r3, [r3, #0]
			xSwitchRequired = pdTRUE;
  400358:	2b00      	cmp	r3, #0
}
  40035a:	bf0c      	ite	eq
  40035c:	4620      	moveq	r0, r4
  40035e:	2001      	movne	r0, #1
  400360:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  400364:	2400      	movs	r4, #0
					if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
  400366:	f8df 908c 	ldr.w	r9, [pc, #140]	; 4003f4 <xTaskIncrementTick+0x118>
						( void ) uxListRemove( &( pxTCB->xGenericListItem ) );
  40036a:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 400424 <xTaskIncrementTick+0x148>
						prvAddTaskToReadyList( pxTCB );
  40036e:	4f2b      	ldr	r7, [pc, #172]	; (40041c <xTaskIncrementTick+0x140>)
  400370:	e01f      	b.n	4003b2 <xTaskIncrementTick+0xd6>
						xNextTaskUnblockTime = portMAX_DELAY;
  400372:	f04f 32ff 	mov.w	r2, #4294967295
  400376:	4b23      	ldr	r3, [pc, #140]	; (400404 <xTaskIncrementTick+0x128>)
  400378:	601a      	str	r2, [r3, #0]
						break;
  40037a:	e7db      	b.n	400334 <xTaskIncrementTick+0x58>
							xNextTaskUnblockTime = xItemValue;
  40037c:	4a21      	ldr	r2, [pc, #132]	; (400404 <xTaskIncrementTick+0x128>)
  40037e:	6013      	str	r3, [r2, #0]
							break;
  400380:	e7d8      	b.n	400334 <xTaskIncrementTick+0x58>
							( void ) uxListRemove( &( pxTCB->xEventListItem ) );
  400382:	f105 0018 	add.w	r0, r5, #24
  400386:	47c0      	blx	r8
						prvAddTaskToReadyList( pxTCB );
  400388:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
  40038a:	683a      	ldr	r2, [r7, #0]
  40038c:	2301      	movs	r3, #1
  40038e:	4083      	lsls	r3, r0
  400390:	4313      	orrs	r3, r2
  400392:	603b      	str	r3, [r7, #0]
  400394:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  400398:	4651      	mov	r1, sl
  40039a:	4b1c      	ldr	r3, [pc, #112]	; (40040c <xTaskIncrementTick+0x130>)
  40039c:	eb03 0080 	add.w	r0, r3, r0, lsl #2
  4003a0:	4b1f      	ldr	r3, [pc, #124]	; (400420 <xTaskIncrementTick+0x144>)
  4003a2:	4798      	blx	r3
							if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
  4003a4:	4b18      	ldr	r3, [pc, #96]	; (400408 <xTaskIncrementTick+0x12c>)
  4003a6:	681b      	ldr	r3, [r3, #0]
  4003a8:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  4003aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
								xSwitchRequired = pdTRUE;
  4003ac:	429a      	cmp	r2, r3
  4003ae:	bf28      	it	cs
  4003b0:	2401      	movcs	r4, #1
					if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
  4003b2:	f8d9 3000 	ldr.w	r3, [r9]
  4003b6:	681b      	ldr	r3, [r3, #0]
  4003b8:	2b00      	cmp	r3, #0
  4003ba:	d0da      	beq.n	400372 <xTaskIncrementTick+0x96>
						pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
  4003bc:	f8d9 3000 	ldr.w	r3, [r9]
  4003c0:	68db      	ldr	r3, [r3, #12]
  4003c2:	68dd      	ldr	r5, [r3, #12]
						xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xGenericListItem ) );
  4003c4:	686b      	ldr	r3, [r5, #4]
						if( xConstTickCount < xItemValue )
  4003c6:	429e      	cmp	r6, r3
  4003c8:	d3d8      	bcc.n	40037c <xTaskIncrementTick+0xa0>
						( void ) uxListRemove( &( pxTCB->xGenericListItem ) );
  4003ca:	f105 0a04 	add.w	sl, r5, #4
  4003ce:	4650      	mov	r0, sl
  4003d0:	47c0      	blx	r8
						if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
  4003d2:	6aab      	ldr	r3, [r5, #40]	; 0x28
  4003d4:	2b00      	cmp	r3, #0
  4003d6:	d1d4      	bne.n	400382 <xTaskIncrementTick+0xa6>
  4003d8:	e7d6      	b.n	400388 <xTaskIncrementTick+0xac>
		++uxPendedTicks;
  4003da:	4a0d      	ldr	r2, [pc, #52]	; (400410 <xTaskIncrementTick+0x134>)
  4003dc:	6813      	ldr	r3, [r2, #0]
  4003de:	3301      	adds	r3, #1
  4003e0:	6013      	str	r3, [r2, #0]
			vApplicationTickHook();
  4003e2:	4b0c      	ldr	r3, [pc, #48]	; (400414 <xTaskIncrementTick+0x138>)
  4003e4:	4798      	blx	r3
BaseType_t xSwitchRequired = pdFALSE;
  4003e6:	2400      	movs	r4, #0
  4003e8:	e7b4      	b.n	400354 <xTaskIncrementTick+0x78>
  4003ea:	bf00      	nop
  4003ec:	20400a50 	.word	0x20400a50
  4003f0:	20400a60 	.word	0x20400a60
  4003f4:	204009e0 	.word	0x204009e0
  4003f8:	204009e4 	.word	0x204009e4
  4003fc:	20400a5c 	.word	0x20400a5c
  400400:	004002b1 	.word	0x004002b1
  400404:	20400a58 	.word	0x20400a58
  400408:	204009dc 	.word	0x204009dc
  40040c:	204009e8 	.word	0x204009e8
  400410:	20400a4c 	.word	0x20400a4c
  400414:	004012e5 	.word	0x004012e5
  400418:	20400a64 	.word	0x20400a64
  40041c:	20400a54 	.word	0x20400a54
  400420:	004001ad 	.word	0x004001ad
  400424:	004001c5 	.word	0x004001c5

00400428 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
  400428:	4b2d      	ldr	r3, [pc, #180]	; (4004e0 <vTaskSwitchContext+0xb8>)
  40042a:	681b      	ldr	r3, [r3, #0]
  40042c:	2b00      	cmp	r3, #0
  40042e:	d12c      	bne.n	40048a <vTaskSwitchContext+0x62>
{
  400430:	b510      	push	{r4, lr}
		xYieldPending = pdFALSE;
  400432:	2200      	movs	r2, #0
  400434:	4b2b      	ldr	r3, [pc, #172]	; (4004e4 <vTaskSwitchContext+0xbc>)
  400436:	601a      	str	r2, [r3, #0]
		taskCHECK_FOR_STACK_OVERFLOW();
  400438:	4b2b      	ldr	r3, [pc, #172]	; (4004e8 <vTaskSwitchContext+0xc0>)
  40043a:	681b      	ldr	r3, [r3, #0]
  40043c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40043e:	681a      	ldr	r2, [r3, #0]
  400440:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
  400444:	d103      	bne.n	40044e <vTaskSwitchContext+0x26>
  400446:	685a      	ldr	r2, [r3, #4]
  400448:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
  40044c:	d021      	beq.n	400492 <vTaskSwitchContext+0x6a>
  40044e:	4b26      	ldr	r3, [pc, #152]	; (4004e8 <vTaskSwitchContext+0xc0>)
  400450:	6818      	ldr	r0, [r3, #0]
  400452:	6819      	ldr	r1, [r3, #0]
  400454:	3134      	adds	r1, #52	; 0x34
  400456:	4b25      	ldr	r3, [pc, #148]	; (4004ec <vTaskSwitchContext+0xc4>)
  400458:	4798      	blx	r3
		taskSELECT_HIGHEST_PRIORITY_TASK();
  40045a:	4b25      	ldr	r3, [pc, #148]	; (4004f0 <vTaskSwitchContext+0xc8>)
  40045c:	681b      	ldr	r3, [r3, #0]
		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) );
  40045e:	fab3 f383 	clz	r3, r3
  400462:	b2db      	uxtb	r3, r3
  400464:	f1c3 031f 	rsb	r3, r3, #31
  400468:	eb03 0183 	add.w	r1, r3, r3, lsl #2
  40046c:	4a21      	ldr	r2, [pc, #132]	; (4004f4 <vTaskSwitchContext+0xcc>)
  40046e:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
  400472:	b9ba      	cbnz	r2, 4004a4 <vTaskSwitchContext+0x7c>
	__asm volatile
  400474:	f04f 0380 	mov.w	r3, #128	; 0x80
  400478:	b672      	cpsid	i
  40047a:	f383 8811 	msr	BASEPRI, r3
  40047e:	f3bf 8f6f 	isb	sy
  400482:	f3bf 8f4f 	dsb	sy
  400486:	b662      	cpsie	i
  400488:	e7fe      	b.n	400488 <vTaskSwitchContext+0x60>
		xYieldPending = pdTRUE;
  40048a:	2201      	movs	r2, #1
  40048c:	4b15      	ldr	r3, [pc, #84]	; (4004e4 <vTaskSwitchContext+0xbc>)
  40048e:	601a      	str	r2, [r3, #0]
  400490:	4770      	bx	lr
		taskCHECK_FOR_STACK_OVERFLOW();
  400492:	689a      	ldr	r2, [r3, #8]
  400494:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
  400498:	d1d9      	bne.n	40044e <vTaskSwitchContext+0x26>
  40049a:	68db      	ldr	r3, [r3, #12]
  40049c:	f1b3 3fa5 	cmp.w	r3, #2779096485	; 0xa5a5a5a5
  4004a0:	d1d5      	bne.n	40044e <vTaskSwitchContext+0x26>
  4004a2:	e7da      	b.n	40045a <vTaskSwitchContext+0x32>
		taskSELECT_HIGHEST_PRIORITY_TASK();
  4004a4:	4a13      	ldr	r2, [pc, #76]	; (4004f4 <vTaskSwitchContext+0xcc>)
  4004a6:	0099      	lsls	r1, r3, #2
  4004a8:	18c8      	adds	r0, r1, r3
  4004aa:	eb02 0080 	add.w	r0, r2, r0, lsl #2
  4004ae:	6844      	ldr	r4, [r0, #4]
  4004b0:	6864      	ldr	r4, [r4, #4]
  4004b2:	6044      	str	r4, [r0, #4]
  4004b4:	4419      	add	r1, r3
  4004b6:	4602      	mov	r2, r0
  4004b8:	3208      	adds	r2, #8
  4004ba:	4294      	cmp	r4, r2
  4004bc:	d009      	beq.n	4004d2 <vTaskSwitchContext+0xaa>
  4004be:	eb03 0383 	add.w	r3, r3, r3, lsl #2
  4004c2:	4a0c      	ldr	r2, [pc, #48]	; (4004f4 <vTaskSwitchContext+0xcc>)
  4004c4:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  4004c8:	685b      	ldr	r3, [r3, #4]
  4004ca:	68da      	ldr	r2, [r3, #12]
  4004cc:	4b06      	ldr	r3, [pc, #24]	; (4004e8 <vTaskSwitchContext+0xc0>)
  4004ce:	601a      	str	r2, [r3, #0]
  4004d0:	bd10      	pop	{r4, pc}
  4004d2:	6860      	ldr	r0, [r4, #4]
  4004d4:	4a07      	ldr	r2, [pc, #28]	; (4004f4 <vTaskSwitchContext+0xcc>)
  4004d6:	eb02 0281 	add.w	r2, r2, r1, lsl #2
  4004da:	6050      	str	r0, [r2, #4]
  4004dc:	e7ef      	b.n	4004be <vTaskSwitchContext+0x96>
  4004de:	bf00      	nop
  4004e0:	20400a50 	.word	0x20400a50
  4004e4:	20400a64 	.word	0x20400a64
  4004e8:	204009dc 	.word	0x204009dc
  4004ec:	004012cd 	.word	0x004012cd
  4004f0:	20400a54 	.word	0x20400a54
  4004f4:	204009e8 	.word	0x204009e8

004004f8 <DHT_Setup>:
//---------------------------------------------//

//----- Functions -----------------------------//
//Setup sensor.
void DHT_Setup(void)
{
  4004f8:	b508      	push	{r3, lr}
	delay_ms(__DHT_Delay_Setup);
  4004fa:	4803      	ldr	r0, [pc, #12]	; (400508 <DHT_Setup+0x10>)
  4004fc:	4b03      	ldr	r3, [pc, #12]	; (40050c <DHT_Setup+0x14>)
  4004fe:	4798      	blx	r3
	__DHT_STATUS = DHT_Ok;
  400500:	2200      	movs	r2, #0
  400502:	4b03      	ldr	r3, [pc, #12]	; (400510 <DHT_Setup+0x18>)
  400504:	701a      	strb	r2, [r3, #0]
  400506:	bd08      	pop	{r3, pc}
  400508:	06075ed6 	.word	0x06075ed6
  40050c:	20400001 	.word	0x20400001
  400510:	20400b14 	.word	0x20400b14

00400514 <DHT_ReadRaw>:
	return (__DHT_STATUS);
}

//Read raw buffer from sensor.
void DHT_ReadRaw(uint8_t Data[4])
{
  400514:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400518:	b085      	sub	sp, #20
  40051a:	4682      	mov	sl, r0
	uint8_t buffer[5] = {0, 0, 0, 0, 0};
  40051c:	2300      	movs	r3, #0
  40051e:	9302      	str	r3, [sp, #8]
  400520:	f88d 300c 	strb.w	r3, [sp, #12]
	uint8_t retries, i;
	int8_t j;
	__DHT_STATUS = DHT_Ok;
  400524:	4a72      	ldr	r2, [pc, #456]	; (4006f0 <DHT_ReadRaw+0x1dc>)
  400526:	7013      	strb	r3, [r2, #0]
	//----- Step 1 - Start communication -----
	if (__DHT_STATUS == DHT_Ok)
	{
		//Request data
		//#define DHT_Pin		A, 7
		pio_set_output(DHT_PIO, DHT_PIO_PIN_MASK, 1, 0, 0);
  400528:	4c72      	ldr	r4, [pc, #456]	; (4006f4 <DHT_ReadRaw+0x1e0>)
  40052a:	9300      	str	r3, [sp, #0]
  40052c:	2201      	movs	r2, #1
  40052e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  400532:	4620      	mov	r0, r4
  400534:	4d70      	ldr	r5, [pc, #448]	; (4006f8 <DHT_ReadRaw+0x1e4>)
  400536:	47a8      	blx	r5
		pio_clear(DHT_PIO, DHT_PIO_PIN_MASK);
  400538:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  40053c:	4620      	mov	r0, r4
  40053e:	4b6f      	ldr	r3, [pc, #444]	; (4006fc <DHT_ReadRaw+0x1e8>)
  400540:	4798      	blx	r3
		//DigitalWrite(DHT_Pin, Low);			//DHT_PIN = 0
		//PinMode(DHT_Pin, Output);			//DHT_PIN = Output
		
		delay_ms(__DHT_Delay_Read);
  400542:	486f      	ldr	r0, [pc, #444]	; (400700 <DHT_ReadRaw+0x1ec>)
  400544:	4b6f      	ldr	r3, [pc, #444]	; (400704 <DHT_ReadRaw+0x1f0>)
  400546:	4798      	blx	r3
		
		//Setup DHT_PIN as input with pull-up resistor so as to read data
		pio_set(DHT_PIO, DHT_PIO_PIN_MASK);
  400548:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  40054c:	4620      	mov	r0, r4
  40054e:	4b6e      	ldr	r3, [pc, #440]	; (400708 <DHT_ReadRaw+0x1f4>)
  400550:	4798      	blx	r3
		//DigitalWrite(DHT_Pin, High);		//DHT_PIN = 1 (Pull-up resistor)
		//PinMode(DHT_Pin, Input);			//DHT_PIN = Input
		pio_set_input(DHT_PIO, DHT_PIO_PIN_MASK, PIO_PULLUP);
  400552:	2201      	movs	r2, #1
  400554:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  400558:	4620      	mov	r0, r4
  40055a:	4b6c      	ldr	r3, [pc, #432]	; (40070c <DHT_ReadRaw+0x1f8>)
  40055c:	4798      	blx	r3

		//Wait for response for 20-40us
		retries = 0;
		//while (DigitalRead(DHT_Pin))
		while (pio_get(DHT_PIO, PIO_INPUT, DHT_PIO_PIN_MASK))
  40055e:	241f      	movs	r4, #31
  400560:	4e64      	ldr	r6, [pc, #400]	; (4006f4 <DHT_ReadRaw+0x1e0>)
  400562:	4d6b      	ldr	r5, [pc, #428]	; (400710 <DHT_ReadRaw+0x1fc>)
		{
			delay_us(2);
  400564:	4f67      	ldr	r7, [pc, #412]	; (400704 <DHT_ReadRaw+0x1f0>)
		while (pio_get(DHT_PIO, PIO_INPUT, DHT_PIO_PIN_MASK))
  400566:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  40056a:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  40056e:	4630      	mov	r0, r6
  400570:	47a8      	blx	r5
  400572:	b158      	cbz	r0, 40058c <DHT_ReadRaw+0x78>
			delay_us(2);
  400574:	2066      	movs	r0, #102	; 0x66
  400576:	47b8      	blx	r7
  400578:	1e63      	subs	r3, r4, #1
			retries += 2;
			if (retries > 60)
  40057a:	f013 04ff 	ands.w	r4, r3, #255	; 0xff
  40057e:	d1f2      	bne.n	400566 <DHT_ReadRaw+0x52>
			{
				__DHT_STATUS = DHT_Error_Timeout;	//Timeout error
  400580:	2204      	movs	r2, #4
  400582:	4b5b      	ldr	r3, [pc, #364]	; (4006f0 <DHT_ReadRaw+0x1dc>)
  400584:	701a      	strb	r2, [r3, #0]
			for (i = 0 ; i < 4 ; i++)
			Data[i] = buffer[i];
		}
	}
	//---------------------------------------------------
}
  400586:	b005      	add	sp, #20
  400588:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	if (__DHT_STATUS == DHT_Ok)
  40058c:	4b58      	ldr	r3, [pc, #352]	; (4006f0 <DHT_ReadRaw+0x1dc>)
  40058e:	781b      	ldrb	r3, [r3, #0]
  400590:	2b00      	cmp	r3, #0
  400592:	d1f8      	bne.n	400586 <DHT_ReadRaw+0x72>
  400594:	2433      	movs	r4, #51	; 0x33
		while (!pio_get(DHT_PIO, PIO_INPUT, DHT_PIO_PIN_MASK))
  400596:	4e57      	ldr	r6, [pc, #348]	; (4006f4 <DHT_ReadRaw+0x1e0>)
  400598:	4d5d      	ldr	r5, [pc, #372]	; (400710 <DHT_ReadRaw+0x1fc>)
			delay_us(2);
  40059a:	4f5a      	ldr	r7, [pc, #360]	; (400704 <DHT_ReadRaw+0x1f0>)
		while (!pio_get(DHT_PIO, PIO_INPUT, DHT_PIO_PIN_MASK))
  40059c:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  4005a0:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  4005a4:	4630      	mov	r0, r6
  4005a6:	47a8      	blx	r5
  4005a8:	b940      	cbnz	r0, 4005bc <DHT_ReadRaw+0xa8>
			delay_us(2);
  4005aa:	2066      	movs	r0, #102	; 0x66
  4005ac:	47b8      	blx	r7
  4005ae:	1e63      	subs	r3, r4, #1
			if (retries > 100)
  4005b0:	f013 04ff 	ands.w	r4, r3, #255	; 0xff
  4005b4:	d1f2      	bne.n	40059c <DHT_ReadRaw+0x88>
				__DHT_STATUS = DHT_Error_Timeout;	//Timeout error
  4005b6:	2204      	movs	r2, #4
  4005b8:	4b4d      	ldr	r3, [pc, #308]	; (4006f0 <DHT_ReadRaw+0x1dc>)
  4005ba:	701a      	strb	r2, [r3, #0]
  4005bc:	2433      	movs	r4, #51	; 0x33
		while(pio_get(DHT_PIO, PIO_INPUT, DHT_PIO_PIN_MASK))
  4005be:	4e4d      	ldr	r6, [pc, #308]	; (4006f4 <DHT_ReadRaw+0x1e0>)
  4005c0:	4d53      	ldr	r5, [pc, #332]	; (400710 <DHT_ReadRaw+0x1fc>)
			delay_us(2);
  4005c2:	4f50      	ldr	r7, [pc, #320]	; (400704 <DHT_ReadRaw+0x1f0>)
		while(pio_get(DHT_PIO, PIO_INPUT, DHT_PIO_PIN_MASK))
  4005c4:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  4005c8:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  4005cc:	4630      	mov	r0, r6
  4005ce:	47a8      	blx	r5
  4005d0:	b148      	cbz	r0, 4005e6 <DHT_ReadRaw+0xd2>
			delay_us(2);
  4005d2:	2066      	movs	r0, #102	; 0x66
  4005d4:	47b8      	blx	r7
  4005d6:	1e63      	subs	r3, r4, #1
			if (retries > 100)
  4005d8:	f013 04ff 	ands.w	r4, r3, #255	; 0xff
  4005dc:	d1f2      	bne.n	4005c4 <DHT_ReadRaw+0xb0>
				__DHT_STATUS = DHT_Error_Timeout;	//Timeout error
  4005de:	2204      	movs	r2, #4
  4005e0:	4b43      	ldr	r3, [pc, #268]	; (4006f0 <DHT_ReadRaw+0x1dc>)
  4005e2:	701a      	strb	r2, [r3, #0]
				break;
  4005e4:	e7cf      	b.n	400586 <DHT_ReadRaw+0x72>
	if (__DHT_STATUS == DHT_Ok)
  4005e6:	4b42      	ldr	r3, [pc, #264]	; (4006f0 <DHT_ReadRaw+0x1dc>)
  4005e8:	781b      	ldrb	r3, [r3, #0]
  4005ea:	2b00      	cmp	r3, #0
  4005ec:	d1cb      	bne.n	400586 <DHT_ReadRaw+0x72>
  4005ee:	f04f 0800 	mov.w	r8, #0
			while(!pio_get(DHT_PIO, PIO_INPUT, DHT_PIO_PIN_MASK))
  4005f2:	4d40      	ldr	r5, [pc, #256]	; (4006f4 <DHT_ReadRaw+0x1e0>)
				delay_us(2);
  4005f4:	4e43      	ldr	r6, [pc, #268]	; (400704 <DHT_ReadRaw+0x1f0>)
			while(!pio_get(DHT_PIO, PIO_INPUT, DHT_PIO_PIN_MASK))
  4005f6:	4c46      	ldr	r4, [pc, #280]	; (400710 <DHT_ReadRaw+0x1fc>)
			if (__DHT_STATUS == DHT_Ok)
  4005f8:	f8df 90f4 	ldr.w	r9, [pc, #244]	; 4006f0 <DHT_ReadRaw+0x1dc>
  4005fc:	e025      	b.n	40064a <DHT_ReadRaw+0x136>
  4005fe:	f899 3000 	ldrb.w	r3, [r9]
  400602:	b323      	cbz	r3, 40064e <DHT_ReadRaw+0x13a>
  400604:	4643      	mov	r3, r8
		for (j = 7 ; j >= 0 ; j--)
  400606:	3f01      	subs	r7, #1
  400608:	b27f      	sxtb	r7, r7
  40060a:	2f00      	cmp	r7, #0
  40060c:	db16      	blt.n	40063c <DHT_ReadRaw+0x128>
  40060e:	4698      	mov	r8, r3
  400610:	f04f 0b24 	mov.w	fp, #36	; 0x24
			while(!pio_get(DHT_PIO, PIO_INPUT, DHT_PIO_PIN_MASK))
  400614:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  400618:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  40061c:	4628      	mov	r0, r5
  40061e:	47a0      	blx	r4
  400620:	2800      	cmp	r0, #0
  400622:	d1ec      	bne.n	4005fe <DHT_ReadRaw+0xea>
				delay_us(2);
  400624:	2066      	movs	r0, #102	; 0x66
  400626:	47b0      	blx	r6
  400628:	f10b 33ff 	add.w	r3, fp, #4294967295
				if (retries > 70)
  40062c:	f013 0bff 	ands.w	fp, r3, #255	; 0xff
  400630:	d1f0      	bne.n	400614 <DHT_ReadRaw+0x100>
					__DHT_STATUS = DHT_Error_Timeout;	//Timeout error
  400632:	2304      	movs	r3, #4
  400634:	f889 3000 	strb.w	r3, [r9]
					i = 5;								//Break outer for-loop
  400638:	f04f 0805 	mov.w	r8, #5
		for (i = 0 ; i < 5 ; i++)
  40063c:	f108 0801 	add.w	r8, r8, #1
  400640:	fa5f f888 	uxtb.w	r8, r8
  400644:	f1b8 0f04 	cmp.w	r8, #4
  400648:	d82c      	bhi.n	4006a4 <DHT_ReadRaw+0x190>
  40064a:	2707      	movs	r7, #7
  40064c:	e7e0      	b.n	400610 <DHT_ReadRaw+0xfc>
				delay_us(35);
  40064e:	f240 60eb 	movw	r0, #1771	; 0x6eb
  400652:	47b0      	blx	r6
				if (pio_get(DHT_PIO, PIO_INPUT, DHT_PIO_PIN_MASK))
  400654:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  400658:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  40065c:	4628      	mov	r0, r5
  40065e:	47a0      	blx	r4
  400660:	b148      	cbz	r0, 400676 <DHT_ReadRaw+0x162>
				BitSet(buffer[i], j);				//bit = '1'
  400662:	2201      	movs	r2, #1
  400664:	fa02 f107 	lsl.w	r1, r2, r7
  400668:	ab04      	add	r3, sp, #16
  40066a:	4443      	add	r3, r8
  40066c:	f813 2c08 	ldrb.w	r2, [r3, #-8]
  400670:	430a      	orrs	r2, r1
  400672:	f803 2c08 	strb.w	r2, [r3, #-8]
  400676:	f04f 0b33 	mov.w	fp, #51	; 0x33
				while(pio_get(DHT_PIO, PIO_INPUT, DHT_PIO_PIN_MASK))
  40067a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  40067e:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  400682:	4628      	mov	r0, r5
  400684:	47a0      	blx	r4
  400686:	b158      	cbz	r0, 4006a0 <DHT_ReadRaw+0x18c>
					delay_us(2);
  400688:	2066      	movs	r0, #102	; 0x66
  40068a:	47b0      	blx	r6
  40068c:	f10b 33ff 	add.w	r3, fp, #4294967295
					if (retries > 100)
  400690:	f013 0bff 	ands.w	fp, r3, #255	; 0xff
  400694:	d1f1      	bne.n	40067a <DHT_ReadRaw+0x166>
						__DHT_STATUS = DHT_Error_Timeout;	//Timeout error
  400696:	2304      	movs	r3, #4
  400698:	f889 3000 	strb.w	r3, [r9]
						break;
  40069c:	4643      	mov	r3, r8
  40069e:	e7b2      	b.n	400606 <DHT_ReadRaw+0xf2>
  4006a0:	4643      	mov	r3, r8
  4006a2:	e7b0      	b.n	400606 <DHT_ReadRaw+0xf2>
	if (__DHT_STATUS == DHT_Ok)
  4006a4:	4b12      	ldr	r3, [pc, #72]	; (4006f0 <DHT_ReadRaw+0x1dc>)
  4006a6:	781b      	ldrb	r3, [r3, #0]
  4006a8:	2b00      	cmp	r3, #0
  4006aa:	f47f af6c 	bne.w	400586 <DHT_ReadRaw+0x72>
		if (((uint8_t)(buffer[0] + buffer[1] + buffer[2] + buffer[3])) != buffer[4])
  4006ae:	f89d 3008 	ldrb.w	r3, [sp, #8]
  4006b2:	f89d 2009 	ldrb.w	r2, [sp, #9]
  4006b6:	4413      	add	r3, r2
  4006b8:	f89d 200a 	ldrb.w	r2, [sp, #10]
  4006bc:	4413      	add	r3, r2
  4006be:	f89d 200b 	ldrb.w	r2, [sp, #11]
  4006c2:	4413      	add	r3, r2
  4006c4:	f89d 200c 	ldrb.w	r2, [sp, #12]
  4006c8:	b2db      	uxtb	r3, r3
  4006ca:	429a      	cmp	r2, r3
  4006cc:	d003      	beq.n	4006d6 <DHT_ReadRaw+0x1c2>
			__DHT_STATUS = DHT_Error_Checksum;	//Checksum error
  4006ce:	2203      	movs	r2, #3
  4006d0:	4b07      	ldr	r3, [pc, #28]	; (4006f0 <DHT_ReadRaw+0x1dc>)
  4006d2:	701a      	strb	r2, [r3, #0]
  4006d4:	e757      	b.n	400586 <DHT_ReadRaw+0x72>
  4006d6:	aa02      	add	r2, sp, #8
  4006d8:	f10a 33ff 	add.w	r3, sl, #4294967295
  4006dc:	f10a 0a03 	add.w	sl, sl, #3
			Data[i] = buffer[i];
  4006e0:	f812 1b01 	ldrb.w	r1, [r2], #1
  4006e4:	f803 1f01 	strb.w	r1, [r3, #1]!
			for (i = 0 ; i < 4 ; i++)
  4006e8:	459a      	cmp	sl, r3
  4006ea:	d1f9      	bne.n	4006e0 <DHT_ReadRaw+0x1cc>
  4006ec:	e74b      	b.n	400586 <DHT_ReadRaw+0x72>
  4006ee:	bf00      	nop
  4006f0:	20400b14 	.word	0x20400b14
  4006f4:	400e1200 	.word	0x400e1200
  4006f8:	00400af5 	.word	0x00400af5
  4006fc:	00400aa1 	.word	0x00400aa1
  400700:	000f6f08 	.word	0x000f6f08
  400704:	20400001 	.word	0x20400001
  400708:	00400a9d 	.word	0x00400a9d
  40070c:	00400abf 	.word	0x00400abf
  400710:	00400aa5 	.word	0x00400aa5

00400714 <DHT_Read>:
	DHT_Read(waste, Humidity);
}

//Read temperature and humidity.
void DHT_Read(double *Temperature, double *Humidity)
{
  400714:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400718:	b082      	sub	sp, #8
  40071a:	4604      	mov	r4, r0
  40071c:	460d      	mov	r5, r1
	uint8_t data[4] = {0, 0, 0, 0};
  40071e:	a802      	add	r0, sp, #8
  400720:	2300      	movs	r3, #0
  400722:	f840 3d04 	str.w	r3, [r0, #-4]!

	//Read data
	DHT_ReadRaw(data);
  400726:	4b2d      	ldr	r3, [pc, #180]	; (4007dc <DHT_Read+0xc8>)
  400728:	4798      	blx	r3
	
	//If read successfully
	if (__DHT_STATUS == DHT_Ok)
  40072a:	4b2d      	ldr	r3, [pc, #180]	; (4007e0 <DHT_Read+0xcc>)
  40072c:	781b      	ldrb	r3, [r3, #0]
  40072e:	2b00      	cmp	r3, #0
  400730:	d151      	bne.n	4007d6 <DHT_Read+0xc2>
	{
		//Calculate values
		*Temperature = DataToTemp(data[2], data[3]);
  400732:	f89d 3006 	ldrb.w	r3, [sp, #6]
  400736:	f89d 0007 	ldrb.w	r0, [sp, #7]
//Convert temperature data to double temperature.
static double DataToTemp(uint8_t Data2, uint8_t Data3)
{
	double temp = 0.0;
	//BitCheck está no MacroIO.h
	temp = (BitCheck(Data2, 7) ? ((((Data2 & 0x7F) << 8) | Data3) / (-10.0)) : (((Data2 << 8) | Data3) / 10.0));
  40073a:	f013 0f80 	tst.w	r3, #128	; 0x80
  40073e:	d13c      	bne.n	4007ba <DHT_Read+0xa6>
  400740:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
  400744:	4b27      	ldr	r3, [pc, #156]	; (4007e4 <DHT_Read+0xd0>)
  400746:	4798      	blx	r3
  400748:	2200      	movs	r2, #0
  40074a:	4b27      	ldr	r3, [pc, #156]	; (4007e8 <DHT_Read+0xd4>)
  40074c:	4e27      	ldr	r6, [pc, #156]	; (4007ec <DHT_Read+0xd8>)
  40074e:	47b0      	blx	r6
		*Temperature = DataToTemp(data[2], data[3]);
  400750:	e9c4 0100 	strd	r0, r1, [r4]
}

static double DataToHum(uint8_t Data0, uint8_t Data1)
{
	double hum = 0.0;
	hum = ((Data0<<8) | Data1) / 10.0;
  400754:	f89d 0004 	ldrb.w	r0, [sp, #4]
  400758:	f89d 3005 	ldrb.w	r3, [sp, #5]
  40075c:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
  400760:	4b20      	ldr	r3, [pc, #128]	; (4007e4 <DHT_Read+0xd0>)
  400762:	4798      	blx	r3
  400764:	2200      	movs	r2, #0
  400766:	4b20      	ldr	r3, [pc, #128]	; (4007e8 <DHT_Read+0xd4>)
  400768:	4e20      	ldr	r6, [pc, #128]	; (4007ec <DHT_Read+0xd8>)
  40076a:	47b0      	blx	r6
  40076c:	4606      	mov	r6, r0
  40076e:	460f      	mov	r7, r1
		*Humidity = DataToHum(data[0], data[1]);
  400770:	e9c5 6700 	strd	r6, r7, [r5]
		if ((*Temperature < __DHT_Temperature_Min) || (*Temperature > __DHT_Temperature_Max))
  400774:	e9d4 4500 	ldrd	r4, r5, [r4]
  400778:	2200      	movs	r2, #0
  40077a:	4b1d      	ldr	r3, [pc, #116]	; (4007f0 <DHT_Read+0xdc>)
  40077c:	4620      	mov	r0, r4
  40077e:	4629      	mov	r1, r5
  400780:	f8df 8078 	ldr.w	r8, [pc, #120]	; 4007fc <DHT_Read+0xe8>
  400784:	47c0      	blx	r8
  400786:	bb18      	cbnz	r0, 4007d0 <DHT_Read+0xbc>
  400788:	2200      	movs	r2, #0
  40078a:	4b1a      	ldr	r3, [pc, #104]	; (4007f4 <DHT_Read+0xe0>)
  40078c:	4620      	mov	r0, r4
  40078e:	4629      	mov	r1, r5
  400790:	4c19      	ldr	r4, [pc, #100]	; (4007f8 <DHT_Read+0xe4>)
  400792:	47a0      	blx	r4
  400794:	b9e0      	cbnz	r0, 4007d0 <DHT_Read+0xbc>
		else if ((*Humidity < __DHT_Humidity_Min) || (*Humidity > __DHT_Humidity_Max))
  400796:	2200      	movs	r2, #0
  400798:	2300      	movs	r3, #0
  40079a:	4630      	mov	r0, r6
  40079c:	4639      	mov	r1, r7
  40079e:	4c17      	ldr	r4, [pc, #92]	; (4007fc <DHT_Read+0xe8>)
  4007a0:	47a0      	blx	r4
  4007a2:	b930      	cbnz	r0, 4007b2 <DHT_Read+0x9e>
  4007a4:	2200      	movs	r2, #0
  4007a6:	4b16      	ldr	r3, [pc, #88]	; (400800 <DHT_Read+0xec>)
  4007a8:	4630      	mov	r0, r6
  4007aa:	4639      	mov	r1, r7
  4007ac:	4c12      	ldr	r4, [pc, #72]	; (4007f8 <DHT_Read+0xe4>)
  4007ae:	47a0      	blx	r4
  4007b0:	b188      	cbz	r0, 4007d6 <DHT_Read+0xc2>
		__DHT_STATUS = DHT_Error_Humidity;
  4007b2:	2201      	movs	r2, #1
  4007b4:	4b0a      	ldr	r3, [pc, #40]	; (4007e0 <DHT_Read+0xcc>)
  4007b6:	701a      	strb	r2, [r3, #0]
}
  4007b8:	e00d      	b.n	4007d6 <DHT_Read+0xc2>
	temp = (BitCheck(Data2, 7) ? ((((Data2 & 0x7F) << 8) | Data3) / (-10.0)) : (((Data2 << 8) | Data3) / 10.0));
  4007ba:	021b      	lsls	r3, r3, #8
  4007bc:	f403 43fe 	and.w	r3, r3, #32512	; 0x7f00
  4007c0:	4318      	orrs	r0, r3
  4007c2:	4b08      	ldr	r3, [pc, #32]	; (4007e4 <DHT_Read+0xd0>)
  4007c4:	4798      	blx	r3
  4007c6:	2200      	movs	r2, #0
  4007c8:	4b0e      	ldr	r3, [pc, #56]	; (400804 <DHT_Read+0xf0>)
  4007ca:	4e08      	ldr	r6, [pc, #32]	; (4007ec <DHT_Read+0xd8>)
  4007cc:	47b0      	blx	r6
  4007ce:	e7bf      	b.n	400750 <DHT_Read+0x3c>
		__DHT_STATUS = DHT_Error_Temperature;
  4007d0:	2202      	movs	r2, #2
  4007d2:	4b03      	ldr	r3, [pc, #12]	; (4007e0 <DHT_Read+0xcc>)
  4007d4:	701a      	strb	r2, [r3, #0]
}
  4007d6:	b002      	add	sp, #8
  4007d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4007dc:	00400515 	.word	0x00400515
  4007e0:	20400b14 	.word	0x20400b14
  4007e4:	0040168d 	.word	0x0040168d
  4007e8:	40240000 	.word	0x40240000
  4007ec:	004019ad 	.word	0x004019ad
  4007f0:	c0440000 	.word	0xc0440000
  4007f4:	40540000 	.word	0x40540000
  4007f8:	00401c79 	.word	0x00401c79
  4007fc:	00401c3d 	.word	0x00401c3d
  400800:	40590000 	.word	0x40590000
  400804:	c0240000 	.word	0xc0240000

00400808 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400808:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  40080a:	4810      	ldr	r0, [pc, #64]	; (40084c <sysclk_init+0x44>)
  40080c:	4b10      	ldr	r3, [pc, #64]	; (400850 <sysclk_init+0x48>)
  40080e:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400810:	213e      	movs	r1, #62	; 0x3e
  400812:	2000      	movs	r0, #0
  400814:	4b0f      	ldr	r3, [pc, #60]	; (400854 <sysclk_init+0x4c>)
  400816:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400818:	4c0f      	ldr	r4, [pc, #60]	; (400858 <sysclk_init+0x50>)
  40081a:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  40081c:	2800      	cmp	r0, #0
  40081e:	d0fc      	beq.n	40081a <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400820:	4b0e      	ldr	r3, [pc, #56]	; (40085c <sysclk_init+0x54>)
  400822:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400824:	4a0e      	ldr	r2, [pc, #56]	; (400860 <sysclk_init+0x58>)
  400826:	4b0f      	ldr	r3, [pc, #60]	; (400864 <sysclk_init+0x5c>)
  400828:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
	return pmc_is_locked_pllack();
  40082a:	4c0f      	ldr	r4, [pc, #60]	; (400868 <sysclk_init+0x60>)
  40082c:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  40082e:	2800      	cmp	r0, #0
  400830:	d0fc      	beq.n	40082c <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
  400832:	2002      	movs	r0, #2
  400834:	4b0d      	ldr	r3, [pc, #52]	; (40086c <sysclk_init+0x64>)
  400836:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400838:	2000      	movs	r0, #0
  40083a:	4b0d      	ldr	r3, [pc, #52]	; (400870 <sysclk_init+0x68>)
  40083c:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}
	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  40083e:	4b0d      	ldr	r3, [pc, #52]	; (400874 <sysclk_init+0x6c>)
  400840:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  400842:	4802      	ldr	r0, [pc, #8]	; (40084c <sysclk_init+0x44>)
  400844:	4b02      	ldr	r3, [pc, #8]	; (400850 <sysclk_init+0x48>)
  400846:	4798      	blx	r3
  400848:	bd10      	pop	{r4, pc}
  40084a:	bf00      	nop
  40084c:	11e1a300 	.word	0x11e1a300
  400850:	00401059 	.word	0x00401059
  400854:	00400c75 	.word	0x00400c75
  400858:	00400cc9 	.word	0x00400cc9
  40085c:	00400cd9 	.word	0x00400cd9
  400860:	20183f01 	.word	0x20183f01
  400864:	400e0600 	.word	0x400e0600
  400868:	00400ce9 	.word	0x00400ce9
  40086c:	00400bd9 	.word	0x00400bd9
  400870:	00400c11 	.word	0x00400c11
  400874:	00400f4d 	.word	0x00400f4d

00400878 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  400878:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
  40087c:	b980      	cbnz	r0, 4008a0 <_read+0x28>
  40087e:	460c      	mov	r4, r1
  400880:	4690      	mov	r8, r2
		return -1;
	}

	for (; len > 0; --len) {
  400882:	2a00      	cmp	r2, #0
  400884:	dd0f      	ble.n	4008a6 <_read+0x2e>
  400886:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
  400888:	4e08      	ldr	r6, [pc, #32]	; (4008ac <_read+0x34>)
  40088a:	4d09      	ldr	r5, [pc, #36]	; (4008b0 <_read+0x38>)
  40088c:	6830      	ldr	r0, [r6, #0]
  40088e:	4621      	mov	r1, r4
  400890:	682b      	ldr	r3, [r5, #0]
  400892:	4798      	blx	r3
		ptr++;
  400894:	3401      	adds	r4, #1
	for (; len > 0; --len) {
  400896:	42bc      	cmp	r4, r7
  400898:	d1f8      	bne.n	40088c <_read+0x14>
		nChars++;
	}
	return nChars;
}
  40089a:	4640      	mov	r0, r8
  40089c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  4008a0:	f04f 38ff 	mov.w	r8, #4294967295
  4008a4:	e7f9      	b.n	40089a <_read+0x22>
	for (; len > 0; --len) {
  4008a6:	4680      	mov	r8, r0
  4008a8:	e7f7      	b.n	40089a <_read+0x22>
  4008aa:	bf00      	nop
  4008ac:	20400b20 	.word	0x20400b20
  4008b0:	20400b18 	.word	0x20400b18

004008b4 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  4008b4:	3801      	subs	r0, #1
  4008b6:	2802      	cmp	r0, #2
  4008b8:	d815      	bhi.n	4008e6 <_write+0x32>
{
  4008ba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4008be:	460e      	mov	r6, r1
  4008c0:	4614      	mov	r4, r2
		return -1;
	}

	for (; len != 0; --len) {
  4008c2:	b19a      	cbz	r2, 4008ec <_write+0x38>
  4008c4:	460d      	mov	r5, r1
		if (ptr_put(stdio_base, *ptr++) < 0) {
  4008c6:	f8df 8038 	ldr.w	r8, [pc, #56]	; 400900 <_write+0x4c>
  4008ca:	4f0c      	ldr	r7, [pc, #48]	; (4008fc <_write+0x48>)
  4008cc:	f8d8 0000 	ldr.w	r0, [r8]
  4008d0:	f815 1b01 	ldrb.w	r1, [r5], #1
  4008d4:	683b      	ldr	r3, [r7, #0]
  4008d6:	4798      	blx	r3
  4008d8:	2800      	cmp	r0, #0
  4008da:	db0a      	blt.n	4008f2 <_write+0x3e>
  4008dc:	1ba8      	subs	r0, r5, r6
	for (; len != 0; --len) {
  4008de:	3c01      	subs	r4, #1
  4008e0:	d1f4      	bne.n	4008cc <_write+0x18>
  4008e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  4008e6:	f04f 30ff 	mov.w	r0, #4294967295
  4008ea:	4770      	bx	lr
	for (; len != 0; --len) {
  4008ec:	4610      	mov	r0, r2
  4008ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			return -1;
  4008f2:	f04f 30ff 	mov.w	r0, #4294967295
		}
		++nChars;
	}
	return nChars;
}
  4008f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4008fa:	bf00      	nop
  4008fc:	20400b1c 	.word	0x20400b1c
  400900:	20400b20 	.word	0x20400b20

00400904 <board_init>:
	__ISB();
}
#endif

void board_init(void)
{
  400904:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  400906:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  40090a:	4b5c      	ldr	r3, [pc, #368]	; (400a7c <board_init+0x178>)
  40090c:	605a      	str	r2, [r3, #4]
    This function acts as a special kind of Data Memory Barrier.
    It completes when all explicit memory accesses before this instruction complete.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
{
  __ASM volatile ("dsb");
  40090e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400912:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache(void)
{
  #if (__ICACHE_PRESENT == 1)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0;                       // invalidate I-Cache
  400916:	4b5a      	ldr	r3, [pc, #360]	; (400a80 <board_init+0x17c>)
  400918:	2200      	movs	r2, #0
  40091a:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
    SCB->CCR |=  SCB_CCR_IC_Msk;            // enable I-Cache
  40091e:	695a      	ldr	r2, [r3, #20]
  400920:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
  400924:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb");
  400926:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  40092a:	f3bf 8f6f 	isb	sy
{
  #if (__DCACHE_PRESENT == 1)
    uint32_t ccsidr, sshift, wshift, sw;
    uint32_t sets, ways;

    ccsidr  = SCB->CCSIDR;
  40092e:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80
    sets    = CCSIDR_SETS(ccsidr);
  400932:	f3c7 364e 	ubfx	r6, r7, #13, #15
    sshift  = CCSIDR_LSSHIFT(ccsidr) + 4;
  400936:	f007 0007 	and.w	r0, r7, #7
  40093a:	3004      	adds	r0, #4
    ways    = CCSIDR_WAYS(ccsidr);
  40093c:	f3c7 07c9 	ubfx	r7, r7, #3, #10
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
  400940:	fab7 fe87 	clz	lr, r7
    wshift  = __CLZ(ways) & 0x1f;
  400944:	f00e 0e1f 	and.w	lr, lr, #31
  __ASM volatile ("dsb");
  400948:	f3bf 8f4f 	dsb	sy
  40094c:	f04f 34ff 	mov.w	r4, #4294967295
  400950:	fa04 fc00 	lsl.w	ip, r4, r0
  400954:	fa06 f000 	lsl.w	r0, r6, r0
  400958:	fa04 f40e 	lsl.w	r4, r4, lr
  40095c:	fa07 fe0e 	lsl.w	lr, r7, lr

    do {                                    // invalidate D-Cache
         int32_t tmpways = ways;
         do {
              sw = ((tmpways << wshift) | (sets << sshift));
              SCB->DCISW = sw;
  400960:	461d      	mov	r5, r3
         int32_t tmpways = ways;
  400962:	463a      	mov	r2, r7
  400964:	4673      	mov	r3, lr
              sw = ((tmpways << wshift) | (sets << sshift));
  400966:	ea40 0103 	orr.w	r1, r0, r3
              SCB->DCISW = sw;
  40096a:	f8c5 1260 	str.w	r1, [r5, #608]	; 0x260
            } while(tmpways--);
  40096e:	3a01      	subs	r2, #1
  400970:	4423      	add	r3, r4
  400972:	f1b2 3fff 	cmp.w	r2, #4294967295
  400976:	d1f6      	bne.n	400966 <board_init+0x62>
        } while(sets--);
  400978:	3e01      	subs	r6, #1
  40097a:	4460      	add	r0, ip
  40097c:	f1b6 3fff 	cmp.w	r6, #4294967295
  400980:	d1ef      	bne.n	400962 <board_init+0x5e>
  400982:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  SCB_CCR_DC_Msk;            // enable D-Cache
  400986:	4b3e      	ldr	r3, [pc, #248]	; (400a80 <board_init+0x17c>)
  400988:	695a      	ldr	r2, [r3, #20]
  40098a:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  40098e:	615a      	str	r2, [r3, #20]
  400990:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400994:	f3bf 8f6f 	isb	sy
		*dst++ = *src++;
	}
#endif
#else
	/* TCM Configuration */
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400998:	4a3a      	ldr	r2, [pc, #232]	; (400a84 <board_init+0x180>)
  40099a:	493b      	ldr	r1, [pc, #236]	; (400a88 <board_init+0x184>)
  40099c:	6051      	str	r1, [r2, #4]
					| EEFC_FCR_FARG(8));
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  40099e:	f5a1 7180 	sub.w	r1, r1, #256	; 0x100
  4009a2:	6051      	str	r1, [r2, #4]
  __ASM volatile ("dsb");
  4009a4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  4009a8:	f3bf 8f6f 	isb	sy
	SCB->ITCMCR &= ~(uint32_t)(1UL);
  4009ac:	f8d3 2290 	ldr.w	r2, [r3, #656]	; 0x290
  4009b0:	f022 0201 	bic.w	r2, r2, #1
  4009b4:	f8c3 2290 	str.w	r2, [r3, #656]	; 0x290
	SCB->DTCMCR &= ~(uint32_t)SCB_DTCMCR_EN_Msk;
  4009b8:	f8d3 2294 	ldr.w	r2, [r3, #660]	; 0x294
  4009bc:	f022 0201 	bic.w	r2, r2, #1
  4009c0:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  __ASM volatile ("dsb");
  4009c4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  4009c8:	f3bf 8f6f 	isb	sy
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  4009cc:	200a      	movs	r0, #10
  4009ce:	4c2f      	ldr	r4, [pc, #188]	; (400a8c <board_init+0x188>)
  4009d0:	47a0      	blx	r4
  4009d2:	200b      	movs	r0, #11
  4009d4:	47a0      	blx	r4
  4009d6:	200c      	movs	r0, #12
  4009d8:	47a0      	blx	r4
  4009da:	2010      	movs	r0, #16
  4009dc:	47a0      	blx	r4
  4009de:	2011      	movs	r0, #17
  4009e0:	47a0      	blx	r4
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  4009e2:	4b2b      	ldr	r3, [pc, #172]	; (400a90 <board_init+0x18c>)
  4009e4:	f44f 7280 	mov.w	r2, #256	; 0x100
  4009e8:	611a      	str	r2, [r3, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4009ea:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  4009ee:	631a      	str	r2, [r3, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  4009f0:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
  4009f4:	f44f 6200 	mov.w	r2, #2048	; 0x800
  4009f8:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4009fa:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  4009fe:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400a00:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  400a04:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFER = mask;
  400a06:	621a      	str	r2, [r3, #32]
		base->PIO_IFSCER = mask;
  400a08:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
		base->PIO_ABCDSR[0] &= ~mask;
  400a0c:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400a0e:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400a12:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400a14:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400a16:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400a1a:	6759      	str	r1, [r3, #116]	; 0x74
	case IOPORT_SENSE_FALLING:
		base->PIO_ESR = mask;
		base->PIO_FELLSR = mask;
		break;
	case IOPORT_SENSE_RISING:
		base->PIO_ESR = mask;
  400a1c:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
		base->PIO_REHLSR = mask;
  400a20:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
		break;
	default:
		base->PIO_AIMDR = mask;
		return;
	}
	base->PIO_AIMER = mask;
  400a24:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
		base->PIO_PUDR = mask;
  400a28:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  400a2c:	661a      	str	r2, [r3, #96]	; 0x60
		base->PIO_PPDDR = mask;
  400a2e:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  400a32:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  400a34:	625a      	str	r2, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400a36:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400a3a:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400a3c:	f421 1100 	bic.w	r1, r1, #2097152	; 0x200000
  400a40:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400a42:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400a44:	f421 1100 	bic.w	r1, r1, #2097152	; 0x200000
  400a48:	6759      	str	r1, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400a4a:	605a      	str	r2, [r3, #4]
			GPIO_PUSH_BUTTON_1_SENSE);

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	ioport_set_pin_peripheral_mode(USART1_RXD_GPIO, USART1_RXD_FLAGS);
	MATRIX->CCFG_SYSIO |= CCFG_SYSIO_SYSIO4;
  400a4c:	4a11      	ldr	r2, [pc, #68]	; (400a94 <board_init+0x190>)
  400a4e:	f8d2 3114 	ldr.w	r3, [r2, #276]	; 0x114
  400a52:	f043 0310 	orr.w	r3, r3, #16
  400a56:	f8c2 3114 	str.w	r3, [r2, #276]	; 0x114
		base->PIO_PUDR = mask;
  400a5a:	4b0f      	ldr	r3, [pc, #60]	; (400a98 <board_init+0x194>)
  400a5c:	2210      	movs	r2, #16
  400a5e:	661a      	str	r2, [r3, #96]	; 0x60
		base->PIO_PPDDR = mask;
  400a60:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  400a64:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  400a66:	625a      	str	r2, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400a68:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] |= mask;
  400a6c:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400a6e:	4311      	orrs	r1, r2
  400a70:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] |= mask;
  400a72:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400a74:	4311      	orrs	r1, r2
  400a76:	6759      	str	r1, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400a78:	605a      	str	r2, [r3, #4]
  400a7a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400a7c:	400e1850 	.word	0x400e1850
  400a80:	e000ed00 	.word	0xe000ed00
  400a84:	400e0c00 	.word	0x400e0c00
  400a88:	5a00080c 	.word	0x5a00080c
  400a8c:	00400cf9 	.word	0x00400cf9
  400a90:	400e1200 	.word	0x400e1200
  400a94:	40088000 	.word	0x40088000
  400a98:	400e1000 	.word	0x400e1000

00400a9c <pio_set>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_SODR = ul_mask;
  400a9c:	6301      	str	r1, [r0, #48]	; 0x30
  400a9e:	4770      	bx	lr

00400aa0 <pio_clear>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_clear(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_CODR = ul_mask;
  400aa0:	6341      	str	r1, [r0, #52]	; 0x34
  400aa2:	4770      	bx	lr

00400aa4 <pio_get>:
uint32_t pio_get(Pio *p_pio, const pio_type_t ul_type,
		const uint32_t ul_mask)
{
	uint32_t ul_reg;

	if ((ul_type == PIO_OUTPUT_0) || (ul_type == PIO_OUTPUT_1)) {
  400aa4:	f021 6100 	bic.w	r1, r1, #134217728	; 0x8000000
  400aa8:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400aac:	d105      	bne.n	400aba <pio_get+0x16>
		ul_reg = p_pio->PIO_ODSR;
  400aae:	6b83      	ldr	r3, [r0, #56]	; 0x38
	} else {
		ul_reg = p_pio->PIO_PDSR;
	}

	if ((ul_reg & ul_mask) == 0) {
  400ab0:	4213      	tst	r3, r2
		return 0;
	} else {
		return 1;
	}
}
  400ab2:	bf14      	ite	ne
  400ab4:	2001      	movne	r0, #1
  400ab6:	2000      	moveq	r0, #0
  400ab8:	4770      	bx	lr
		ul_reg = p_pio->PIO_PDSR;
  400aba:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
  400abc:	e7f8      	b.n	400ab0 <pio_get+0xc>

00400abe <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400abe:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400ac0:	f012 0f01 	tst.w	r2, #1
  400ac4:	d10d      	bne.n	400ae2 <pio_set_input+0x24>
		p_pio->PIO_PUDR = ul_mask;
  400ac6:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400ac8:	f012 0f0a 	tst.w	r2, #10
  400acc:	d00b      	beq.n	400ae6 <pio_set_input+0x28>
		p_pio->PIO_IFER = ul_mask;
  400ace:	6201      	str	r1, [r0, #32]
	if (ul_attribute & PIO_DEGLITCH) {
  400ad0:	f012 0f02 	tst.w	r2, #2
  400ad4:	d109      	bne.n	400aea <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400ad6:	f012 0f08 	tst.w	r2, #8
  400ada:	d008      	beq.n	400aee <pio_set_input+0x30>
			p_pio->PIO_IFSCER = ul_mask;
  400adc:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
  400ae0:	e005      	b.n	400aee <pio_set_input+0x30>
		p_pio->PIO_PUER = ul_mask;
  400ae2:	6641      	str	r1, [r0, #100]	; 0x64
  400ae4:	e7f0      	b.n	400ac8 <pio_set_input+0xa>
		p_pio->PIO_IFDR = ul_mask;
  400ae6:	6241      	str	r1, [r0, #36]	; 0x24
  400ae8:	e7f2      	b.n	400ad0 <pio_set_input+0x12>
		p_pio->PIO_IFSCDR = ul_mask;
  400aea:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
	p_pio->PIO_ODR = ul_mask;
  400aee:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400af0:	6001      	str	r1, [r0, #0]
  400af2:	4770      	bx	lr

00400af4 <pio_set_output>:
{
  400af4:	b410      	push	{r4}
  400af6:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  400af8:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400afa:	b94c      	cbnz	r4, 400b10 <pio_set_output+0x1c>
		p_pio->PIO_PUDR = ul_mask;
  400afc:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400afe:	b14b      	cbz	r3, 400b14 <pio_set_output+0x20>
		p_pio->PIO_MDER = ul_mask;
  400b00:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  400b02:	b94a      	cbnz	r2, 400b18 <pio_set_output+0x24>
		p_pio->PIO_CODR = ul_mask;
  400b04:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  400b06:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400b08:	6001      	str	r1, [r0, #0]
}
  400b0a:	f85d 4b04 	ldr.w	r4, [sp], #4
  400b0e:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400b10:	6641      	str	r1, [r0, #100]	; 0x64
  400b12:	e7f4      	b.n	400afe <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  400b14:	6541      	str	r1, [r0, #84]	; 0x54
  400b16:	e7f4      	b.n	400b02 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  400b18:	6301      	str	r1, [r0, #48]	; 0x30
  400b1a:	e7f4      	b.n	400b06 <pio_set_output+0x12>

00400b1c <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  400b1c:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  400b1e:	4770      	bx	lr

00400b20 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  400b20:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  400b22:	4770      	bx	lr

00400b24 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400b24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400b28:	4604      	mov	r4, r0
  400b2a:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400b2c:	4b0e      	ldr	r3, [pc, #56]	; (400b68 <pio_handler_process+0x44>)
  400b2e:	4798      	blx	r3
  400b30:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400b32:	4620      	mov	r0, r4
  400b34:	4b0d      	ldr	r3, [pc, #52]	; (400b6c <pio_handler_process+0x48>)
  400b36:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400b38:	4005      	ands	r5, r0
  400b3a:	d013      	beq.n	400b64 <pio_handler_process+0x40>
  400b3c:	4c0c      	ldr	r4, [pc, #48]	; (400b70 <pio_handler_process+0x4c>)
  400b3e:	f104 0660 	add.w	r6, r4, #96	; 0x60
  400b42:	e003      	b.n	400b4c <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  400b44:	42b4      	cmp	r4, r6
  400b46:	d00d      	beq.n	400b64 <pio_handler_process+0x40>
  400b48:	3410      	adds	r4, #16
		while (status != 0) {
  400b4a:	b15d      	cbz	r5, 400b64 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400b4c:	6820      	ldr	r0, [r4, #0]
  400b4e:	4540      	cmp	r0, r8
  400b50:	d1f8      	bne.n	400b44 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400b52:	6861      	ldr	r1, [r4, #4]
  400b54:	4229      	tst	r1, r5
  400b56:	d0f5      	beq.n	400b44 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400b58:	68e3      	ldr	r3, [r4, #12]
  400b5a:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400b5c:	6863      	ldr	r3, [r4, #4]
  400b5e:	ea25 0503 	bic.w	r5, r5, r3
  400b62:	e7ef      	b.n	400b44 <pio_handler_process+0x20>
  400b64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400b68:	00400b1d 	.word	0x00400b1d
  400b6c:	00400b21 	.word	0x00400b21
  400b70:	20400a68 	.word	0x20400a68

00400b74 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400b74:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400b76:	210a      	movs	r1, #10
  400b78:	4801      	ldr	r0, [pc, #4]	; (400b80 <PIOA_Handler+0xc>)
  400b7a:	4b02      	ldr	r3, [pc, #8]	; (400b84 <PIOA_Handler+0x10>)
  400b7c:	4798      	blx	r3
  400b7e:	bd08      	pop	{r3, pc}
  400b80:	400e0e00 	.word	0x400e0e00
  400b84:	00400b25 	.word	0x00400b25

00400b88 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400b88:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400b8a:	210b      	movs	r1, #11
  400b8c:	4801      	ldr	r0, [pc, #4]	; (400b94 <PIOB_Handler+0xc>)
  400b8e:	4b02      	ldr	r3, [pc, #8]	; (400b98 <PIOB_Handler+0x10>)
  400b90:	4798      	blx	r3
  400b92:	bd08      	pop	{r3, pc}
  400b94:	400e1000 	.word	0x400e1000
  400b98:	00400b25 	.word	0x00400b25

00400b9c <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  400b9c:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  400b9e:	210c      	movs	r1, #12
  400ba0:	4801      	ldr	r0, [pc, #4]	; (400ba8 <PIOC_Handler+0xc>)
  400ba2:	4b02      	ldr	r3, [pc, #8]	; (400bac <PIOC_Handler+0x10>)
  400ba4:	4798      	blx	r3
  400ba6:	bd08      	pop	{r3, pc}
  400ba8:	400e1200 	.word	0x400e1200
  400bac:	00400b25 	.word	0x00400b25

00400bb0 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
  400bb0:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
  400bb2:	2110      	movs	r1, #16
  400bb4:	4801      	ldr	r0, [pc, #4]	; (400bbc <PIOD_Handler+0xc>)
  400bb6:	4b02      	ldr	r3, [pc, #8]	; (400bc0 <PIOD_Handler+0x10>)
  400bb8:	4798      	blx	r3
  400bba:	bd08      	pop	{r3, pc}
  400bbc:	400e1400 	.word	0x400e1400
  400bc0:	00400b25 	.word	0x00400b25

00400bc4 <PIOE_Handler>:
/**
 * \brief Parallel IO Controller E interrupt handler.
 * Redefined PIOE interrupt handler for NVIC interrupt table.
 */
void PIOE_Handler(void)
{
  400bc4:	b508      	push	{r3, lr}
	pio_handler_process(PIOE, ID_PIOE);
  400bc6:	2111      	movs	r1, #17
  400bc8:	4801      	ldr	r0, [pc, #4]	; (400bd0 <PIOE_Handler+0xc>)
  400bca:	4b02      	ldr	r3, [pc, #8]	; (400bd4 <PIOE_Handler+0x10>)
  400bcc:	4798      	blx	r3
  400bce:	bd08      	pop	{r3, pc}
  400bd0:	400e1600 	.word	0x400e1600
  400bd4:	00400b25 	.word	0x00400b25

00400bd8 <pmc_mck_set_division>:
 *
 * \param ul_div Division value.
 */
void pmc_mck_set_division(uint32_t ul_div)
{
	switch (ul_div) {
  400bd8:	2803      	cmp	r0, #3
  400bda:	d011      	beq.n	400c00 <pmc_mck_set_division+0x28>
  400bdc:	2804      	cmp	r0, #4
  400bde:	d012      	beq.n	400c06 <pmc_mck_set_division+0x2e>
		case 1:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
  400be0:	2802      	cmp	r0, #2
  400be2:	bf0c      	ite	eq
  400be4:	f44f 7180 	moveq.w	r1, #256	; 0x100
  400be8:	2100      	movne	r1, #0
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  400bea:	4a08      	ldr	r2, [pc, #32]	; (400c0c <pmc_mck_set_division+0x34>)
  400bec:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400bee:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  400bf2:	430b      	orrs	r3, r1
	PMC->PMC_MCKR =
  400bf4:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  400bf6:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400bf8:	f013 0f08 	tst.w	r3, #8
  400bfc:	d0fb      	beq.n	400bf6 <pmc_mck_set_division+0x1e>
}
  400bfe:	4770      	bx	lr
			ul_div = PMC_MCKR_MDIV_PCK_DIV3;
  400c00:	f44f 7140 	mov.w	r1, #768	; 0x300
			break;
  400c04:	e7f1      	b.n	400bea <pmc_mck_set_division+0x12>
			ul_div = PMC_MCKR_MDIV_PCK_DIV4;
  400c06:	f44f 7100 	mov.w	r1, #512	; 0x200
			break;
  400c0a:	e7ee      	b.n	400bea <pmc_mck_set_division+0x12>
  400c0c:	400e0600 	.word	0x400e0600

00400c10 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400c10:	4a17      	ldr	r2, [pc, #92]	; (400c70 <pmc_switch_mck_to_pllack+0x60>)
  400c12:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400c14:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400c18:	4318      	orrs	r0, r3
  400c1a:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400c1c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400c1e:	f013 0f08 	tst.w	r3, #8
  400c22:	d10a      	bne.n	400c3a <pmc_switch_mck_to_pllack+0x2a>
  400c24:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  400c28:	4911      	ldr	r1, [pc, #68]	; (400c70 <pmc_switch_mck_to_pllack+0x60>)
  400c2a:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400c2c:	f012 0f08 	tst.w	r2, #8
  400c30:	d103      	bne.n	400c3a <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400c32:	3b01      	subs	r3, #1
  400c34:	d1f9      	bne.n	400c2a <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  400c36:	2001      	movs	r0, #1
  400c38:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400c3a:	4a0d      	ldr	r2, [pc, #52]	; (400c70 <pmc_switch_mck_to_pllack+0x60>)
  400c3c:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400c3e:	f023 0303 	bic.w	r3, r3, #3
  400c42:	f043 0302 	orr.w	r3, r3, #2
  400c46:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400c48:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400c4a:	f013 0f08 	tst.w	r3, #8
  400c4e:	d10a      	bne.n	400c66 <pmc_switch_mck_to_pllack+0x56>
  400c50:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  400c54:	4906      	ldr	r1, [pc, #24]	; (400c70 <pmc_switch_mck_to_pllack+0x60>)
  400c56:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400c58:	f012 0f08 	tst.w	r2, #8
  400c5c:	d105      	bne.n	400c6a <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400c5e:	3b01      	subs	r3, #1
  400c60:	d1f9      	bne.n	400c56 <pmc_switch_mck_to_pllack+0x46>
			return 1;
  400c62:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  400c64:	4770      	bx	lr
	return 0;
  400c66:	2000      	movs	r0, #0
  400c68:	4770      	bx	lr
  400c6a:	2000      	movs	r0, #0
  400c6c:	4770      	bx	lr
  400c6e:	bf00      	nop
  400c70:	400e0600 	.word	0x400e0600

00400c74 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  400c74:	b9a0      	cbnz	r0, 400ca0 <pmc_switch_mainck_to_xtal+0x2c>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400c76:	480e      	ldr	r0, [pc, #56]	; (400cb0 <pmc_switch_mainck_to_xtal+0x3c>)
  400c78:	6a03      	ldr	r3, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  400c7a:	0209      	lsls	r1, r1, #8
  400c7c:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  400c7e:	4a0d      	ldr	r2, [pc, #52]	; (400cb4 <pmc_switch_mainck_to_xtal+0x40>)
  400c80:	401a      	ands	r2, r3
  400c82:	4b0d      	ldr	r3, [pc, #52]	; (400cb8 <pmc_switch_mainck_to_xtal+0x44>)
  400c84:	4313      	orrs	r3, r2
  400c86:	4319      	orrs	r1, r3
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400c88:	6201      	str	r1, [r0, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  400c8a:	4602      	mov	r2, r0
  400c8c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400c8e:	f013 0f01 	tst.w	r3, #1
  400c92:	d0fb      	beq.n	400c8c <pmc_switch_mainck_to_xtal+0x18>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  400c94:	4a06      	ldr	r2, [pc, #24]	; (400cb0 <pmc_switch_mainck_to_xtal+0x3c>)
  400c96:	6a11      	ldr	r1, [r2, #32]
  400c98:	4b08      	ldr	r3, [pc, #32]	; (400cbc <pmc_switch_mainck_to_xtal+0x48>)
  400c9a:	430b      	orrs	r3, r1
  400c9c:	6213      	str	r3, [r2, #32]
  400c9e:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400ca0:	4903      	ldr	r1, [pc, #12]	; (400cb0 <pmc_switch_mainck_to_xtal+0x3c>)
  400ca2:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  400ca4:	4a06      	ldr	r2, [pc, #24]	; (400cc0 <pmc_switch_mainck_to_xtal+0x4c>)
  400ca6:	401a      	ands	r2, r3
  400ca8:	4b06      	ldr	r3, [pc, #24]	; (400cc4 <pmc_switch_mainck_to_xtal+0x50>)
  400caa:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400cac:	620b      	str	r3, [r1, #32]
  400cae:	4770      	bx	lr
  400cb0:	400e0600 	.word	0x400e0600
  400cb4:	ffc8fffc 	.word	0xffc8fffc
  400cb8:	00370001 	.word	0x00370001
  400cbc:	01370000 	.word	0x01370000
  400cc0:	fec8fffc 	.word	0xfec8fffc
  400cc4:	01370002 	.word	0x01370002

00400cc8 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  400cc8:	4b02      	ldr	r3, [pc, #8]	; (400cd4 <pmc_osc_is_ready_mainck+0xc>)
  400cca:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400ccc:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  400cd0:	4770      	bx	lr
  400cd2:	bf00      	nop
  400cd4:	400e0600 	.word	0x400e0600

00400cd8 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  400cd8:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  400cdc:	4b01      	ldr	r3, [pc, #4]	; (400ce4 <pmc_disable_pllack+0xc>)
  400cde:	629a      	str	r2, [r3, #40]	; 0x28
  400ce0:	4770      	bx	lr
  400ce2:	bf00      	nop
  400ce4:	400e0600 	.word	0x400e0600

00400ce8 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400ce8:	4b02      	ldr	r3, [pc, #8]	; (400cf4 <pmc_is_locked_pllack+0xc>)
  400cea:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400cec:	f000 0002 	and.w	r0, r0, #2
  400cf0:	4770      	bx	lr
  400cf2:	bf00      	nop
  400cf4:	400e0600 	.word	0x400e0600

00400cf8 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  400cf8:	283f      	cmp	r0, #63	; 0x3f
  400cfa:	d81e      	bhi.n	400d3a <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  400cfc:	281f      	cmp	r0, #31
  400cfe:	d80c      	bhi.n	400d1a <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  400d00:	4b11      	ldr	r3, [pc, #68]	; (400d48 <pmc_enable_periph_clk+0x50>)
  400d02:	699a      	ldr	r2, [r3, #24]
  400d04:	2301      	movs	r3, #1
  400d06:	4083      	lsls	r3, r0
  400d08:	4393      	bics	r3, r2
  400d0a:	d018      	beq.n	400d3e <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  400d0c:	2301      	movs	r3, #1
  400d0e:	fa03 f000 	lsl.w	r0, r3, r0
  400d12:	4b0d      	ldr	r3, [pc, #52]	; (400d48 <pmc_enable_periph_clk+0x50>)
  400d14:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  400d16:	2000      	movs	r0, #0
  400d18:	4770      	bx	lr
		ul_id -= 32;
  400d1a:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  400d1c:	4b0a      	ldr	r3, [pc, #40]	; (400d48 <pmc_enable_periph_clk+0x50>)
  400d1e:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  400d22:	2301      	movs	r3, #1
  400d24:	4083      	lsls	r3, r0
  400d26:	4393      	bics	r3, r2
  400d28:	d00b      	beq.n	400d42 <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  400d2a:	2301      	movs	r3, #1
  400d2c:	fa03 f000 	lsl.w	r0, r3, r0
  400d30:	4b05      	ldr	r3, [pc, #20]	; (400d48 <pmc_enable_periph_clk+0x50>)
  400d32:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  400d36:	2000      	movs	r0, #0
  400d38:	4770      	bx	lr
		return 1;
  400d3a:	2001      	movs	r0, #1
  400d3c:	4770      	bx	lr
	return 0;
  400d3e:	2000      	movs	r0, #0
  400d40:	4770      	bx	lr
  400d42:	2000      	movs	r0, #0
}
  400d44:	4770      	bx	lr
  400d46:	bf00      	nop
  400d48:	400e0600 	.word	0x400e0600

00400d4c <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
  400d4c:	6943      	ldr	r3, [r0, #20]
  400d4e:	f013 0f02 	tst.w	r3, #2
  400d52:	d002      	beq.n	400d5a <uart_write+0xe>
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
  400d54:	61c1      	str	r1, [r0, #28]
	return 0;
  400d56:	2000      	movs	r0, #0
  400d58:	4770      	bx	lr
		return 1;
  400d5a:	2001      	movs	r0, #1
}
  400d5c:	4770      	bx	lr

00400d5e <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
  400d5e:	6943      	ldr	r3, [r0, #20]
  400d60:	f013 0f01 	tst.w	r3, #1
  400d64:	d003      	beq.n	400d6e <uart_read+0x10>
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
  400d66:	6983      	ldr	r3, [r0, #24]
  400d68:	700b      	strb	r3, [r1, #0]
	return 0;
  400d6a:	2000      	movs	r0, #0
  400d6c:	4770      	bx	lr
		return 1;
  400d6e:	2001      	movs	r0, #1
}
  400d70:	4770      	bx	lr

00400d72 <usart_set_async_baudrate>:
 * \retval 1 Baud rate set point is out of range for the given input clock
 * frequency.
 */
uint32_t usart_set_async_baudrate(Usart *p_usart,
		uint32_t baudrate, uint32_t ul_mck)
{
  400d72:	b410      	push	{r4}
	uint32_t cd_fp;
	uint32_t cd;
	uint32_t fp;

	/* Calculate the receiver sampling divide of baudrate clock. */
	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
  400d74:	010b      	lsls	r3, r1, #4
  400d76:	4293      	cmp	r3, r2
  400d78:	d914      	bls.n	400da4 <usart_set_async_baudrate+0x32>
	} else {
		over = LOW_FRQ_SAMPLE_DIV;
	}

	/* Calculate clock divider according to the fraction calculated formula. */
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  400d7a:	00c9      	lsls	r1, r1, #3
  400d7c:	084b      	lsrs	r3, r1, #1
  400d7e:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
  400d82:	fbb2 f2f1 	udiv	r2, r2, r1
	cd = cd_fp >> 3;
  400d86:	08d3      	lsrs	r3, r2, #3
	fp = cd_fp & 0x07;
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  400d88:	1e5c      	subs	r4, r3, #1
  400d8a:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  400d8e:	428c      	cmp	r4, r1
  400d90:	d901      	bls.n	400d96 <usart_set_async_baudrate+0x24>
		return 1;
  400d92:	2001      	movs	r0, #1
  400d94:	e017      	b.n	400dc6 <usart_set_async_baudrate+0x54>
	}

	/* Configure the OVER bit in MR register. */
	if (over == 8) {
		p_usart->US_MR |= US_MR_OVER;
  400d96:	6841      	ldr	r1, [r0, #4]
  400d98:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
  400d9c:	6041      	str	r1, [r0, #4]
  400d9e:	e00c      	b.n	400dba <usart_set_async_baudrate+0x48>
		return 1;
  400da0:	2001      	movs	r0, #1
  400da2:	e010      	b.n	400dc6 <usart_set_async_baudrate+0x54>
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  400da4:	0859      	lsrs	r1, r3, #1
  400da6:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
  400daa:	fbb2 f2f3 	udiv	r2, r2, r3
	cd = cd_fp >> 3;
  400dae:	08d3      	lsrs	r3, r2, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  400db0:	1e5c      	subs	r4, r3, #1
  400db2:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  400db6:	428c      	cmp	r4, r1
  400db8:	d8f2      	bhi.n	400da0 <usart_set_async_baudrate+0x2e>
	}

	/* Configure the baudrate generate register. */
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
  400dba:	0412      	lsls	r2, r2, #16
  400dbc:	f402 22e0 	and.w	r2, r2, #458752	; 0x70000
  400dc0:	431a      	orrs	r2, r3
  400dc2:	6202      	str	r2, [r0, #32]

	return 0;
  400dc4:	2000      	movs	r0, #0
}
  400dc6:	f85d 4b04 	ldr.w	r4, [sp], #4
  400dca:	4770      	bx	lr

00400dcc <usart_reset>:
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_disable_writeprotect(Usart *p_usart)
{
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
  400dcc:	4b08      	ldr	r3, [pc, #32]	; (400df0 <usart_reset+0x24>)
  400dce:	f8c0 30e4 	str.w	r3, [r0, #228]	; 0xe4
	p_usart->US_MR = 0;
  400dd2:	2300      	movs	r3, #0
  400dd4:	6043      	str	r3, [r0, #4]
	p_usart->US_RTOR = 0;
  400dd6:	6243      	str	r3, [r0, #36]	; 0x24
	p_usart->US_TTGR = 0;
  400dd8:	6283      	str	r3, [r0, #40]	; 0x28
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
  400dda:	2388      	movs	r3, #136	; 0x88
  400ddc:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
  400dde:	2324      	movs	r3, #36	; 0x24
  400de0:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTSTA;
  400de2:	f44f 7380 	mov.w	r3, #256	; 0x100
  400de6:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RTSDIS;
  400de8:	f44f 2300 	mov.w	r3, #524288	; 0x80000
  400dec:	6003      	str	r3, [r0, #0]
  400dee:	4770      	bx	lr
  400df0:	55534100 	.word	0x55534100

00400df4 <usart_init_rs232>:
{
  400df4:	b570      	push	{r4, r5, r6, lr}
  400df6:	4605      	mov	r5, r0
  400df8:	460c      	mov	r4, r1
  400dfa:	4616      	mov	r6, r2
	usart_reset(p_usart);
  400dfc:	4b0f      	ldr	r3, [pc, #60]	; (400e3c <usart_init_rs232+0x48>)
  400dfe:	4798      	blx	r3
	ul_reg_val = 0;
  400e00:	2200      	movs	r2, #0
  400e02:	4b0f      	ldr	r3, [pc, #60]	; (400e40 <usart_init_rs232+0x4c>)
  400e04:	601a      	str	r2, [r3, #0]
	if (!p_usart_opt || usart_set_async_baudrate(p_usart,
  400e06:	b1a4      	cbz	r4, 400e32 <usart_init_rs232+0x3e>
  400e08:	4632      	mov	r2, r6
  400e0a:	6821      	ldr	r1, [r4, #0]
  400e0c:	4628      	mov	r0, r5
  400e0e:	4b0d      	ldr	r3, [pc, #52]	; (400e44 <usart_init_rs232+0x50>)
  400e10:	4798      	blx	r3
  400e12:	4602      	mov	r2, r0
  400e14:	b978      	cbnz	r0, 400e36 <usart_init_rs232+0x42>
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  400e16:	6863      	ldr	r3, [r4, #4]
  400e18:	68a1      	ldr	r1, [r4, #8]
  400e1a:	430b      	orrs	r3, r1
  400e1c:	6921      	ldr	r1, [r4, #16]
  400e1e:	430b      	orrs	r3, r1
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
  400e20:	68e1      	ldr	r1, [r4, #12]
  400e22:	430b      	orrs	r3, r1
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  400e24:	4906      	ldr	r1, [pc, #24]	; (400e40 <usart_init_rs232+0x4c>)
  400e26:	600b      	str	r3, [r1, #0]
	p_usart->US_MR |= ul_reg_val;
  400e28:	6869      	ldr	r1, [r5, #4]
  400e2a:	430b      	orrs	r3, r1
  400e2c:	606b      	str	r3, [r5, #4]
}
  400e2e:	4610      	mov	r0, r2
  400e30:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
  400e32:	2201      	movs	r2, #1
  400e34:	e7fb      	b.n	400e2e <usart_init_rs232+0x3a>
  400e36:	2201      	movs	r2, #1
  400e38:	e7f9      	b.n	400e2e <usart_init_rs232+0x3a>
  400e3a:	bf00      	nop
  400e3c:	00400dcd 	.word	0x00400dcd
  400e40:	20400ad8 	.word	0x20400ad8
  400e44:	00400d73 	.word	0x00400d73

00400e48 <usart_enable_tx>:
	p_usart->US_CR = US_CR_TXEN;
  400e48:	2340      	movs	r3, #64	; 0x40
  400e4a:	6003      	str	r3, [r0, #0]
  400e4c:	4770      	bx	lr

00400e4e <usart_enable_rx>:
	p_usart->US_CR = US_CR_RXEN;
  400e4e:	2310      	movs	r3, #16
  400e50:	6003      	str	r3, [r0, #0]
  400e52:	4770      	bx	lr

00400e54 <usart_write>:
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  400e54:	6943      	ldr	r3, [r0, #20]
  400e56:	f013 0f02 	tst.w	r3, #2
  400e5a:	d004      	beq.n	400e66 <usart_write+0x12>
	p_usart->US_THR = US_THR_TXCHR(c);
  400e5c:	f3c1 0108 	ubfx	r1, r1, #0, #9
  400e60:	61c1      	str	r1, [r0, #28]
	return 0;
  400e62:	2000      	movs	r0, #0
  400e64:	4770      	bx	lr
		return 1;
  400e66:	2001      	movs	r0, #1
}
  400e68:	4770      	bx	lr

00400e6a <usart_read>:
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  400e6a:	6943      	ldr	r3, [r0, #20]
  400e6c:	f013 0f01 	tst.w	r3, #1
  400e70:	d005      	beq.n	400e7e <usart_read+0x14>
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  400e72:	6983      	ldr	r3, [r0, #24]
  400e74:	f3c3 0308 	ubfx	r3, r3, #0, #9
  400e78:	600b      	str	r3, [r1, #0]
	return 0;
  400e7a:	2000      	movs	r0, #0
  400e7c:	4770      	bx	lr
		return 1;
  400e7e:	2001      	movs	r0, #1
}
  400e80:	4770      	bx	lr

00400e82 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  400e82:	e7fe      	b.n	400e82 <Dummy_Handler>

00400e84 <Reset_Handler>:
{
  400e84:	b500      	push	{lr}
  400e86:	b083      	sub	sp, #12
        if (pSrc != pDest) {
  400e88:	4b25      	ldr	r3, [pc, #148]	; (400f20 <Reset_Handler+0x9c>)
  400e8a:	4a26      	ldr	r2, [pc, #152]	; (400f24 <Reset_Handler+0xa0>)
  400e8c:	429a      	cmp	r2, r3
  400e8e:	d010      	beq.n	400eb2 <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
  400e90:	4b25      	ldr	r3, [pc, #148]	; (400f28 <Reset_Handler+0xa4>)
  400e92:	4a23      	ldr	r2, [pc, #140]	; (400f20 <Reset_Handler+0x9c>)
  400e94:	429a      	cmp	r2, r3
  400e96:	d20c      	bcs.n	400eb2 <Reset_Handler+0x2e>
  400e98:	3b01      	subs	r3, #1
  400e9a:	1a9b      	subs	r3, r3, r2
  400e9c:	f023 0303 	bic.w	r3, r3, #3
  400ea0:	3304      	adds	r3, #4
  400ea2:	4413      	add	r3, r2
  400ea4:	491f      	ldr	r1, [pc, #124]	; (400f24 <Reset_Handler+0xa0>)
                        *pDest++ = *pSrc++;
  400ea6:	f851 0b04 	ldr.w	r0, [r1], #4
  400eaa:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  400eae:	429a      	cmp	r2, r3
  400eb0:	d1f9      	bne.n	400ea6 <Reset_Handler+0x22>
        for (pDest = &_szero; pDest < &_ezero;) {
  400eb2:	4b1e      	ldr	r3, [pc, #120]	; (400f2c <Reset_Handler+0xa8>)
  400eb4:	4a1e      	ldr	r2, [pc, #120]	; (400f30 <Reset_Handler+0xac>)
  400eb6:	429a      	cmp	r2, r3
  400eb8:	d20a      	bcs.n	400ed0 <Reset_Handler+0x4c>
  400eba:	3b01      	subs	r3, #1
  400ebc:	1a9b      	subs	r3, r3, r2
  400ebe:	f023 0303 	bic.w	r3, r3, #3
  400ec2:	3304      	adds	r3, #4
  400ec4:	4413      	add	r3, r2
                *pDest++ = 0;
  400ec6:	2100      	movs	r1, #0
  400ec8:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  400ecc:	4293      	cmp	r3, r2
  400ece:	d1fb      	bne.n	400ec8 <Reset_Handler+0x44>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  400ed0:	4a18      	ldr	r2, [pc, #96]	; (400f34 <Reset_Handler+0xb0>)
  400ed2:	4b19      	ldr	r3, [pc, #100]	; (400f38 <Reset_Handler+0xb4>)
  400ed4:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  400ed8:	6093      	str	r3, [r2, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  400eda:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  400ede:	fab3 f383 	clz	r3, r3
  400ee2:	095b      	lsrs	r3, r3, #5
  400ee4:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  400ee6:	b672      	cpsid	i
  __ASM volatile ("dmb");
  400ee8:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  400eec:	2200      	movs	r2, #0
  400eee:	4b13      	ldr	r3, [pc, #76]	; (400f3c <Reset_Handler+0xb8>)
  400ef0:	701a      	strb	r2, [r3, #0]
	return flags;
  400ef2:	9901      	ldr	r1, [sp, #4]
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  400ef4:	4a12      	ldr	r2, [pc, #72]	; (400f40 <Reset_Handler+0xbc>)
  400ef6:	6813      	ldr	r3, [r2, #0]
  400ef8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  400efc:	6013      	str	r3, [r2, #0]
  __ASM volatile ("dsb");
  400efe:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400f02:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  400f06:	b129      	cbz	r1, 400f14 <Reset_Handler+0x90>
		cpu_irq_enable();
  400f08:	2201      	movs	r2, #1
  400f0a:	4b0c      	ldr	r3, [pc, #48]	; (400f3c <Reset_Handler+0xb8>)
  400f0c:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  400f0e:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  400f12:	b662      	cpsie	i
        __libc_init_array();
  400f14:	4b0b      	ldr	r3, [pc, #44]	; (400f44 <Reset_Handler+0xc0>)
  400f16:	4798      	blx	r3
        main();
  400f18:	4b0b      	ldr	r3, [pc, #44]	; (400f48 <Reset_Handler+0xc4>)
  400f1a:	4798      	blx	r3
  400f1c:	e7fe      	b.n	400f1c <Reset_Handler+0x98>
  400f1e:	bf00      	nop
  400f20:	20400000 	.word	0x20400000
  400f24:	00406f64 	.word	0x00406f64
  400f28:	204009c0 	.word	0x204009c0
  400f2c:	20400b4c 	.word	0x20400b4c
  400f30:	204009c0 	.word	0x204009c0
  400f34:	e000ed00 	.word	0xe000ed00
  400f38:	00400000 	.word	0x00400000
  400f3c:	2040000a 	.word	0x2040000a
  400f40:	e000ed88 	.word	0xe000ed88
  400f44:	00401c8d 	.word	0x00401c8d
  400f48:	004012e9 	.word	0x004012e9

00400f4c <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
  /* Determine clock frequency according to clock register values */
  switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk)
  400f4c:	4b3b      	ldr	r3, [pc, #236]	; (40103c <SystemCoreClockUpdate+0xf0>)
  400f4e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400f50:	f003 0303 	and.w	r3, r3, #3
  400f54:	2b01      	cmp	r3, #1
  400f56:	d01d      	beq.n	400f94 <SystemCoreClockUpdate+0x48>
  400f58:	b183      	cbz	r3, 400f7c <SystemCoreClockUpdate+0x30>
  400f5a:	2b02      	cmp	r3, #2
  400f5c:	d036      	beq.n	400fcc <SystemCoreClockUpdate+0x80>

    default:
    break;
  }

  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  400f5e:	4b37      	ldr	r3, [pc, #220]	; (40103c <SystemCoreClockUpdate+0xf0>)
  400f60:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400f62:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400f66:	2b70      	cmp	r3, #112	; 0x70
  400f68:	d05f      	beq.n	40102a <SystemCoreClockUpdate+0xde>
  {
    SystemCoreClock /= 3U;
  }
  else
  {
    SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  400f6a:	4b34      	ldr	r3, [pc, #208]	; (40103c <SystemCoreClockUpdate+0xf0>)
  400f6c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  400f6e:	4934      	ldr	r1, [pc, #208]	; (401040 <SystemCoreClockUpdate+0xf4>)
  400f70:	f3c2 1202 	ubfx	r2, r2, #4, #3
  400f74:	680b      	ldr	r3, [r1, #0]
  400f76:	40d3      	lsrs	r3, r2
  400f78:	600b      	str	r3, [r1, #0]
  400f7a:	4770      	bx	lr
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  400f7c:	4b31      	ldr	r3, [pc, #196]	; (401044 <SystemCoreClockUpdate+0xf8>)
  400f7e:	695b      	ldr	r3, [r3, #20]
  400f80:	f013 0f80 	tst.w	r3, #128	; 0x80
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  400f84:	bf14      	ite	ne
  400f86:	f44f 4200 	movne.w	r2, #32768	; 0x8000
        SystemCoreClock = CHIP_FREQ_SLCK_RC;
  400f8a:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  400f8e:	4b2c      	ldr	r3, [pc, #176]	; (401040 <SystemCoreClockUpdate+0xf4>)
  400f90:	601a      	str	r2, [r3, #0]
  400f92:	e7e4      	b.n	400f5e <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  400f94:	4b29      	ldr	r3, [pc, #164]	; (40103c <SystemCoreClockUpdate+0xf0>)
  400f96:	6a1b      	ldr	r3, [r3, #32]
  400f98:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400f9c:	d003      	beq.n	400fa6 <SystemCoreClockUpdate+0x5a>
        SystemCoreClock = CHIP_FREQ_XTAL_12M;
  400f9e:	4a2a      	ldr	r2, [pc, #168]	; (401048 <SystemCoreClockUpdate+0xfc>)
  400fa0:	4b27      	ldr	r3, [pc, #156]	; (401040 <SystemCoreClockUpdate+0xf4>)
  400fa2:	601a      	str	r2, [r3, #0]
  400fa4:	e7db      	b.n	400f5e <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  400fa6:	4a29      	ldr	r2, [pc, #164]	; (40104c <SystemCoreClockUpdate+0x100>)
  400fa8:	4b25      	ldr	r3, [pc, #148]	; (401040 <SystemCoreClockUpdate+0xf4>)
  400faa:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  400fac:	4b23      	ldr	r3, [pc, #140]	; (40103c <SystemCoreClockUpdate+0xf0>)
  400fae:	6a1b      	ldr	r3, [r3, #32]
  400fb0:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400fb4:	2b10      	cmp	r3, #16
  400fb6:	d005      	beq.n	400fc4 <SystemCoreClockUpdate+0x78>
  400fb8:	2b20      	cmp	r3, #32
  400fba:	d1d0      	bne.n	400f5e <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 3U;
  400fbc:	4a22      	ldr	r2, [pc, #136]	; (401048 <SystemCoreClockUpdate+0xfc>)
  400fbe:	4b20      	ldr	r3, [pc, #128]	; (401040 <SystemCoreClockUpdate+0xf4>)
  400fc0:	601a      	str	r2, [r3, #0]
          break;
  400fc2:	e7cc      	b.n	400f5e <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 2U;
  400fc4:	4a22      	ldr	r2, [pc, #136]	; (401050 <SystemCoreClockUpdate+0x104>)
  400fc6:	4b1e      	ldr	r3, [pc, #120]	; (401040 <SystemCoreClockUpdate+0xf4>)
  400fc8:	601a      	str	r2, [r3, #0]
          break;
  400fca:	e7c8      	b.n	400f5e <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  400fcc:	4b1b      	ldr	r3, [pc, #108]	; (40103c <SystemCoreClockUpdate+0xf0>)
  400fce:	6a1b      	ldr	r3, [r3, #32]
  400fd0:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400fd4:	d016      	beq.n	401004 <SystemCoreClockUpdate+0xb8>
        SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  400fd6:	4a1c      	ldr	r2, [pc, #112]	; (401048 <SystemCoreClockUpdate+0xfc>)
  400fd8:	4b19      	ldr	r3, [pc, #100]	; (401040 <SystemCoreClockUpdate+0xf4>)
  400fda:	601a      	str	r2, [r3, #0]
      if ( (uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK )
  400fdc:	4b17      	ldr	r3, [pc, #92]	; (40103c <SystemCoreClockUpdate+0xf0>)
  400fde:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400fe0:	f003 0303 	and.w	r3, r3, #3
  400fe4:	2b02      	cmp	r3, #2
  400fe6:	d1ba      	bne.n	400f5e <SystemCoreClockUpdate+0x12>
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  400fe8:	4a14      	ldr	r2, [pc, #80]	; (40103c <SystemCoreClockUpdate+0xf0>)
  400fea:	6a91      	ldr	r1, [r2, #40]	; 0x28
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  400fec:	6a92      	ldr	r2, [r2, #40]	; 0x28
  400fee:	4814      	ldr	r0, [pc, #80]	; (401040 <SystemCoreClockUpdate+0xf4>)
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  400ff0:	f3c1 410a 	ubfx	r1, r1, #16, #11
  400ff4:	6803      	ldr	r3, [r0, #0]
  400ff6:	fb01 3303 	mla	r3, r1, r3, r3
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  400ffa:	b2d2      	uxtb	r2, r2
  400ffc:	fbb3 f3f2 	udiv	r3, r3, r2
  401000:	6003      	str	r3, [r0, #0]
  401002:	e7ac      	b.n	400f5e <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  401004:	4a11      	ldr	r2, [pc, #68]	; (40104c <SystemCoreClockUpdate+0x100>)
  401006:	4b0e      	ldr	r3, [pc, #56]	; (401040 <SystemCoreClockUpdate+0xf4>)
  401008:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  40100a:	4b0c      	ldr	r3, [pc, #48]	; (40103c <SystemCoreClockUpdate+0xf0>)
  40100c:	6a1b      	ldr	r3, [r3, #32]
  40100e:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401012:	2b10      	cmp	r3, #16
  401014:	d005      	beq.n	401022 <SystemCoreClockUpdate+0xd6>
  401016:	2b20      	cmp	r3, #32
  401018:	d1e0      	bne.n	400fdc <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 3U;
  40101a:	4a0b      	ldr	r2, [pc, #44]	; (401048 <SystemCoreClockUpdate+0xfc>)
  40101c:	4b08      	ldr	r3, [pc, #32]	; (401040 <SystemCoreClockUpdate+0xf4>)
  40101e:	601a      	str	r2, [r3, #0]
          break;
  401020:	e7dc      	b.n	400fdc <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 2U;
  401022:	4a0b      	ldr	r2, [pc, #44]	; (401050 <SystemCoreClockUpdate+0x104>)
  401024:	4b06      	ldr	r3, [pc, #24]	; (401040 <SystemCoreClockUpdate+0xf4>)
  401026:	601a      	str	r2, [r3, #0]
          break;
  401028:	e7d8      	b.n	400fdc <SystemCoreClockUpdate+0x90>
    SystemCoreClock /= 3U;
  40102a:	4a05      	ldr	r2, [pc, #20]	; (401040 <SystemCoreClockUpdate+0xf4>)
  40102c:	6813      	ldr	r3, [r2, #0]
  40102e:	4909      	ldr	r1, [pc, #36]	; (401054 <SystemCoreClockUpdate+0x108>)
  401030:	fba1 1303 	umull	r1, r3, r1, r3
  401034:	085b      	lsrs	r3, r3, #1
  401036:	6013      	str	r3, [r2, #0]
  401038:	4770      	bx	lr
  40103a:	bf00      	nop
  40103c:	400e0600 	.word	0x400e0600
  401040:	2040000c 	.word	0x2040000c
  401044:	400e1810 	.word	0x400e1810
  401048:	00b71b00 	.word	0x00b71b00
  40104c:	003d0900 	.word	0x003d0900
  401050:	007a1200 	.word	0x007a1200
  401054:	aaaaaaab 	.word	0xaaaaaaab

00401058 <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
  if ( ul_clk < CHIP_FREQ_FWS_0 )
  401058:	4b12      	ldr	r3, [pc, #72]	; (4010a4 <system_init_flash+0x4c>)
  40105a:	4298      	cmp	r0, r3
  40105c:	d911      	bls.n	401082 <system_init_flash+0x2a>
  {
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  }
  else
  {
    if (ul_clk < CHIP_FREQ_FWS_1)
  40105e:	4b12      	ldr	r3, [pc, #72]	; (4010a8 <system_init_flash+0x50>)
  401060:	4298      	cmp	r0, r3
  401062:	d913      	bls.n	40108c <system_init_flash+0x34>
    {
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
    }
    else
    {
      if (ul_clk < CHIP_FREQ_FWS_2)
  401064:	4b11      	ldr	r3, [pc, #68]	; (4010ac <system_init_flash+0x54>)
  401066:	4298      	cmp	r0, r3
  401068:	d914      	bls.n	401094 <system_init_flash+0x3c>
      {
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
      }
      else
      {
        if ( ul_clk < CHIP_FREQ_FWS_3 )
  40106a:	4b11      	ldr	r3, [pc, #68]	; (4010b0 <system_init_flash+0x58>)
  40106c:	4298      	cmp	r0, r3
  40106e:	d915      	bls.n	40109c <system_init_flash+0x44>
        {
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
        }
        else
        {
          if ( ul_clk < CHIP_FREQ_FWS_4 )
  401070:	4b10      	ldr	r3, [pc, #64]	; (4010b4 <system_init_flash+0x5c>)
  401072:	4298      	cmp	r0, r3
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  401074:	bf94      	ite	ls
  401076:	f04f 2204 	movls.w	r2, #67109888	; 0x4000400
          }
          else
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  40107a:	4a0f      	ldrhi	r2, [pc, #60]	; (4010b8 <system_init_flash+0x60>)
  40107c:	4b0f      	ldr	r3, [pc, #60]	; (4010bc <system_init_flash+0x64>)
  40107e:	601a      	str	r2, [r3, #0]
  401080:	4770      	bx	lr
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  401082:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  401086:	4b0d      	ldr	r3, [pc, #52]	; (4010bc <system_init_flash+0x64>)
  401088:	601a      	str	r2, [r3, #0]
  40108a:	4770      	bx	lr
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  40108c:	4a0c      	ldr	r2, [pc, #48]	; (4010c0 <system_init_flash+0x68>)
  40108e:	4b0b      	ldr	r3, [pc, #44]	; (4010bc <system_init_flash+0x64>)
  401090:	601a      	str	r2, [r3, #0]
  401092:	4770      	bx	lr
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  401094:	4a0b      	ldr	r2, [pc, #44]	; (4010c4 <system_init_flash+0x6c>)
  401096:	4b09      	ldr	r3, [pc, #36]	; (4010bc <system_init_flash+0x64>)
  401098:	601a      	str	r2, [r3, #0]
  40109a:	4770      	bx	lr
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  40109c:	4a0a      	ldr	r2, [pc, #40]	; (4010c8 <system_init_flash+0x70>)
  40109e:	4b07      	ldr	r3, [pc, #28]	; (4010bc <system_init_flash+0x64>)
  4010a0:	601a      	str	r2, [r3, #0]
  4010a2:	4770      	bx	lr
  4010a4:	01312cff 	.word	0x01312cff
  4010a8:	026259ff 	.word	0x026259ff
  4010ac:	039386ff 	.word	0x039386ff
  4010b0:	04c4b3ff 	.word	0x04c4b3ff
  4010b4:	05f5e0ff 	.word	0x05f5e0ff
  4010b8:	04000500 	.word	0x04000500
  4010bc:	400e0c00 	.word	0x400e0c00
  4010c0:	04000100 	.word	0x04000100
  4010c4:	04000200 	.word	0x04000200
  4010c8:	04000300 	.word	0x04000300

004010cc <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  4010cc:	4b0a      	ldr	r3, [pc, #40]	; (4010f8 <_sbrk+0x2c>)
  4010ce:	681b      	ldr	r3, [r3, #0]
  4010d0:	b153      	cbz	r3, 4010e8 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  4010d2:	4b09      	ldr	r3, [pc, #36]	; (4010f8 <_sbrk+0x2c>)
  4010d4:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  4010d6:	181a      	adds	r2, r3, r0
  4010d8:	4908      	ldr	r1, [pc, #32]	; (4010fc <_sbrk+0x30>)
  4010da:	4291      	cmp	r1, r2
  4010dc:	db08      	blt.n	4010f0 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  4010de:	4610      	mov	r0, r2
  4010e0:	4a05      	ldr	r2, [pc, #20]	; (4010f8 <_sbrk+0x2c>)
  4010e2:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  4010e4:	4618      	mov	r0, r3
  4010e6:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  4010e8:	4a05      	ldr	r2, [pc, #20]	; (401100 <_sbrk+0x34>)
  4010ea:	4b03      	ldr	r3, [pc, #12]	; (4010f8 <_sbrk+0x2c>)
  4010ec:	601a      	str	r2, [r3, #0]
  4010ee:	e7f0      	b.n	4010d2 <_sbrk+0x6>
		return (caddr_t) -1;	
  4010f0:	f04f 30ff 	mov.w	r0, #4294967295
}
  4010f4:	4770      	bx	lr
  4010f6:	bf00      	nop
  4010f8:	20400adc 	.word	0x20400adc
  4010fc:	2045fffc 	.word	0x2045fffc
  401100:	20402d50 	.word	0x20402d50

00401104 <_close>:
}

extern int _close(int file)
{
	return -1;
}
  401104:	f04f 30ff 	mov.w	r0, #4294967295
  401108:	4770      	bx	lr

0040110a <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
  40110a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  40110e:	604b      	str	r3, [r1, #4]

	return 0;
}
  401110:	2000      	movs	r0, #0
  401112:	4770      	bx	lr

00401114 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
  401114:	2001      	movs	r0, #1
  401116:	4770      	bx	lr

00401118 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
  401118:	2000      	movs	r0, #0
  40111a:	4770      	bx	lr

0040111c <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
  40111c:	b5f0      	push	{r4, r5, r6, r7, lr}
  40111e:	b083      	sub	sp, #12
  401120:	4605      	mov	r5, r0
  401122:	460c      	mov	r4, r1
	uint32_t val = 0;
  401124:	2300      	movs	r3, #0
  401126:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  401128:	4b2a      	ldr	r3, [pc, #168]	; (4011d4 <usart_serial_getchar+0xb8>)
  40112a:	4298      	cmp	r0, r3
  40112c:	d013      	beq.n	401156 <usart_serial_getchar+0x3a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  40112e:	4b2a      	ldr	r3, [pc, #168]	; (4011d8 <usart_serial_getchar+0xbc>)
  401130:	4298      	cmp	r0, r3
  401132:	d018      	beq.n	401166 <usart_serial_getchar+0x4a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART2
	if (UART2 == (Uart*)p_usart) {
  401134:	4b29      	ldr	r3, [pc, #164]	; (4011dc <usart_serial_getchar+0xc0>)
  401136:	4298      	cmp	r0, r3
  401138:	d01d      	beq.n	401176 <usart_serial_getchar+0x5a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART3
	if (UART3 == (Uart*)p_usart) {
  40113a:	4b29      	ldr	r3, [pc, #164]	; (4011e0 <usart_serial_getchar+0xc4>)
  40113c:	429d      	cmp	r5, r3
  40113e:	d022      	beq.n	401186 <usart_serial_getchar+0x6a>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  401140:	4b28      	ldr	r3, [pc, #160]	; (4011e4 <usart_serial_getchar+0xc8>)
  401142:	429d      	cmp	r5, r3
  401144:	d027      	beq.n	401196 <usart_serial_getchar+0x7a>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  401146:	4b28      	ldr	r3, [pc, #160]	; (4011e8 <usart_serial_getchar+0xcc>)
  401148:	429d      	cmp	r5, r3
  40114a:	d02e      	beq.n	4011aa <usart_serial_getchar+0x8e>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
  40114c:	4b27      	ldr	r3, [pc, #156]	; (4011ec <usart_serial_getchar+0xd0>)
  40114e:	429d      	cmp	r5, r3
  401150:	d035      	beq.n	4011be <usart_serial_getchar+0xa2>
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  401152:	b003      	add	sp, #12
  401154:	bdf0      	pop	{r4, r5, r6, r7, pc}
		while (uart_read((Uart*)p_usart, data));
  401156:	461f      	mov	r7, r3
  401158:	4e25      	ldr	r6, [pc, #148]	; (4011f0 <usart_serial_getchar+0xd4>)
  40115a:	4621      	mov	r1, r4
  40115c:	4638      	mov	r0, r7
  40115e:	47b0      	blx	r6
  401160:	2800      	cmp	r0, #0
  401162:	d1fa      	bne.n	40115a <usart_serial_getchar+0x3e>
  401164:	e7e9      	b.n	40113a <usart_serial_getchar+0x1e>
		while (uart_read((Uart*)p_usart, data));
  401166:	461f      	mov	r7, r3
  401168:	4e21      	ldr	r6, [pc, #132]	; (4011f0 <usart_serial_getchar+0xd4>)
  40116a:	4621      	mov	r1, r4
  40116c:	4638      	mov	r0, r7
  40116e:	47b0      	blx	r6
  401170:	2800      	cmp	r0, #0
  401172:	d1fa      	bne.n	40116a <usart_serial_getchar+0x4e>
  401174:	e7e4      	b.n	401140 <usart_serial_getchar+0x24>
		while (uart_read((Uart*)p_usart, data));
  401176:	461f      	mov	r7, r3
  401178:	4e1d      	ldr	r6, [pc, #116]	; (4011f0 <usart_serial_getchar+0xd4>)
  40117a:	4621      	mov	r1, r4
  40117c:	4638      	mov	r0, r7
  40117e:	47b0      	blx	r6
  401180:	2800      	cmp	r0, #0
  401182:	d1fa      	bne.n	40117a <usart_serial_getchar+0x5e>
  401184:	e7df      	b.n	401146 <usart_serial_getchar+0x2a>
		while (uart_read((Uart*)p_usart, data));
  401186:	461f      	mov	r7, r3
  401188:	4e19      	ldr	r6, [pc, #100]	; (4011f0 <usart_serial_getchar+0xd4>)
  40118a:	4621      	mov	r1, r4
  40118c:	4638      	mov	r0, r7
  40118e:	47b0      	blx	r6
  401190:	2800      	cmp	r0, #0
  401192:	d1fa      	bne.n	40118a <usart_serial_getchar+0x6e>
  401194:	e7da      	b.n	40114c <usart_serial_getchar+0x30>
		while (usart_read(p_usart, &val));
  401196:	461e      	mov	r6, r3
  401198:	4d16      	ldr	r5, [pc, #88]	; (4011f4 <usart_serial_getchar+0xd8>)
  40119a:	a901      	add	r1, sp, #4
  40119c:	4630      	mov	r0, r6
  40119e:	47a8      	blx	r5
  4011a0:	2800      	cmp	r0, #0
  4011a2:	d1fa      	bne.n	40119a <usart_serial_getchar+0x7e>
		*data = (uint8_t)(val & 0xFF);
  4011a4:	9b01      	ldr	r3, [sp, #4]
  4011a6:	7023      	strb	r3, [r4, #0]
  4011a8:	e7d3      	b.n	401152 <usart_serial_getchar+0x36>
		while (usart_read(p_usart, &val));
  4011aa:	461e      	mov	r6, r3
  4011ac:	4d11      	ldr	r5, [pc, #68]	; (4011f4 <usart_serial_getchar+0xd8>)
  4011ae:	a901      	add	r1, sp, #4
  4011b0:	4630      	mov	r0, r6
  4011b2:	47a8      	blx	r5
  4011b4:	2800      	cmp	r0, #0
  4011b6:	d1fa      	bne.n	4011ae <usart_serial_getchar+0x92>
		*data = (uint8_t)(val & 0xFF);
  4011b8:	9b01      	ldr	r3, [sp, #4]
  4011ba:	7023      	strb	r3, [r4, #0]
  4011bc:	e7c9      	b.n	401152 <usart_serial_getchar+0x36>
		while (usart_read(p_usart, &val));
  4011be:	461e      	mov	r6, r3
  4011c0:	4d0c      	ldr	r5, [pc, #48]	; (4011f4 <usart_serial_getchar+0xd8>)
  4011c2:	a901      	add	r1, sp, #4
  4011c4:	4630      	mov	r0, r6
  4011c6:	47a8      	blx	r5
  4011c8:	2800      	cmp	r0, #0
  4011ca:	d1fa      	bne.n	4011c2 <usart_serial_getchar+0xa6>
		*data = (uint8_t)(val & 0xFF);
  4011cc:	9b01      	ldr	r3, [sp, #4]
  4011ce:	7023      	strb	r3, [r4, #0]
}
  4011d0:	e7bf      	b.n	401152 <usart_serial_getchar+0x36>
  4011d2:	bf00      	nop
  4011d4:	400e0800 	.word	0x400e0800
  4011d8:	400e0a00 	.word	0x400e0a00
  4011dc:	400e1a00 	.word	0x400e1a00
  4011e0:	400e1c00 	.word	0x400e1c00
  4011e4:	40024000 	.word	0x40024000
  4011e8:	40028000 	.word	0x40028000
  4011ec:	4002c000 	.word	0x4002c000
  4011f0:	00400d5f 	.word	0x00400d5f
  4011f4:	00400e6b 	.word	0x00400e6b

004011f8 <usart_serial_putchar>:
{
  4011f8:	b570      	push	{r4, r5, r6, lr}
  4011fa:	460c      	mov	r4, r1
	if (UART0 == (Uart*)p_usart) {
  4011fc:	4b2a      	ldr	r3, [pc, #168]	; (4012a8 <usart_serial_putchar+0xb0>)
  4011fe:	4298      	cmp	r0, r3
  401200:	d013      	beq.n	40122a <usart_serial_putchar+0x32>
	if (UART1 == (Uart*)p_usart) {
  401202:	4b2a      	ldr	r3, [pc, #168]	; (4012ac <usart_serial_putchar+0xb4>)
  401204:	4298      	cmp	r0, r3
  401206:	d019      	beq.n	40123c <usart_serial_putchar+0x44>
	if (UART2 == (Uart*)p_usart) {
  401208:	4b29      	ldr	r3, [pc, #164]	; (4012b0 <usart_serial_putchar+0xb8>)
  40120a:	4298      	cmp	r0, r3
  40120c:	d01f      	beq.n	40124e <usart_serial_putchar+0x56>
	if (UART3 == (Uart*)p_usart) {
  40120e:	4b29      	ldr	r3, [pc, #164]	; (4012b4 <usart_serial_putchar+0xbc>)
  401210:	4298      	cmp	r0, r3
  401212:	d025      	beq.n	401260 <usart_serial_putchar+0x68>
	if (USART0 == p_usart) {
  401214:	4b28      	ldr	r3, [pc, #160]	; (4012b8 <usart_serial_putchar+0xc0>)
  401216:	4298      	cmp	r0, r3
  401218:	d02b      	beq.n	401272 <usart_serial_putchar+0x7a>
	if (USART1 == p_usart) {
  40121a:	4b28      	ldr	r3, [pc, #160]	; (4012bc <usart_serial_putchar+0xc4>)
  40121c:	4298      	cmp	r0, r3
  40121e:	d031      	beq.n	401284 <usart_serial_putchar+0x8c>
	if (USART2 == p_usart) {
  401220:	4b27      	ldr	r3, [pc, #156]	; (4012c0 <usart_serial_putchar+0xc8>)
  401222:	4298      	cmp	r0, r3
  401224:	d037      	beq.n	401296 <usart_serial_putchar+0x9e>
	return 0;
  401226:	2000      	movs	r0, #0
}
  401228:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  40122a:	461e      	mov	r6, r3
  40122c:	4d25      	ldr	r5, [pc, #148]	; (4012c4 <usart_serial_putchar+0xcc>)
  40122e:	4621      	mov	r1, r4
  401230:	4630      	mov	r0, r6
  401232:	47a8      	blx	r5
  401234:	2800      	cmp	r0, #0
  401236:	d1fa      	bne.n	40122e <usart_serial_putchar+0x36>
		return 1;
  401238:	2001      	movs	r0, #1
  40123a:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  40123c:	461e      	mov	r6, r3
  40123e:	4d21      	ldr	r5, [pc, #132]	; (4012c4 <usart_serial_putchar+0xcc>)
  401240:	4621      	mov	r1, r4
  401242:	4630      	mov	r0, r6
  401244:	47a8      	blx	r5
  401246:	2800      	cmp	r0, #0
  401248:	d1fa      	bne.n	401240 <usart_serial_putchar+0x48>
		return 1;
  40124a:	2001      	movs	r0, #1
  40124c:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  40124e:	461e      	mov	r6, r3
  401250:	4d1c      	ldr	r5, [pc, #112]	; (4012c4 <usart_serial_putchar+0xcc>)
  401252:	4621      	mov	r1, r4
  401254:	4630      	mov	r0, r6
  401256:	47a8      	blx	r5
  401258:	2800      	cmp	r0, #0
  40125a:	d1fa      	bne.n	401252 <usart_serial_putchar+0x5a>
		return 1;
  40125c:	2001      	movs	r0, #1
  40125e:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  401260:	461e      	mov	r6, r3
  401262:	4d18      	ldr	r5, [pc, #96]	; (4012c4 <usart_serial_putchar+0xcc>)
  401264:	4621      	mov	r1, r4
  401266:	4630      	mov	r0, r6
  401268:	47a8      	blx	r5
  40126a:	2800      	cmp	r0, #0
  40126c:	d1fa      	bne.n	401264 <usart_serial_putchar+0x6c>
		return 1;
  40126e:	2001      	movs	r0, #1
  401270:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  401272:	461e      	mov	r6, r3
  401274:	4d14      	ldr	r5, [pc, #80]	; (4012c8 <usart_serial_putchar+0xd0>)
  401276:	4621      	mov	r1, r4
  401278:	4630      	mov	r0, r6
  40127a:	47a8      	blx	r5
  40127c:	2800      	cmp	r0, #0
  40127e:	d1fa      	bne.n	401276 <usart_serial_putchar+0x7e>
		return 1;
  401280:	2001      	movs	r0, #1
  401282:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  401284:	461e      	mov	r6, r3
  401286:	4d10      	ldr	r5, [pc, #64]	; (4012c8 <usart_serial_putchar+0xd0>)
  401288:	4621      	mov	r1, r4
  40128a:	4630      	mov	r0, r6
  40128c:	47a8      	blx	r5
  40128e:	2800      	cmp	r0, #0
  401290:	d1fa      	bne.n	401288 <usart_serial_putchar+0x90>
		return 1;
  401292:	2001      	movs	r0, #1
  401294:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  401296:	461e      	mov	r6, r3
  401298:	4d0b      	ldr	r5, [pc, #44]	; (4012c8 <usart_serial_putchar+0xd0>)
  40129a:	4621      	mov	r1, r4
  40129c:	4630      	mov	r0, r6
  40129e:	47a8      	blx	r5
  4012a0:	2800      	cmp	r0, #0
  4012a2:	d1fa      	bne.n	40129a <usart_serial_putchar+0xa2>
		return 1;
  4012a4:	2001      	movs	r0, #1
  4012a6:	bd70      	pop	{r4, r5, r6, pc}
  4012a8:	400e0800 	.word	0x400e0800
  4012ac:	400e0a00 	.word	0x400e0a00
  4012b0:	400e1a00 	.word	0x400e1a00
  4012b4:	400e1c00 	.word	0x400e1c00
  4012b8:	40024000 	.word	0x40024000
  4012bc:	40028000 	.word	0x40028000
  4012c0:	4002c000 	.word	0x4002c000
  4012c4:	00400d4d 	.word	0x00400d4d
  4012c8:	00400e55 	.word	0x00400e55

004012cc <vApplicationStackOverflowHook>:
/**
 * \brief Called if stack overflow during execution
 */
extern void vApplicationStackOverflowHook(xTaskHandle *pxTask,
		signed char *pcTaskName)
{
  4012cc:	b508      	push	{r3, lr}
	printf("stack overflow %x %s\r\n", pxTask, (portCHAR *)pcTaskName);
  4012ce:	460a      	mov	r2, r1
  4012d0:	4601      	mov	r1, r0
  4012d2:	4802      	ldr	r0, [pc, #8]	; (4012dc <vApplicationStackOverflowHook+0x10>)
  4012d4:	4b02      	ldr	r3, [pc, #8]	; (4012e0 <vApplicationStackOverflowHook+0x14>)
  4012d6:	4798      	blx	r3
  4012d8:	e7fe      	b.n	4012d8 <vApplicationStackOverflowHook+0xc>
  4012da:	bf00      	nop
  4012dc:	00406c90 	.word	0x00406c90
  4012e0:	00401ead 	.word	0x00401ead

004012e4 <vApplicationTickHook>:

/**
 * \brief This function is called by FreeRTOS each tick
 */
extern void vApplicationTickHook(void)
{
  4012e4:	4770      	bx	lr
	...

004012e8 <main>:
 * Initialize system, UART console, network then start weather client.
 *
 * \return Program return value.
 */
int main(void)
{
  4012e8:	b580      	push	{r7, lr}
  4012ea:	b08a      	sub	sp, #40	; 0x28
	/* Initialize the board. */
	sysclk_init();
  4012ec:	4b26      	ldr	r3, [pc, #152]	; (401388 <main+0xa0>)
  4012ee:	4798      	blx	r3
	board_init();
  4012f0:	4b26      	ldr	r3, [pc, #152]	; (40138c <main+0xa4>)
  4012f2:	4798      	blx	r3
  4012f4:	200e      	movs	r0, #14
  4012f6:	4e26      	ldr	r6, [pc, #152]	; (401390 <main+0xa8>)
  4012f8:	47b0      	blx	r6
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  4012fa:	4d26      	ldr	r5, [pc, #152]	; (401394 <main+0xac>)
  4012fc:	4b26      	ldr	r3, [pc, #152]	; (401398 <main+0xb0>)
  4012fe:	601d      	str	r5, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  401300:	4a26      	ldr	r2, [pc, #152]	; (40139c <main+0xb4>)
  401302:	4b27      	ldr	r3, [pc, #156]	; (4013a0 <main+0xb8>)
  401304:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  401306:	4a27      	ldr	r2, [pc, #156]	; (4013a4 <main+0xbc>)
  401308:	4b27      	ldr	r3, [pc, #156]	; (4013a8 <main+0xc0>)
  40130a:	601a      	str	r2, [r3, #0]
	usart_settings.baudrate = opt->baudrate;
  40130c:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
  401310:	9300      	str	r3, [sp, #0]
	usart_settings.char_length = opt->charlength;
  401312:	23c0      	movs	r3, #192	; 0xc0
  401314:	9301      	str	r3, [sp, #4]
	usart_settings.parity_type = opt->paritytype;
  401316:	f44f 6300 	mov.w	r3, #2048	; 0x800
  40131a:	9302      	str	r3, [sp, #8]
	usart_settings.stop_bits= opt->stopbits;
  40131c:	2400      	movs	r4, #0
  40131e:	9403      	str	r4, [sp, #12]
	usart_settings.channel_mode= US_MR_CHMODE_NORMAL;
  401320:	9404      	str	r4, [sp, #16]
  401322:	200e      	movs	r0, #14
  401324:	47b0      	blx	r6
		usart_init_rs232(p_usart, &usart_settings,
  401326:	4a21      	ldr	r2, [pc, #132]	; (4013ac <main+0xc4>)
  401328:	4669      	mov	r1, sp
  40132a:	4628      	mov	r0, r5
  40132c:	4b20      	ldr	r3, [pc, #128]	; (4013b0 <main+0xc8>)
  40132e:	4798      	blx	r3
		usart_enable_tx(p_usart);
  401330:	4628      	mov	r0, r5
  401332:	4b20      	ldr	r3, [pc, #128]	; (4013b4 <main+0xcc>)
  401334:	4798      	blx	r3
		usart_enable_rx(p_usart);
  401336:	4628      	mov	r0, r5
  401338:	4b1f      	ldr	r3, [pc, #124]	; (4013b8 <main+0xd0>)
  40133a:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  40133c:	4e1f      	ldr	r6, [pc, #124]	; (4013bc <main+0xd4>)
  40133e:	6833      	ldr	r3, [r6, #0]
  401340:	4621      	mov	r1, r4
  401342:	6898      	ldr	r0, [r3, #8]
  401344:	4d1e      	ldr	r5, [pc, #120]	; (4013c0 <main+0xd8>)
  401346:	47a8      	blx	r5
	setbuf(stdin, NULL);
  401348:	6833      	ldr	r3, [r6, #0]
  40134a:	4621      	mov	r1, r4
  40134c:	6858      	ldr	r0, [r3, #4]
  40134e:	47a8      	blx	r5

	/* Initialize the UART console. */
	configure_console();
	printf(STRING_HEADER);
  401350:	481c      	ldr	r0, [pc, #112]	; (4013c4 <main+0xdc>)
  401352:	4b1d      	ldr	r3, [pc, #116]	; (4013c8 <main+0xe0>)
  401354:	4798      	blx	r3
	//double temp[1], hum[1];
	//temp[0] = hum[0] = 0;
	//double *temp = 0;
	//double *hum = 0;
	
	DHT_Setup();
  401356:	4b1d      	ldr	r3, [pc, #116]	; (4013cc <main+0xe4>)
  401358:	4798      	blx	r3
//
	//vTaskStartScheduler();
	
	double temp, hum;
	while(1) {
		DHT_Read(&temp, &hum);
  40135a:	4f1d      	ldr	r7, [pc, #116]	; (4013d0 <main+0xe8>)
		//Check status
		//printf(temp);
		delay_ms(2000);
  40135c:	4d1d      	ldr	r5, [pc, #116]	; (4013d4 <main+0xec>)
  40135e:	4c1e      	ldr	r4, [pc, #120]	; (4013d8 <main+0xf0>)
		DHT_Read(&temp, &hum);
  401360:	a906      	add	r1, sp, #24
  401362:	a808      	add	r0, sp, #32
  401364:	47b8      	blx	r7
		delay_ms(2000);
  401366:	4628      	mov	r0, r5
  401368:	47a0      	blx	r4
		printf("Temperatura: %lf \n", temp);
  40136a:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
  40136e:	481b      	ldr	r0, [pc, #108]	; (4013dc <main+0xf4>)
  401370:	4e1b      	ldr	r6, [pc, #108]	; (4013e0 <main+0xf8>)
  401372:	47b0      	blx	r6
		delay_ms(2000);
  401374:	4628      	mov	r0, r5
  401376:	47a0      	blx	r4
		//Print humidity
		printf("Humidade: %lf \n", hum);
  401378:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
  40137c:	4819      	ldr	r0, [pc, #100]	; (4013e4 <main+0xfc>)
  40137e:	47b0      	blx	r6
		//Sensor needs 1-2s to stabilize its reading
		delay_ms(2000);
  401380:	4628      	mov	r0, r5
  401382:	47a0      	blx	r4
  401384:	e7ec      	b.n	401360 <main+0x78>
  401386:	bf00      	nop
  401388:	00400809 	.word	0x00400809
  40138c:	00400905 	.word	0x00400905
  401390:	00400cf9 	.word	0x00400cf9
  401394:	40028000 	.word	0x40028000
  401398:	20400b20 	.word	0x20400b20
  40139c:	004011f9 	.word	0x004011f9
  4013a0:	20400b1c 	.word	0x20400b1c
  4013a4:	0040111d 	.word	0x0040111d
  4013a8:	20400b18 	.word	0x20400b18
  4013ac:	08f0d180 	.word	0x08f0d180
  4013b0:	00400df5 	.word	0x00400df5
  4013b4:	00400e49 	.word	0x00400e49
  4013b8:	00400e4f 	.word	0x00400e4f
  4013bc:	20400010 	.word	0x20400010
  4013c0:	00401f81 	.word	0x00401f81
  4013c4:	00406c10 	.word	0x00406c10
  4013c8:	00401f71 	.word	0x00401f71
  4013cc:	004004f9 	.word	0x004004f9
  4013d0:	00400715 	.word	0x00400715
  4013d4:	06075ed6 	.word	0x06075ed6
  4013d8:	20400001 	.word	0x20400001
  4013dc:	00406c6c 	.word	0x00406c6c
  4013e0:	00401ead 	.word	0x00401ead
  4013e4:	00406c80 	.word	0x00406c80

004013e8 <__aeabi_drsub>:
  4013e8:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  4013ec:	e002      	b.n	4013f4 <__adddf3>
  4013ee:	bf00      	nop

004013f0 <__aeabi_dsub>:
  4013f0:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

004013f4 <__adddf3>:
  4013f4:	b530      	push	{r4, r5, lr}
  4013f6:	ea4f 0441 	mov.w	r4, r1, lsl #1
  4013fa:	ea4f 0543 	mov.w	r5, r3, lsl #1
  4013fe:	ea94 0f05 	teq	r4, r5
  401402:	bf08      	it	eq
  401404:	ea90 0f02 	teqeq	r0, r2
  401408:	bf1f      	itttt	ne
  40140a:	ea54 0c00 	orrsne.w	ip, r4, r0
  40140e:	ea55 0c02 	orrsne.w	ip, r5, r2
  401412:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  401416:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  40141a:	f000 80e2 	beq.w	4015e2 <__adddf3+0x1ee>
  40141e:	ea4f 5454 	mov.w	r4, r4, lsr #21
  401422:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  401426:	bfb8      	it	lt
  401428:	426d      	neglt	r5, r5
  40142a:	dd0c      	ble.n	401446 <__adddf3+0x52>
  40142c:	442c      	add	r4, r5
  40142e:	ea80 0202 	eor.w	r2, r0, r2
  401432:	ea81 0303 	eor.w	r3, r1, r3
  401436:	ea82 0000 	eor.w	r0, r2, r0
  40143a:	ea83 0101 	eor.w	r1, r3, r1
  40143e:	ea80 0202 	eor.w	r2, r0, r2
  401442:	ea81 0303 	eor.w	r3, r1, r3
  401446:	2d36      	cmp	r5, #54	; 0x36
  401448:	bf88      	it	hi
  40144a:	bd30      	pophi	{r4, r5, pc}
  40144c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  401450:	ea4f 3101 	mov.w	r1, r1, lsl #12
  401454:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  401458:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  40145c:	d002      	beq.n	401464 <__adddf3+0x70>
  40145e:	4240      	negs	r0, r0
  401460:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401464:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  401468:	ea4f 3303 	mov.w	r3, r3, lsl #12
  40146c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  401470:	d002      	beq.n	401478 <__adddf3+0x84>
  401472:	4252      	negs	r2, r2
  401474:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  401478:	ea94 0f05 	teq	r4, r5
  40147c:	f000 80a7 	beq.w	4015ce <__adddf3+0x1da>
  401480:	f1a4 0401 	sub.w	r4, r4, #1
  401484:	f1d5 0e20 	rsbs	lr, r5, #32
  401488:	db0d      	blt.n	4014a6 <__adddf3+0xb2>
  40148a:	fa02 fc0e 	lsl.w	ip, r2, lr
  40148e:	fa22 f205 	lsr.w	r2, r2, r5
  401492:	1880      	adds	r0, r0, r2
  401494:	f141 0100 	adc.w	r1, r1, #0
  401498:	fa03 f20e 	lsl.w	r2, r3, lr
  40149c:	1880      	adds	r0, r0, r2
  40149e:	fa43 f305 	asr.w	r3, r3, r5
  4014a2:	4159      	adcs	r1, r3
  4014a4:	e00e      	b.n	4014c4 <__adddf3+0xd0>
  4014a6:	f1a5 0520 	sub.w	r5, r5, #32
  4014aa:	f10e 0e20 	add.w	lr, lr, #32
  4014ae:	2a01      	cmp	r2, #1
  4014b0:	fa03 fc0e 	lsl.w	ip, r3, lr
  4014b4:	bf28      	it	cs
  4014b6:	f04c 0c02 	orrcs.w	ip, ip, #2
  4014ba:	fa43 f305 	asr.w	r3, r3, r5
  4014be:	18c0      	adds	r0, r0, r3
  4014c0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  4014c4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4014c8:	d507      	bpl.n	4014da <__adddf3+0xe6>
  4014ca:	f04f 0e00 	mov.w	lr, #0
  4014ce:	f1dc 0c00 	rsbs	ip, ip, #0
  4014d2:	eb7e 0000 	sbcs.w	r0, lr, r0
  4014d6:	eb6e 0101 	sbc.w	r1, lr, r1
  4014da:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  4014de:	d31b      	bcc.n	401518 <__adddf3+0x124>
  4014e0:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  4014e4:	d30c      	bcc.n	401500 <__adddf3+0x10c>
  4014e6:	0849      	lsrs	r1, r1, #1
  4014e8:	ea5f 0030 	movs.w	r0, r0, rrx
  4014ec:	ea4f 0c3c 	mov.w	ip, ip, rrx
  4014f0:	f104 0401 	add.w	r4, r4, #1
  4014f4:	ea4f 5244 	mov.w	r2, r4, lsl #21
  4014f8:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  4014fc:	f080 809a 	bcs.w	401634 <__adddf3+0x240>
  401500:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  401504:	bf08      	it	eq
  401506:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  40150a:	f150 0000 	adcs.w	r0, r0, #0
  40150e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401512:	ea41 0105 	orr.w	r1, r1, r5
  401516:	bd30      	pop	{r4, r5, pc}
  401518:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  40151c:	4140      	adcs	r0, r0
  40151e:	eb41 0101 	adc.w	r1, r1, r1
  401522:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401526:	f1a4 0401 	sub.w	r4, r4, #1
  40152a:	d1e9      	bne.n	401500 <__adddf3+0x10c>
  40152c:	f091 0f00 	teq	r1, #0
  401530:	bf04      	itt	eq
  401532:	4601      	moveq	r1, r0
  401534:	2000      	moveq	r0, #0
  401536:	fab1 f381 	clz	r3, r1
  40153a:	bf08      	it	eq
  40153c:	3320      	addeq	r3, #32
  40153e:	f1a3 030b 	sub.w	r3, r3, #11
  401542:	f1b3 0220 	subs.w	r2, r3, #32
  401546:	da0c      	bge.n	401562 <__adddf3+0x16e>
  401548:	320c      	adds	r2, #12
  40154a:	dd08      	ble.n	40155e <__adddf3+0x16a>
  40154c:	f102 0c14 	add.w	ip, r2, #20
  401550:	f1c2 020c 	rsb	r2, r2, #12
  401554:	fa01 f00c 	lsl.w	r0, r1, ip
  401558:	fa21 f102 	lsr.w	r1, r1, r2
  40155c:	e00c      	b.n	401578 <__adddf3+0x184>
  40155e:	f102 0214 	add.w	r2, r2, #20
  401562:	bfd8      	it	le
  401564:	f1c2 0c20 	rsble	ip, r2, #32
  401568:	fa01 f102 	lsl.w	r1, r1, r2
  40156c:	fa20 fc0c 	lsr.w	ip, r0, ip
  401570:	bfdc      	itt	le
  401572:	ea41 010c 	orrle.w	r1, r1, ip
  401576:	4090      	lslle	r0, r2
  401578:	1ae4      	subs	r4, r4, r3
  40157a:	bfa2      	ittt	ge
  40157c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  401580:	4329      	orrge	r1, r5
  401582:	bd30      	popge	{r4, r5, pc}
  401584:	ea6f 0404 	mvn.w	r4, r4
  401588:	3c1f      	subs	r4, #31
  40158a:	da1c      	bge.n	4015c6 <__adddf3+0x1d2>
  40158c:	340c      	adds	r4, #12
  40158e:	dc0e      	bgt.n	4015ae <__adddf3+0x1ba>
  401590:	f104 0414 	add.w	r4, r4, #20
  401594:	f1c4 0220 	rsb	r2, r4, #32
  401598:	fa20 f004 	lsr.w	r0, r0, r4
  40159c:	fa01 f302 	lsl.w	r3, r1, r2
  4015a0:	ea40 0003 	orr.w	r0, r0, r3
  4015a4:	fa21 f304 	lsr.w	r3, r1, r4
  4015a8:	ea45 0103 	orr.w	r1, r5, r3
  4015ac:	bd30      	pop	{r4, r5, pc}
  4015ae:	f1c4 040c 	rsb	r4, r4, #12
  4015b2:	f1c4 0220 	rsb	r2, r4, #32
  4015b6:	fa20 f002 	lsr.w	r0, r0, r2
  4015ba:	fa01 f304 	lsl.w	r3, r1, r4
  4015be:	ea40 0003 	orr.w	r0, r0, r3
  4015c2:	4629      	mov	r1, r5
  4015c4:	bd30      	pop	{r4, r5, pc}
  4015c6:	fa21 f004 	lsr.w	r0, r1, r4
  4015ca:	4629      	mov	r1, r5
  4015cc:	bd30      	pop	{r4, r5, pc}
  4015ce:	f094 0f00 	teq	r4, #0
  4015d2:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  4015d6:	bf06      	itte	eq
  4015d8:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  4015dc:	3401      	addeq	r4, #1
  4015de:	3d01      	subne	r5, #1
  4015e0:	e74e      	b.n	401480 <__adddf3+0x8c>
  4015e2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  4015e6:	bf18      	it	ne
  4015e8:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  4015ec:	d029      	beq.n	401642 <__adddf3+0x24e>
  4015ee:	ea94 0f05 	teq	r4, r5
  4015f2:	bf08      	it	eq
  4015f4:	ea90 0f02 	teqeq	r0, r2
  4015f8:	d005      	beq.n	401606 <__adddf3+0x212>
  4015fa:	ea54 0c00 	orrs.w	ip, r4, r0
  4015fe:	bf04      	itt	eq
  401600:	4619      	moveq	r1, r3
  401602:	4610      	moveq	r0, r2
  401604:	bd30      	pop	{r4, r5, pc}
  401606:	ea91 0f03 	teq	r1, r3
  40160a:	bf1e      	ittt	ne
  40160c:	2100      	movne	r1, #0
  40160e:	2000      	movne	r0, #0
  401610:	bd30      	popne	{r4, r5, pc}
  401612:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  401616:	d105      	bne.n	401624 <__adddf3+0x230>
  401618:	0040      	lsls	r0, r0, #1
  40161a:	4149      	adcs	r1, r1
  40161c:	bf28      	it	cs
  40161e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  401622:	bd30      	pop	{r4, r5, pc}
  401624:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  401628:	bf3c      	itt	cc
  40162a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  40162e:	bd30      	popcc	{r4, r5, pc}
  401630:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401634:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  401638:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  40163c:	f04f 0000 	mov.w	r0, #0
  401640:	bd30      	pop	{r4, r5, pc}
  401642:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  401646:	bf1a      	itte	ne
  401648:	4619      	movne	r1, r3
  40164a:	4610      	movne	r0, r2
  40164c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  401650:	bf1c      	itt	ne
  401652:	460b      	movne	r3, r1
  401654:	4602      	movne	r2, r0
  401656:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  40165a:	bf06      	itte	eq
  40165c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  401660:	ea91 0f03 	teqeq	r1, r3
  401664:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  401668:	bd30      	pop	{r4, r5, pc}
  40166a:	bf00      	nop

0040166c <__aeabi_ui2d>:
  40166c:	f090 0f00 	teq	r0, #0
  401670:	bf04      	itt	eq
  401672:	2100      	moveq	r1, #0
  401674:	4770      	bxeq	lr
  401676:	b530      	push	{r4, r5, lr}
  401678:	f44f 6480 	mov.w	r4, #1024	; 0x400
  40167c:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401680:	f04f 0500 	mov.w	r5, #0
  401684:	f04f 0100 	mov.w	r1, #0
  401688:	e750      	b.n	40152c <__adddf3+0x138>
  40168a:	bf00      	nop

0040168c <__aeabi_i2d>:
  40168c:	f090 0f00 	teq	r0, #0
  401690:	bf04      	itt	eq
  401692:	2100      	moveq	r1, #0
  401694:	4770      	bxeq	lr
  401696:	b530      	push	{r4, r5, lr}
  401698:	f44f 6480 	mov.w	r4, #1024	; 0x400
  40169c:	f104 0432 	add.w	r4, r4, #50	; 0x32
  4016a0:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  4016a4:	bf48      	it	mi
  4016a6:	4240      	negmi	r0, r0
  4016a8:	f04f 0100 	mov.w	r1, #0
  4016ac:	e73e      	b.n	40152c <__adddf3+0x138>
  4016ae:	bf00      	nop

004016b0 <__aeabi_f2d>:
  4016b0:	0042      	lsls	r2, r0, #1
  4016b2:	ea4f 01e2 	mov.w	r1, r2, asr #3
  4016b6:	ea4f 0131 	mov.w	r1, r1, rrx
  4016ba:	ea4f 7002 	mov.w	r0, r2, lsl #28
  4016be:	bf1f      	itttt	ne
  4016c0:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  4016c4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  4016c8:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  4016cc:	4770      	bxne	lr
  4016ce:	f092 0f00 	teq	r2, #0
  4016d2:	bf14      	ite	ne
  4016d4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  4016d8:	4770      	bxeq	lr
  4016da:	b530      	push	{r4, r5, lr}
  4016dc:	f44f 7460 	mov.w	r4, #896	; 0x380
  4016e0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4016e4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  4016e8:	e720      	b.n	40152c <__adddf3+0x138>
  4016ea:	bf00      	nop

004016ec <__aeabi_ul2d>:
  4016ec:	ea50 0201 	orrs.w	r2, r0, r1
  4016f0:	bf08      	it	eq
  4016f2:	4770      	bxeq	lr
  4016f4:	b530      	push	{r4, r5, lr}
  4016f6:	f04f 0500 	mov.w	r5, #0
  4016fa:	e00a      	b.n	401712 <__aeabi_l2d+0x16>

004016fc <__aeabi_l2d>:
  4016fc:	ea50 0201 	orrs.w	r2, r0, r1
  401700:	bf08      	it	eq
  401702:	4770      	bxeq	lr
  401704:	b530      	push	{r4, r5, lr}
  401706:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  40170a:	d502      	bpl.n	401712 <__aeabi_l2d+0x16>
  40170c:	4240      	negs	r0, r0
  40170e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401712:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401716:	f104 0432 	add.w	r4, r4, #50	; 0x32
  40171a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  40171e:	f43f aedc 	beq.w	4014da <__adddf3+0xe6>
  401722:	f04f 0203 	mov.w	r2, #3
  401726:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  40172a:	bf18      	it	ne
  40172c:	3203      	addne	r2, #3
  40172e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401732:	bf18      	it	ne
  401734:	3203      	addne	r2, #3
  401736:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  40173a:	f1c2 0320 	rsb	r3, r2, #32
  40173e:	fa00 fc03 	lsl.w	ip, r0, r3
  401742:	fa20 f002 	lsr.w	r0, r0, r2
  401746:	fa01 fe03 	lsl.w	lr, r1, r3
  40174a:	ea40 000e 	orr.w	r0, r0, lr
  40174e:	fa21 f102 	lsr.w	r1, r1, r2
  401752:	4414      	add	r4, r2
  401754:	e6c1      	b.n	4014da <__adddf3+0xe6>
  401756:	bf00      	nop

00401758 <__aeabi_dmul>:
  401758:	b570      	push	{r4, r5, r6, lr}
  40175a:	f04f 0cff 	mov.w	ip, #255	; 0xff
  40175e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  401762:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  401766:	bf1d      	ittte	ne
  401768:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  40176c:	ea94 0f0c 	teqne	r4, ip
  401770:	ea95 0f0c 	teqne	r5, ip
  401774:	f000 f8de 	bleq	401934 <__aeabi_dmul+0x1dc>
  401778:	442c      	add	r4, r5
  40177a:	ea81 0603 	eor.w	r6, r1, r3
  40177e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  401782:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  401786:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  40178a:	bf18      	it	ne
  40178c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  401790:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401794:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  401798:	d038      	beq.n	40180c <__aeabi_dmul+0xb4>
  40179a:	fba0 ce02 	umull	ip, lr, r0, r2
  40179e:	f04f 0500 	mov.w	r5, #0
  4017a2:	fbe1 e502 	umlal	lr, r5, r1, r2
  4017a6:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  4017aa:	fbe0 e503 	umlal	lr, r5, r0, r3
  4017ae:	f04f 0600 	mov.w	r6, #0
  4017b2:	fbe1 5603 	umlal	r5, r6, r1, r3
  4017b6:	f09c 0f00 	teq	ip, #0
  4017ba:	bf18      	it	ne
  4017bc:	f04e 0e01 	orrne.w	lr, lr, #1
  4017c0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  4017c4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  4017c8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  4017cc:	d204      	bcs.n	4017d8 <__aeabi_dmul+0x80>
  4017ce:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  4017d2:	416d      	adcs	r5, r5
  4017d4:	eb46 0606 	adc.w	r6, r6, r6
  4017d8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  4017dc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  4017e0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  4017e4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  4017e8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  4017ec:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  4017f0:	bf88      	it	hi
  4017f2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  4017f6:	d81e      	bhi.n	401836 <__aeabi_dmul+0xde>
  4017f8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  4017fc:	bf08      	it	eq
  4017fe:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  401802:	f150 0000 	adcs.w	r0, r0, #0
  401806:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  40180a:	bd70      	pop	{r4, r5, r6, pc}
  40180c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  401810:	ea46 0101 	orr.w	r1, r6, r1
  401814:	ea40 0002 	orr.w	r0, r0, r2
  401818:	ea81 0103 	eor.w	r1, r1, r3
  40181c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  401820:	bfc2      	ittt	gt
  401822:	ebd4 050c 	rsbsgt	r5, r4, ip
  401826:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  40182a:	bd70      	popgt	{r4, r5, r6, pc}
  40182c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401830:	f04f 0e00 	mov.w	lr, #0
  401834:	3c01      	subs	r4, #1
  401836:	f300 80ab 	bgt.w	401990 <__aeabi_dmul+0x238>
  40183a:	f114 0f36 	cmn.w	r4, #54	; 0x36
  40183e:	bfde      	ittt	le
  401840:	2000      	movle	r0, #0
  401842:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  401846:	bd70      	pople	{r4, r5, r6, pc}
  401848:	f1c4 0400 	rsb	r4, r4, #0
  40184c:	3c20      	subs	r4, #32
  40184e:	da35      	bge.n	4018bc <__aeabi_dmul+0x164>
  401850:	340c      	adds	r4, #12
  401852:	dc1b      	bgt.n	40188c <__aeabi_dmul+0x134>
  401854:	f104 0414 	add.w	r4, r4, #20
  401858:	f1c4 0520 	rsb	r5, r4, #32
  40185c:	fa00 f305 	lsl.w	r3, r0, r5
  401860:	fa20 f004 	lsr.w	r0, r0, r4
  401864:	fa01 f205 	lsl.w	r2, r1, r5
  401868:	ea40 0002 	orr.w	r0, r0, r2
  40186c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  401870:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401874:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  401878:	fa21 f604 	lsr.w	r6, r1, r4
  40187c:	eb42 0106 	adc.w	r1, r2, r6
  401880:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401884:	bf08      	it	eq
  401886:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  40188a:	bd70      	pop	{r4, r5, r6, pc}
  40188c:	f1c4 040c 	rsb	r4, r4, #12
  401890:	f1c4 0520 	rsb	r5, r4, #32
  401894:	fa00 f304 	lsl.w	r3, r0, r4
  401898:	fa20 f005 	lsr.w	r0, r0, r5
  40189c:	fa01 f204 	lsl.w	r2, r1, r4
  4018a0:	ea40 0002 	orr.w	r0, r0, r2
  4018a4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4018a8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  4018ac:	f141 0100 	adc.w	r1, r1, #0
  4018b0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4018b4:	bf08      	it	eq
  4018b6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4018ba:	bd70      	pop	{r4, r5, r6, pc}
  4018bc:	f1c4 0520 	rsb	r5, r4, #32
  4018c0:	fa00 f205 	lsl.w	r2, r0, r5
  4018c4:	ea4e 0e02 	orr.w	lr, lr, r2
  4018c8:	fa20 f304 	lsr.w	r3, r0, r4
  4018cc:	fa01 f205 	lsl.w	r2, r1, r5
  4018d0:	ea43 0302 	orr.w	r3, r3, r2
  4018d4:	fa21 f004 	lsr.w	r0, r1, r4
  4018d8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4018dc:	fa21 f204 	lsr.w	r2, r1, r4
  4018e0:	ea20 0002 	bic.w	r0, r0, r2
  4018e4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  4018e8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4018ec:	bf08      	it	eq
  4018ee:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4018f2:	bd70      	pop	{r4, r5, r6, pc}
  4018f4:	f094 0f00 	teq	r4, #0
  4018f8:	d10f      	bne.n	40191a <__aeabi_dmul+0x1c2>
  4018fa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  4018fe:	0040      	lsls	r0, r0, #1
  401900:	eb41 0101 	adc.w	r1, r1, r1
  401904:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401908:	bf08      	it	eq
  40190a:	3c01      	subeq	r4, #1
  40190c:	d0f7      	beq.n	4018fe <__aeabi_dmul+0x1a6>
  40190e:	ea41 0106 	orr.w	r1, r1, r6
  401912:	f095 0f00 	teq	r5, #0
  401916:	bf18      	it	ne
  401918:	4770      	bxne	lr
  40191a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  40191e:	0052      	lsls	r2, r2, #1
  401920:	eb43 0303 	adc.w	r3, r3, r3
  401924:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  401928:	bf08      	it	eq
  40192a:	3d01      	subeq	r5, #1
  40192c:	d0f7      	beq.n	40191e <__aeabi_dmul+0x1c6>
  40192e:	ea43 0306 	orr.w	r3, r3, r6
  401932:	4770      	bx	lr
  401934:	ea94 0f0c 	teq	r4, ip
  401938:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  40193c:	bf18      	it	ne
  40193e:	ea95 0f0c 	teqne	r5, ip
  401942:	d00c      	beq.n	40195e <__aeabi_dmul+0x206>
  401944:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401948:	bf18      	it	ne
  40194a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  40194e:	d1d1      	bne.n	4018f4 <__aeabi_dmul+0x19c>
  401950:	ea81 0103 	eor.w	r1, r1, r3
  401954:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401958:	f04f 0000 	mov.w	r0, #0
  40195c:	bd70      	pop	{r4, r5, r6, pc}
  40195e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401962:	bf06      	itte	eq
  401964:	4610      	moveq	r0, r2
  401966:	4619      	moveq	r1, r3
  401968:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  40196c:	d019      	beq.n	4019a2 <__aeabi_dmul+0x24a>
  40196e:	ea94 0f0c 	teq	r4, ip
  401972:	d102      	bne.n	40197a <__aeabi_dmul+0x222>
  401974:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  401978:	d113      	bne.n	4019a2 <__aeabi_dmul+0x24a>
  40197a:	ea95 0f0c 	teq	r5, ip
  40197e:	d105      	bne.n	40198c <__aeabi_dmul+0x234>
  401980:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  401984:	bf1c      	itt	ne
  401986:	4610      	movne	r0, r2
  401988:	4619      	movne	r1, r3
  40198a:	d10a      	bne.n	4019a2 <__aeabi_dmul+0x24a>
  40198c:	ea81 0103 	eor.w	r1, r1, r3
  401990:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401994:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  401998:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  40199c:	f04f 0000 	mov.w	r0, #0
  4019a0:	bd70      	pop	{r4, r5, r6, pc}
  4019a2:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  4019a6:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  4019aa:	bd70      	pop	{r4, r5, r6, pc}

004019ac <__aeabi_ddiv>:
  4019ac:	b570      	push	{r4, r5, r6, lr}
  4019ae:	f04f 0cff 	mov.w	ip, #255	; 0xff
  4019b2:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  4019b6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  4019ba:	bf1d      	ittte	ne
  4019bc:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  4019c0:	ea94 0f0c 	teqne	r4, ip
  4019c4:	ea95 0f0c 	teqne	r5, ip
  4019c8:	f000 f8a7 	bleq	401b1a <__aeabi_ddiv+0x16e>
  4019cc:	eba4 0405 	sub.w	r4, r4, r5
  4019d0:	ea81 0e03 	eor.w	lr, r1, r3
  4019d4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  4019d8:	ea4f 3101 	mov.w	r1, r1, lsl #12
  4019dc:	f000 8088 	beq.w	401af0 <__aeabi_ddiv+0x144>
  4019e0:	ea4f 3303 	mov.w	r3, r3, lsl #12
  4019e4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  4019e8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  4019ec:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  4019f0:	ea4f 2202 	mov.w	r2, r2, lsl #8
  4019f4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  4019f8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  4019fc:	ea4f 2600 	mov.w	r6, r0, lsl #8
  401a00:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  401a04:	429d      	cmp	r5, r3
  401a06:	bf08      	it	eq
  401a08:	4296      	cmpeq	r6, r2
  401a0a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  401a0e:	f504 7440 	add.w	r4, r4, #768	; 0x300
  401a12:	d202      	bcs.n	401a1a <__aeabi_ddiv+0x6e>
  401a14:	085b      	lsrs	r3, r3, #1
  401a16:	ea4f 0232 	mov.w	r2, r2, rrx
  401a1a:	1ab6      	subs	r6, r6, r2
  401a1c:	eb65 0503 	sbc.w	r5, r5, r3
  401a20:	085b      	lsrs	r3, r3, #1
  401a22:	ea4f 0232 	mov.w	r2, r2, rrx
  401a26:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  401a2a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  401a2e:	ebb6 0e02 	subs.w	lr, r6, r2
  401a32:	eb75 0e03 	sbcs.w	lr, r5, r3
  401a36:	bf22      	ittt	cs
  401a38:	1ab6      	subcs	r6, r6, r2
  401a3a:	4675      	movcs	r5, lr
  401a3c:	ea40 000c 	orrcs.w	r0, r0, ip
  401a40:	085b      	lsrs	r3, r3, #1
  401a42:	ea4f 0232 	mov.w	r2, r2, rrx
  401a46:	ebb6 0e02 	subs.w	lr, r6, r2
  401a4a:	eb75 0e03 	sbcs.w	lr, r5, r3
  401a4e:	bf22      	ittt	cs
  401a50:	1ab6      	subcs	r6, r6, r2
  401a52:	4675      	movcs	r5, lr
  401a54:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  401a58:	085b      	lsrs	r3, r3, #1
  401a5a:	ea4f 0232 	mov.w	r2, r2, rrx
  401a5e:	ebb6 0e02 	subs.w	lr, r6, r2
  401a62:	eb75 0e03 	sbcs.w	lr, r5, r3
  401a66:	bf22      	ittt	cs
  401a68:	1ab6      	subcs	r6, r6, r2
  401a6a:	4675      	movcs	r5, lr
  401a6c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  401a70:	085b      	lsrs	r3, r3, #1
  401a72:	ea4f 0232 	mov.w	r2, r2, rrx
  401a76:	ebb6 0e02 	subs.w	lr, r6, r2
  401a7a:	eb75 0e03 	sbcs.w	lr, r5, r3
  401a7e:	bf22      	ittt	cs
  401a80:	1ab6      	subcs	r6, r6, r2
  401a82:	4675      	movcs	r5, lr
  401a84:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  401a88:	ea55 0e06 	orrs.w	lr, r5, r6
  401a8c:	d018      	beq.n	401ac0 <__aeabi_ddiv+0x114>
  401a8e:	ea4f 1505 	mov.w	r5, r5, lsl #4
  401a92:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  401a96:	ea4f 1606 	mov.w	r6, r6, lsl #4
  401a9a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  401a9e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  401aa2:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  401aa6:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  401aaa:	d1c0      	bne.n	401a2e <__aeabi_ddiv+0x82>
  401aac:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401ab0:	d10b      	bne.n	401aca <__aeabi_ddiv+0x11e>
  401ab2:	ea41 0100 	orr.w	r1, r1, r0
  401ab6:	f04f 0000 	mov.w	r0, #0
  401aba:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  401abe:	e7b6      	b.n	401a2e <__aeabi_ddiv+0x82>
  401ac0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401ac4:	bf04      	itt	eq
  401ac6:	4301      	orreq	r1, r0
  401ac8:	2000      	moveq	r0, #0
  401aca:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  401ace:	bf88      	it	hi
  401ad0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  401ad4:	f63f aeaf 	bhi.w	401836 <__aeabi_dmul+0xde>
  401ad8:	ebb5 0c03 	subs.w	ip, r5, r3
  401adc:	bf04      	itt	eq
  401ade:	ebb6 0c02 	subseq.w	ip, r6, r2
  401ae2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  401ae6:	f150 0000 	adcs.w	r0, r0, #0
  401aea:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401aee:	bd70      	pop	{r4, r5, r6, pc}
  401af0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  401af4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  401af8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  401afc:	bfc2      	ittt	gt
  401afe:	ebd4 050c 	rsbsgt	r5, r4, ip
  401b02:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  401b06:	bd70      	popgt	{r4, r5, r6, pc}
  401b08:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401b0c:	f04f 0e00 	mov.w	lr, #0
  401b10:	3c01      	subs	r4, #1
  401b12:	e690      	b.n	401836 <__aeabi_dmul+0xde>
  401b14:	ea45 0e06 	orr.w	lr, r5, r6
  401b18:	e68d      	b.n	401836 <__aeabi_dmul+0xde>
  401b1a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  401b1e:	ea94 0f0c 	teq	r4, ip
  401b22:	bf08      	it	eq
  401b24:	ea95 0f0c 	teqeq	r5, ip
  401b28:	f43f af3b 	beq.w	4019a2 <__aeabi_dmul+0x24a>
  401b2c:	ea94 0f0c 	teq	r4, ip
  401b30:	d10a      	bne.n	401b48 <__aeabi_ddiv+0x19c>
  401b32:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  401b36:	f47f af34 	bne.w	4019a2 <__aeabi_dmul+0x24a>
  401b3a:	ea95 0f0c 	teq	r5, ip
  401b3e:	f47f af25 	bne.w	40198c <__aeabi_dmul+0x234>
  401b42:	4610      	mov	r0, r2
  401b44:	4619      	mov	r1, r3
  401b46:	e72c      	b.n	4019a2 <__aeabi_dmul+0x24a>
  401b48:	ea95 0f0c 	teq	r5, ip
  401b4c:	d106      	bne.n	401b5c <__aeabi_ddiv+0x1b0>
  401b4e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  401b52:	f43f aefd 	beq.w	401950 <__aeabi_dmul+0x1f8>
  401b56:	4610      	mov	r0, r2
  401b58:	4619      	mov	r1, r3
  401b5a:	e722      	b.n	4019a2 <__aeabi_dmul+0x24a>
  401b5c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401b60:	bf18      	it	ne
  401b62:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  401b66:	f47f aec5 	bne.w	4018f4 <__aeabi_dmul+0x19c>
  401b6a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  401b6e:	f47f af0d 	bne.w	40198c <__aeabi_dmul+0x234>
  401b72:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  401b76:	f47f aeeb 	bne.w	401950 <__aeabi_dmul+0x1f8>
  401b7a:	e712      	b.n	4019a2 <__aeabi_dmul+0x24a>

00401b7c <__gedf2>:
  401b7c:	f04f 3cff 	mov.w	ip, #4294967295
  401b80:	e006      	b.n	401b90 <__cmpdf2+0x4>
  401b82:	bf00      	nop

00401b84 <__ledf2>:
  401b84:	f04f 0c01 	mov.w	ip, #1
  401b88:	e002      	b.n	401b90 <__cmpdf2+0x4>
  401b8a:	bf00      	nop

00401b8c <__cmpdf2>:
  401b8c:	f04f 0c01 	mov.w	ip, #1
  401b90:	f84d cd04 	str.w	ip, [sp, #-4]!
  401b94:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  401b98:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  401b9c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  401ba0:	bf18      	it	ne
  401ba2:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  401ba6:	d01b      	beq.n	401be0 <__cmpdf2+0x54>
  401ba8:	b001      	add	sp, #4
  401baa:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  401bae:	bf0c      	ite	eq
  401bb0:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  401bb4:	ea91 0f03 	teqne	r1, r3
  401bb8:	bf02      	ittt	eq
  401bba:	ea90 0f02 	teqeq	r0, r2
  401bbe:	2000      	moveq	r0, #0
  401bc0:	4770      	bxeq	lr
  401bc2:	f110 0f00 	cmn.w	r0, #0
  401bc6:	ea91 0f03 	teq	r1, r3
  401bca:	bf58      	it	pl
  401bcc:	4299      	cmppl	r1, r3
  401bce:	bf08      	it	eq
  401bd0:	4290      	cmpeq	r0, r2
  401bd2:	bf2c      	ite	cs
  401bd4:	17d8      	asrcs	r0, r3, #31
  401bd6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  401bda:	f040 0001 	orr.w	r0, r0, #1
  401bde:	4770      	bx	lr
  401be0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  401be4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  401be8:	d102      	bne.n	401bf0 <__cmpdf2+0x64>
  401bea:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  401bee:	d107      	bne.n	401c00 <__cmpdf2+0x74>
  401bf0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  401bf4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  401bf8:	d1d6      	bne.n	401ba8 <__cmpdf2+0x1c>
  401bfa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  401bfe:	d0d3      	beq.n	401ba8 <__cmpdf2+0x1c>
  401c00:	f85d 0b04 	ldr.w	r0, [sp], #4
  401c04:	4770      	bx	lr
  401c06:	bf00      	nop

00401c08 <__aeabi_cdrcmple>:
  401c08:	4684      	mov	ip, r0
  401c0a:	4610      	mov	r0, r2
  401c0c:	4662      	mov	r2, ip
  401c0e:	468c      	mov	ip, r1
  401c10:	4619      	mov	r1, r3
  401c12:	4663      	mov	r3, ip
  401c14:	e000      	b.n	401c18 <__aeabi_cdcmpeq>
  401c16:	bf00      	nop

00401c18 <__aeabi_cdcmpeq>:
  401c18:	b501      	push	{r0, lr}
  401c1a:	f7ff ffb7 	bl	401b8c <__cmpdf2>
  401c1e:	2800      	cmp	r0, #0
  401c20:	bf48      	it	mi
  401c22:	f110 0f00 	cmnmi.w	r0, #0
  401c26:	bd01      	pop	{r0, pc}

00401c28 <__aeabi_dcmpeq>:
  401c28:	f84d ed08 	str.w	lr, [sp, #-8]!
  401c2c:	f7ff fff4 	bl	401c18 <__aeabi_cdcmpeq>
  401c30:	bf0c      	ite	eq
  401c32:	2001      	moveq	r0, #1
  401c34:	2000      	movne	r0, #0
  401c36:	f85d fb08 	ldr.w	pc, [sp], #8
  401c3a:	bf00      	nop

00401c3c <__aeabi_dcmplt>:
  401c3c:	f84d ed08 	str.w	lr, [sp, #-8]!
  401c40:	f7ff ffea 	bl	401c18 <__aeabi_cdcmpeq>
  401c44:	bf34      	ite	cc
  401c46:	2001      	movcc	r0, #1
  401c48:	2000      	movcs	r0, #0
  401c4a:	f85d fb08 	ldr.w	pc, [sp], #8
  401c4e:	bf00      	nop

00401c50 <__aeabi_dcmple>:
  401c50:	f84d ed08 	str.w	lr, [sp, #-8]!
  401c54:	f7ff ffe0 	bl	401c18 <__aeabi_cdcmpeq>
  401c58:	bf94      	ite	ls
  401c5a:	2001      	movls	r0, #1
  401c5c:	2000      	movhi	r0, #0
  401c5e:	f85d fb08 	ldr.w	pc, [sp], #8
  401c62:	bf00      	nop

00401c64 <__aeabi_dcmpge>:
  401c64:	f84d ed08 	str.w	lr, [sp, #-8]!
  401c68:	f7ff ffce 	bl	401c08 <__aeabi_cdrcmple>
  401c6c:	bf94      	ite	ls
  401c6e:	2001      	movls	r0, #1
  401c70:	2000      	movhi	r0, #0
  401c72:	f85d fb08 	ldr.w	pc, [sp], #8
  401c76:	bf00      	nop

00401c78 <__aeabi_dcmpgt>:
  401c78:	f84d ed08 	str.w	lr, [sp, #-8]!
  401c7c:	f7ff ffc4 	bl	401c08 <__aeabi_cdrcmple>
  401c80:	bf34      	ite	cc
  401c82:	2001      	movcc	r0, #1
  401c84:	2000      	movcs	r0, #0
  401c86:	f85d fb08 	ldr.w	pc, [sp], #8
  401c8a:	bf00      	nop

00401c8c <__libc_init_array>:
  401c8c:	b570      	push	{r4, r5, r6, lr}
  401c8e:	4e0f      	ldr	r6, [pc, #60]	; (401ccc <__libc_init_array+0x40>)
  401c90:	4d0f      	ldr	r5, [pc, #60]	; (401cd0 <__libc_init_array+0x44>)
  401c92:	1b76      	subs	r6, r6, r5
  401c94:	10b6      	asrs	r6, r6, #2
  401c96:	bf18      	it	ne
  401c98:	2400      	movne	r4, #0
  401c9a:	d005      	beq.n	401ca8 <__libc_init_array+0x1c>
  401c9c:	3401      	adds	r4, #1
  401c9e:	f855 3b04 	ldr.w	r3, [r5], #4
  401ca2:	4798      	blx	r3
  401ca4:	42a6      	cmp	r6, r4
  401ca6:	d1f9      	bne.n	401c9c <__libc_init_array+0x10>
  401ca8:	4e0a      	ldr	r6, [pc, #40]	; (401cd4 <__libc_init_array+0x48>)
  401caa:	4d0b      	ldr	r5, [pc, #44]	; (401cd8 <__libc_init_array+0x4c>)
  401cac:	1b76      	subs	r6, r6, r5
  401cae:	f005 f943 	bl	406f38 <_init>
  401cb2:	10b6      	asrs	r6, r6, #2
  401cb4:	bf18      	it	ne
  401cb6:	2400      	movne	r4, #0
  401cb8:	d006      	beq.n	401cc8 <__libc_init_array+0x3c>
  401cba:	3401      	adds	r4, #1
  401cbc:	f855 3b04 	ldr.w	r3, [r5], #4
  401cc0:	4798      	blx	r3
  401cc2:	42a6      	cmp	r6, r4
  401cc4:	d1f9      	bne.n	401cba <__libc_init_array+0x2e>
  401cc6:	bd70      	pop	{r4, r5, r6, pc}
  401cc8:	bd70      	pop	{r4, r5, r6, pc}
  401cca:	bf00      	nop
  401ccc:	00406f44 	.word	0x00406f44
  401cd0:	00406f44 	.word	0x00406f44
  401cd4:	00406f4c 	.word	0x00406f4c
  401cd8:	00406f44 	.word	0x00406f44

00401cdc <memcpy>:
  401cdc:	4684      	mov	ip, r0
  401cde:	ea41 0300 	orr.w	r3, r1, r0
  401ce2:	f013 0303 	ands.w	r3, r3, #3
  401ce6:	d16d      	bne.n	401dc4 <memcpy+0xe8>
  401ce8:	3a40      	subs	r2, #64	; 0x40
  401cea:	d341      	bcc.n	401d70 <memcpy+0x94>
  401cec:	f851 3b04 	ldr.w	r3, [r1], #4
  401cf0:	f840 3b04 	str.w	r3, [r0], #4
  401cf4:	f851 3b04 	ldr.w	r3, [r1], #4
  401cf8:	f840 3b04 	str.w	r3, [r0], #4
  401cfc:	f851 3b04 	ldr.w	r3, [r1], #4
  401d00:	f840 3b04 	str.w	r3, [r0], #4
  401d04:	f851 3b04 	ldr.w	r3, [r1], #4
  401d08:	f840 3b04 	str.w	r3, [r0], #4
  401d0c:	f851 3b04 	ldr.w	r3, [r1], #4
  401d10:	f840 3b04 	str.w	r3, [r0], #4
  401d14:	f851 3b04 	ldr.w	r3, [r1], #4
  401d18:	f840 3b04 	str.w	r3, [r0], #4
  401d1c:	f851 3b04 	ldr.w	r3, [r1], #4
  401d20:	f840 3b04 	str.w	r3, [r0], #4
  401d24:	f851 3b04 	ldr.w	r3, [r1], #4
  401d28:	f840 3b04 	str.w	r3, [r0], #4
  401d2c:	f851 3b04 	ldr.w	r3, [r1], #4
  401d30:	f840 3b04 	str.w	r3, [r0], #4
  401d34:	f851 3b04 	ldr.w	r3, [r1], #4
  401d38:	f840 3b04 	str.w	r3, [r0], #4
  401d3c:	f851 3b04 	ldr.w	r3, [r1], #4
  401d40:	f840 3b04 	str.w	r3, [r0], #4
  401d44:	f851 3b04 	ldr.w	r3, [r1], #4
  401d48:	f840 3b04 	str.w	r3, [r0], #4
  401d4c:	f851 3b04 	ldr.w	r3, [r1], #4
  401d50:	f840 3b04 	str.w	r3, [r0], #4
  401d54:	f851 3b04 	ldr.w	r3, [r1], #4
  401d58:	f840 3b04 	str.w	r3, [r0], #4
  401d5c:	f851 3b04 	ldr.w	r3, [r1], #4
  401d60:	f840 3b04 	str.w	r3, [r0], #4
  401d64:	f851 3b04 	ldr.w	r3, [r1], #4
  401d68:	f840 3b04 	str.w	r3, [r0], #4
  401d6c:	3a40      	subs	r2, #64	; 0x40
  401d6e:	d2bd      	bcs.n	401cec <memcpy+0x10>
  401d70:	3230      	adds	r2, #48	; 0x30
  401d72:	d311      	bcc.n	401d98 <memcpy+0xbc>
  401d74:	f851 3b04 	ldr.w	r3, [r1], #4
  401d78:	f840 3b04 	str.w	r3, [r0], #4
  401d7c:	f851 3b04 	ldr.w	r3, [r1], #4
  401d80:	f840 3b04 	str.w	r3, [r0], #4
  401d84:	f851 3b04 	ldr.w	r3, [r1], #4
  401d88:	f840 3b04 	str.w	r3, [r0], #4
  401d8c:	f851 3b04 	ldr.w	r3, [r1], #4
  401d90:	f840 3b04 	str.w	r3, [r0], #4
  401d94:	3a10      	subs	r2, #16
  401d96:	d2ed      	bcs.n	401d74 <memcpy+0x98>
  401d98:	320c      	adds	r2, #12
  401d9a:	d305      	bcc.n	401da8 <memcpy+0xcc>
  401d9c:	f851 3b04 	ldr.w	r3, [r1], #4
  401da0:	f840 3b04 	str.w	r3, [r0], #4
  401da4:	3a04      	subs	r2, #4
  401da6:	d2f9      	bcs.n	401d9c <memcpy+0xc0>
  401da8:	3204      	adds	r2, #4
  401daa:	d008      	beq.n	401dbe <memcpy+0xe2>
  401dac:	07d2      	lsls	r2, r2, #31
  401dae:	bf1c      	itt	ne
  401db0:	f811 3b01 	ldrbne.w	r3, [r1], #1
  401db4:	f800 3b01 	strbne.w	r3, [r0], #1
  401db8:	d301      	bcc.n	401dbe <memcpy+0xe2>
  401dba:	880b      	ldrh	r3, [r1, #0]
  401dbc:	8003      	strh	r3, [r0, #0]
  401dbe:	4660      	mov	r0, ip
  401dc0:	4770      	bx	lr
  401dc2:	bf00      	nop
  401dc4:	2a08      	cmp	r2, #8
  401dc6:	d313      	bcc.n	401df0 <memcpy+0x114>
  401dc8:	078b      	lsls	r3, r1, #30
  401dca:	d08d      	beq.n	401ce8 <memcpy+0xc>
  401dcc:	f010 0303 	ands.w	r3, r0, #3
  401dd0:	d08a      	beq.n	401ce8 <memcpy+0xc>
  401dd2:	f1c3 0304 	rsb	r3, r3, #4
  401dd6:	1ad2      	subs	r2, r2, r3
  401dd8:	07db      	lsls	r3, r3, #31
  401dda:	bf1c      	itt	ne
  401ddc:	f811 3b01 	ldrbne.w	r3, [r1], #1
  401de0:	f800 3b01 	strbne.w	r3, [r0], #1
  401de4:	d380      	bcc.n	401ce8 <memcpy+0xc>
  401de6:	f831 3b02 	ldrh.w	r3, [r1], #2
  401dea:	f820 3b02 	strh.w	r3, [r0], #2
  401dee:	e77b      	b.n	401ce8 <memcpy+0xc>
  401df0:	3a04      	subs	r2, #4
  401df2:	d3d9      	bcc.n	401da8 <memcpy+0xcc>
  401df4:	3a01      	subs	r2, #1
  401df6:	f811 3b01 	ldrb.w	r3, [r1], #1
  401dfa:	f800 3b01 	strb.w	r3, [r0], #1
  401dfe:	d2f9      	bcs.n	401df4 <memcpy+0x118>
  401e00:	780b      	ldrb	r3, [r1, #0]
  401e02:	7003      	strb	r3, [r0, #0]
  401e04:	784b      	ldrb	r3, [r1, #1]
  401e06:	7043      	strb	r3, [r0, #1]
  401e08:	788b      	ldrb	r3, [r1, #2]
  401e0a:	7083      	strb	r3, [r0, #2]
  401e0c:	4660      	mov	r0, ip
  401e0e:	4770      	bx	lr

00401e10 <memset>:
  401e10:	b470      	push	{r4, r5, r6}
  401e12:	0786      	lsls	r6, r0, #30
  401e14:	d046      	beq.n	401ea4 <memset+0x94>
  401e16:	1e54      	subs	r4, r2, #1
  401e18:	2a00      	cmp	r2, #0
  401e1a:	d041      	beq.n	401ea0 <memset+0x90>
  401e1c:	b2ca      	uxtb	r2, r1
  401e1e:	4603      	mov	r3, r0
  401e20:	e002      	b.n	401e28 <memset+0x18>
  401e22:	f114 34ff 	adds.w	r4, r4, #4294967295
  401e26:	d33b      	bcc.n	401ea0 <memset+0x90>
  401e28:	f803 2b01 	strb.w	r2, [r3], #1
  401e2c:	079d      	lsls	r5, r3, #30
  401e2e:	d1f8      	bne.n	401e22 <memset+0x12>
  401e30:	2c03      	cmp	r4, #3
  401e32:	d92e      	bls.n	401e92 <memset+0x82>
  401e34:	b2cd      	uxtb	r5, r1
  401e36:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  401e3a:	2c0f      	cmp	r4, #15
  401e3c:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  401e40:	d919      	bls.n	401e76 <memset+0x66>
  401e42:	f103 0210 	add.w	r2, r3, #16
  401e46:	4626      	mov	r6, r4
  401e48:	3e10      	subs	r6, #16
  401e4a:	2e0f      	cmp	r6, #15
  401e4c:	f842 5c10 	str.w	r5, [r2, #-16]
  401e50:	f842 5c0c 	str.w	r5, [r2, #-12]
  401e54:	f842 5c08 	str.w	r5, [r2, #-8]
  401e58:	f842 5c04 	str.w	r5, [r2, #-4]
  401e5c:	f102 0210 	add.w	r2, r2, #16
  401e60:	d8f2      	bhi.n	401e48 <memset+0x38>
  401e62:	f1a4 0210 	sub.w	r2, r4, #16
  401e66:	f022 020f 	bic.w	r2, r2, #15
  401e6a:	f004 040f 	and.w	r4, r4, #15
  401e6e:	3210      	adds	r2, #16
  401e70:	2c03      	cmp	r4, #3
  401e72:	4413      	add	r3, r2
  401e74:	d90d      	bls.n	401e92 <memset+0x82>
  401e76:	461e      	mov	r6, r3
  401e78:	4622      	mov	r2, r4
  401e7a:	3a04      	subs	r2, #4
  401e7c:	2a03      	cmp	r2, #3
  401e7e:	f846 5b04 	str.w	r5, [r6], #4
  401e82:	d8fa      	bhi.n	401e7a <memset+0x6a>
  401e84:	1f22      	subs	r2, r4, #4
  401e86:	f022 0203 	bic.w	r2, r2, #3
  401e8a:	3204      	adds	r2, #4
  401e8c:	4413      	add	r3, r2
  401e8e:	f004 0403 	and.w	r4, r4, #3
  401e92:	b12c      	cbz	r4, 401ea0 <memset+0x90>
  401e94:	b2c9      	uxtb	r1, r1
  401e96:	441c      	add	r4, r3
  401e98:	f803 1b01 	strb.w	r1, [r3], #1
  401e9c:	429c      	cmp	r4, r3
  401e9e:	d1fb      	bne.n	401e98 <memset+0x88>
  401ea0:	bc70      	pop	{r4, r5, r6}
  401ea2:	4770      	bx	lr
  401ea4:	4614      	mov	r4, r2
  401ea6:	4603      	mov	r3, r0
  401ea8:	e7c2      	b.n	401e30 <memset+0x20>
  401eaa:	bf00      	nop

00401eac <printf>:
  401eac:	b40f      	push	{r0, r1, r2, r3}
  401eae:	b500      	push	{lr}
  401eb0:	4907      	ldr	r1, [pc, #28]	; (401ed0 <printf+0x24>)
  401eb2:	b083      	sub	sp, #12
  401eb4:	ab04      	add	r3, sp, #16
  401eb6:	6808      	ldr	r0, [r1, #0]
  401eb8:	f853 2b04 	ldr.w	r2, [r3], #4
  401ebc:	6881      	ldr	r1, [r0, #8]
  401ebe:	9301      	str	r3, [sp, #4]
  401ec0:	f000 f9ac 	bl	40221c <_vfprintf_r>
  401ec4:	b003      	add	sp, #12
  401ec6:	f85d eb04 	ldr.w	lr, [sp], #4
  401eca:	b004      	add	sp, #16
  401ecc:	4770      	bx	lr
  401ece:	bf00      	nop
  401ed0:	20400010 	.word	0x20400010

00401ed4 <_puts_r>:
  401ed4:	b5f0      	push	{r4, r5, r6, r7, lr}
  401ed6:	4605      	mov	r5, r0
  401ed8:	b089      	sub	sp, #36	; 0x24
  401eda:	4608      	mov	r0, r1
  401edc:	460c      	mov	r4, r1
  401ede:	f000 f92f 	bl	402140 <strlen>
  401ee2:	6bab      	ldr	r3, [r5, #56]	; 0x38
  401ee4:	4f21      	ldr	r7, [pc, #132]	; (401f6c <_puts_r+0x98>)
  401ee6:	9404      	str	r4, [sp, #16]
  401ee8:	2601      	movs	r6, #1
  401eea:	1c44      	adds	r4, r0, #1
  401eec:	a904      	add	r1, sp, #16
  401eee:	2202      	movs	r2, #2
  401ef0:	9403      	str	r4, [sp, #12]
  401ef2:	9005      	str	r0, [sp, #20]
  401ef4:	68ac      	ldr	r4, [r5, #8]
  401ef6:	9706      	str	r7, [sp, #24]
  401ef8:	9607      	str	r6, [sp, #28]
  401efa:	9101      	str	r1, [sp, #4]
  401efc:	9202      	str	r2, [sp, #8]
  401efe:	b353      	cbz	r3, 401f56 <_puts_r+0x82>
  401f00:	6e63      	ldr	r3, [r4, #100]	; 0x64
  401f02:	f013 0f01 	tst.w	r3, #1
  401f06:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  401f0a:	b29a      	uxth	r2, r3
  401f0c:	d101      	bne.n	401f12 <_puts_r+0x3e>
  401f0e:	0590      	lsls	r0, r2, #22
  401f10:	d525      	bpl.n	401f5e <_puts_r+0x8a>
  401f12:	0491      	lsls	r1, r2, #18
  401f14:	d406      	bmi.n	401f24 <_puts_r+0x50>
  401f16:	6e62      	ldr	r2, [r4, #100]	; 0x64
  401f18:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  401f1c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  401f20:	81a3      	strh	r3, [r4, #12]
  401f22:	6662      	str	r2, [r4, #100]	; 0x64
  401f24:	4628      	mov	r0, r5
  401f26:	aa01      	add	r2, sp, #4
  401f28:	4621      	mov	r1, r4
  401f2a:	f002 ff17 	bl	404d5c <__sfvwrite_r>
  401f2e:	6e63      	ldr	r3, [r4, #100]	; 0x64
  401f30:	2800      	cmp	r0, #0
  401f32:	bf0c      	ite	eq
  401f34:	250a      	moveq	r5, #10
  401f36:	f04f 35ff 	movne.w	r5, #4294967295
  401f3a:	07da      	lsls	r2, r3, #31
  401f3c:	d402      	bmi.n	401f44 <_puts_r+0x70>
  401f3e:	89a3      	ldrh	r3, [r4, #12]
  401f40:	059b      	lsls	r3, r3, #22
  401f42:	d502      	bpl.n	401f4a <_puts_r+0x76>
  401f44:	4628      	mov	r0, r5
  401f46:	b009      	add	sp, #36	; 0x24
  401f48:	bdf0      	pop	{r4, r5, r6, r7, pc}
  401f4a:	6da0      	ldr	r0, [r4, #88]	; 0x58
  401f4c:	f003 f8ca 	bl	4050e4 <__retarget_lock_release_recursive>
  401f50:	4628      	mov	r0, r5
  401f52:	b009      	add	sp, #36	; 0x24
  401f54:	bdf0      	pop	{r4, r5, r6, r7, pc}
  401f56:	4628      	mov	r0, r5
  401f58:	f002 fd78 	bl	404a4c <__sinit>
  401f5c:	e7d0      	b.n	401f00 <_puts_r+0x2c>
  401f5e:	6da0      	ldr	r0, [r4, #88]	; 0x58
  401f60:	f003 f8be 	bl	4050e0 <__retarget_lock_acquire_recursive>
  401f64:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  401f68:	b29a      	uxth	r2, r3
  401f6a:	e7d2      	b.n	401f12 <_puts_r+0x3e>
  401f6c:	00406cac 	.word	0x00406cac

00401f70 <puts>:
  401f70:	4b02      	ldr	r3, [pc, #8]	; (401f7c <puts+0xc>)
  401f72:	4601      	mov	r1, r0
  401f74:	6818      	ldr	r0, [r3, #0]
  401f76:	f7ff bfad 	b.w	401ed4 <_puts_r>
  401f7a:	bf00      	nop
  401f7c:	20400010 	.word	0x20400010

00401f80 <setbuf>:
  401f80:	2900      	cmp	r1, #0
  401f82:	bf0c      	ite	eq
  401f84:	2202      	moveq	r2, #2
  401f86:	2200      	movne	r2, #0
  401f88:	f44f 6380 	mov.w	r3, #1024	; 0x400
  401f8c:	f000 b800 	b.w	401f90 <setvbuf>

00401f90 <setvbuf>:
  401f90:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  401f94:	4c61      	ldr	r4, [pc, #388]	; (40211c <setvbuf+0x18c>)
  401f96:	6825      	ldr	r5, [r4, #0]
  401f98:	b083      	sub	sp, #12
  401f9a:	4604      	mov	r4, r0
  401f9c:	460f      	mov	r7, r1
  401f9e:	4690      	mov	r8, r2
  401fa0:	461e      	mov	r6, r3
  401fa2:	b115      	cbz	r5, 401faa <setvbuf+0x1a>
  401fa4:	6bab      	ldr	r3, [r5, #56]	; 0x38
  401fa6:	2b00      	cmp	r3, #0
  401fa8:	d064      	beq.n	402074 <setvbuf+0xe4>
  401faa:	f1b8 0f02 	cmp.w	r8, #2
  401fae:	d006      	beq.n	401fbe <setvbuf+0x2e>
  401fb0:	f1b8 0f01 	cmp.w	r8, #1
  401fb4:	f200 809f 	bhi.w	4020f6 <setvbuf+0x166>
  401fb8:	2e00      	cmp	r6, #0
  401fba:	f2c0 809c 	blt.w	4020f6 <setvbuf+0x166>
  401fbe:	6e63      	ldr	r3, [r4, #100]	; 0x64
  401fc0:	07d8      	lsls	r0, r3, #31
  401fc2:	d534      	bpl.n	40202e <setvbuf+0x9e>
  401fc4:	4621      	mov	r1, r4
  401fc6:	4628      	mov	r0, r5
  401fc8:	f002 fce8 	bl	40499c <_fflush_r>
  401fcc:	6b21      	ldr	r1, [r4, #48]	; 0x30
  401fce:	b141      	cbz	r1, 401fe2 <setvbuf+0x52>
  401fd0:	f104 0340 	add.w	r3, r4, #64	; 0x40
  401fd4:	4299      	cmp	r1, r3
  401fd6:	d002      	beq.n	401fde <setvbuf+0x4e>
  401fd8:	4628      	mov	r0, r5
  401fda:	f002 fdd9 	bl	404b90 <_free_r>
  401fde:	2300      	movs	r3, #0
  401fe0:	6323      	str	r3, [r4, #48]	; 0x30
  401fe2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  401fe6:	2200      	movs	r2, #0
  401fe8:	61a2      	str	r2, [r4, #24]
  401fea:	6062      	str	r2, [r4, #4]
  401fec:	061a      	lsls	r2, r3, #24
  401fee:	d43a      	bmi.n	402066 <setvbuf+0xd6>
  401ff0:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
  401ff4:	f023 0303 	bic.w	r3, r3, #3
  401ff8:	f1b8 0f02 	cmp.w	r8, #2
  401ffc:	81a3      	strh	r3, [r4, #12]
  401ffe:	d01d      	beq.n	40203c <setvbuf+0xac>
  402000:	ab01      	add	r3, sp, #4
  402002:	466a      	mov	r2, sp
  402004:	4621      	mov	r1, r4
  402006:	4628      	mov	r0, r5
  402008:	f003 f86e 	bl	4050e8 <__swhatbuf_r>
  40200c:	89a3      	ldrh	r3, [r4, #12]
  40200e:	4318      	orrs	r0, r3
  402010:	81a0      	strh	r0, [r4, #12]
  402012:	2e00      	cmp	r6, #0
  402014:	d132      	bne.n	40207c <setvbuf+0xec>
  402016:	9e00      	ldr	r6, [sp, #0]
  402018:	4630      	mov	r0, r6
  40201a:	f003 f8dd 	bl	4051d8 <malloc>
  40201e:	4607      	mov	r7, r0
  402020:	2800      	cmp	r0, #0
  402022:	d06b      	beq.n	4020fc <setvbuf+0x16c>
  402024:	89a3      	ldrh	r3, [r4, #12]
  402026:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  40202a:	81a3      	strh	r3, [r4, #12]
  40202c:	e028      	b.n	402080 <setvbuf+0xf0>
  40202e:	89a3      	ldrh	r3, [r4, #12]
  402030:	0599      	lsls	r1, r3, #22
  402032:	d4c7      	bmi.n	401fc4 <setvbuf+0x34>
  402034:	6da0      	ldr	r0, [r4, #88]	; 0x58
  402036:	f003 f853 	bl	4050e0 <__retarget_lock_acquire_recursive>
  40203a:	e7c3      	b.n	401fc4 <setvbuf+0x34>
  40203c:	2500      	movs	r5, #0
  40203e:	6e61      	ldr	r1, [r4, #100]	; 0x64
  402040:	2600      	movs	r6, #0
  402042:	f104 0243 	add.w	r2, r4, #67	; 0x43
  402046:	f043 0302 	orr.w	r3, r3, #2
  40204a:	2001      	movs	r0, #1
  40204c:	60a6      	str	r6, [r4, #8]
  40204e:	07ce      	lsls	r6, r1, #31
  402050:	81a3      	strh	r3, [r4, #12]
  402052:	6022      	str	r2, [r4, #0]
  402054:	6122      	str	r2, [r4, #16]
  402056:	6160      	str	r0, [r4, #20]
  402058:	d401      	bmi.n	40205e <setvbuf+0xce>
  40205a:	0598      	lsls	r0, r3, #22
  40205c:	d53e      	bpl.n	4020dc <setvbuf+0x14c>
  40205e:	4628      	mov	r0, r5
  402060:	b003      	add	sp, #12
  402062:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  402066:	6921      	ldr	r1, [r4, #16]
  402068:	4628      	mov	r0, r5
  40206a:	f002 fd91 	bl	404b90 <_free_r>
  40206e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402072:	e7bd      	b.n	401ff0 <setvbuf+0x60>
  402074:	4628      	mov	r0, r5
  402076:	f002 fce9 	bl	404a4c <__sinit>
  40207a:	e796      	b.n	401faa <setvbuf+0x1a>
  40207c:	2f00      	cmp	r7, #0
  40207e:	d0cb      	beq.n	402018 <setvbuf+0x88>
  402080:	6bab      	ldr	r3, [r5, #56]	; 0x38
  402082:	2b00      	cmp	r3, #0
  402084:	d033      	beq.n	4020ee <setvbuf+0x15e>
  402086:	9b00      	ldr	r3, [sp, #0]
  402088:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40208c:	6027      	str	r7, [r4, #0]
  40208e:	429e      	cmp	r6, r3
  402090:	bf1c      	itt	ne
  402092:	f442 6200 	orrne.w	r2, r2, #2048	; 0x800
  402096:	81a2      	strhne	r2, [r4, #12]
  402098:	f1b8 0f01 	cmp.w	r8, #1
  40209c:	bf04      	itt	eq
  40209e:	f042 0201 	orreq.w	r2, r2, #1
  4020a2:	81a2      	strheq	r2, [r4, #12]
  4020a4:	b292      	uxth	r2, r2
  4020a6:	f012 0308 	ands.w	r3, r2, #8
  4020aa:	6127      	str	r7, [r4, #16]
  4020ac:	6166      	str	r6, [r4, #20]
  4020ae:	d00e      	beq.n	4020ce <setvbuf+0x13e>
  4020b0:	07d1      	lsls	r1, r2, #31
  4020b2:	d51a      	bpl.n	4020ea <setvbuf+0x15a>
  4020b4:	6e65      	ldr	r5, [r4, #100]	; 0x64
  4020b6:	4276      	negs	r6, r6
  4020b8:	2300      	movs	r3, #0
  4020ba:	f015 0501 	ands.w	r5, r5, #1
  4020be:	61a6      	str	r6, [r4, #24]
  4020c0:	60a3      	str	r3, [r4, #8]
  4020c2:	d009      	beq.n	4020d8 <setvbuf+0x148>
  4020c4:	2500      	movs	r5, #0
  4020c6:	4628      	mov	r0, r5
  4020c8:	b003      	add	sp, #12
  4020ca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4020ce:	60a3      	str	r3, [r4, #8]
  4020d0:	6e65      	ldr	r5, [r4, #100]	; 0x64
  4020d2:	f015 0501 	ands.w	r5, r5, #1
  4020d6:	d1f5      	bne.n	4020c4 <setvbuf+0x134>
  4020d8:	0593      	lsls	r3, r2, #22
  4020da:	d4c0      	bmi.n	40205e <setvbuf+0xce>
  4020dc:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4020de:	f003 f801 	bl	4050e4 <__retarget_lock_release_recursive>
  4020e2:	4628      	mov	r0, r5
  4020e4:	b003      	add	sp, #12
  4020e6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4020ea:	60a6      	str	r6, [r4, #8]
  4020ec:	e7f0      	b.n	4020d0 <setvbuf+0x140>
  4020ee:	4628      	mov	r0, r5
  4020f0:	f002 fcac 	bl	404a4c <__sinit>
  4020f4:	e7c7      	b.n	402086 <setvbuf+0xf6>
  4020f6:	f04f 35ff 	mov.w	r5, #4294967295
  4020fa:	e7b0      	b.n	40205e <setvbuf+0xce>
  4020fc:	f8dd 9000 	ldr.w	r9, [sp]
  402100:	45b1      	cmp	r9, r6
  402102:	d004      	beq.n	40210e <setvbuf+0x17e>
  402104:	4648      	mov	r0, r9
  402106:	f003 f867 	bl	4051d8 <malloc>
  40210a:	4607      	mov	r7, r0
  40210c:	b920      	cbnz	r0, 402118 <setvbuf+0x188>
  40210e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402112:	f04f 35ff 	mov.w	r5, #4294967295
  402116:	e792      	b.n	40203e <setvbuf+0xae>
  402118:	464e      	mov	r6, r9
  40211a:	e783      	b.n	402024 <setvbuf+0x94>
  40211c:	20400010 	.word	0x20400010
	...

00402140 <strlen>:
  402140:	f890 f000 	pld	[r0]
  402144:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  402148:	f020 0107 	bic.w	r1, r0, #7
  40214c:	f06f 0c00 	mvn.w	ip, #0
  402150:	f010 0407 	ands.w	r4, r0, #7
  402154:	f891 f020 	pld	[r1, #32]
  402158:	f040 8049 	bne.w	4021ee <strlen+0xae>
  40215c:	f04f 0400 	mov.w	r4, #0
  402160:	f06f 0007 	mvn.w	r0, #7
  402164:	e9d1 2300 	ldrd	r2, r3, [r1]
  402168:	f891 f040 	pld	[r1, #64]	; 0x40
  40216c:	f100 0008 	add.w	r0, r0, #8
  402170:	fa82 f24c 	uadd8	r2, r2, ip
  402174:	faa4 f28c 	sel	r2, r4, ip
  402178:	fa83 f34c 	uadd8	r3, r3, ip
  40217c:	faa2 f38c 	sel	r3, r2, ip
  402180:	bb4b      	cbnz	r3, 4021d6 <strlen+0x96>
  402182:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  402186:	fa82 f24c 	uadd8	r2, r2, ip
  40218a:	f100 0008 	add.w	r0, r0, #8
  40218e:	faa4 f28c 	sel	r2, r4, ip
  402192:	fa83 f34c 	uadd8	r3, r3, ip
  402196:	faa2 f38c 	sel	r3, r2, ip
  40219a:	b9e3      	cbnz	r3, 4021d6 <strlen+0x96>
  40219c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  4021a0:	fa82 f24c 	uadd8	r2, r2, ip
  4021a4:	f100 0008 	add.w	r0, r0, #8
  4021a8:	faa4 f28c 	sel	r2, r4, ip
  4021ac:	fa83 f34c 	uadd8	r3, r3, ip
  4021b0:	faa2 f38c 	sel	r3, r2, ip
  4021b4:	b97b      	cbnz	r3, 4021d6 <strlen+0x96>
  4021b6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  4021ba:	f101 0120 	add.w	r1, r1, #32
  4021be:	fa82 f24c 	uadd8	r2, r2, ip
  4021c2:	f100 0008 	add.w	r0, r0, #8
  4021c6:	faa4 f28c 	sel	r2, r4, ip
  4021ca:	fa83 f34c 	uadd8	r3, r3, ip
  4021ce:	faa2 f38c 	sel	r3, r2, ip
  4021d2:	2b00      	cmp	r3, #0
  4021d4:	d0c6      	beq.n	402164 <strlen+0x24>
  4021d6:	2a00      	cmp	r2, #0
  4021d8:	bf04      	itt	eq
  4021da:	3004      	addeq	r0, #4
  4021dc:	461a      	moveq	r2, r3
  4021de:	ba12      	rev	r2, r2
  4021e0:	fab2 f282 	clz	r2, r2
  4021e4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  4021e8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  4021ec:	4770      	bx	lr
  4021ee:	e9d1 2300 	ldrd	r2, r3, [r1]
  4021f2:	f004 0503 	and.w	r5, r4, #3
  4021f6:	f1c4 0000 	rsb	r0, r4, #0
  4021fa:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  4021fe:	f014 0f04 	tst.w	r4, #4
  402202:	f891 f040 	pld	[r1, #64]	; 0x40
  402206:	fa0c f505 	lsl.w	r5, ip, r5
  40220a:	ea62 0205 	orn	r2, r2, r5
  40220e:	bf1c      	itt	ne
  402210:	ea63 0305 	ornne	r3, r3, r5
  402214:	4662      	movne	r2, ip
  402216:	f04f 0400 	mov.w	r4, #0
  40221a:	e7a9      	b.n	402170 <strlen+0x30>

0040221c <_vfprintf_r>:
  40221c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402220:	b0c1      	sub	sp, #260	; 0x104
  402222:	461d      	mov	r5, r3
  402224:	468a      	mov	sl, r1
  402226:	4691      	mov	r9, r2
  402228:	4604      	mov	r4, r0
  40222a:	9008      	str	r0, [sp, #32]
  40222c:	f002 ff46 	bl	4050bc <_localeconv_r>
  402230:	6803      	ldr	r3, [r0, #0]
  402232:	9315      	str	r3, [sp, #84]	; 0x54
  402234:	4618      	mov	r0, r3
  402236:	f7ff ff83 	bl	402140 <strlen>
  40223a:	950e      	str	r5, [sp, #56]	; 0x38
  40223c:	9014      	str	r0, [sp, #80]	; 0x50
  40223e:	b11c      	cbz	r4, 402248 <_vfprintf_r+0x2c>
  402240:	6ba3      	ldr	r3, [r4, #56]	; 0x38
  402242:	2b00      	cmp	r3, #0
  402244:	f000 825f 	beq.w	402706 <_vfprintf_r+0x4ea>
  402248:	f8da 3064 	ldr.w	r3, [sl, #100]	; 0x64
  40224c:	f9ba 200c 	ldrsh.w	r2, [sl, #12]
  402250:	f013 0f01 	tst.w	r3, #1
  402254:	b293      	uxth	r3, r2
  402256:	d102      	bne.n	40225e <_vfprintf_r+0x42>
  402258:	0599      	lsls	r1, r3, #22
  40225a:	f140 8275 	bpl.w	402748 <_vfprintf_r+0x52c>
  40225e:	049f      	lsls	r7, r3, #18
  402260:	d40a      	bmi.n	402278 <_vfprintf_r+0x5c>
  402262:	f8da 1064 	ldr.w	r1, [sl, #100]	; 0x64
  402266:	f442 5300 	orr.w	r3, r2, #8192	; 0x2000
  40226a:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  40226e:	f8aa 300c 	strh.w	r3, [sl, #12]
  402272:	f8ca 1064 	str.w	r1, [sl, #100]	; 0x64
  402276:	b29b      	uxth	r3, r3
  402278:	071e      	lsls	r6, r3, #28
  40227a:	f140 8223 	bpl.w	4026c4 <_vfprintf_r+0x4a8>
  40227e:	f8da 2010 	ldr.w	r2, [sl, #16]
  402282:	2a00      	cmp	r2, #0
  402284:	f000 821e 	beq.w	4026c4 <_vfprintf_r+0x4a8>
  402288:	f003 021a 	and.w	r2, r3, #26
  40228c:	2a0a      	cmp	r2, #10
  40228e:	f000 823e 	beq.w	40270e <_vfprintf_r+0x4f2>
  402292:	2300      	movs	r3, #0
  402294:	4618      	mov	r0, r3
  402296:	9311      	str	r3, [sp, #68]	; 0x44
  402298:	9313      	str	r3, [sp, #76]	; 0x4c
  40229a:	9312      	str	r3, [sp, #72]	; 0x48
  40229c:	9325      	str	r3, [sp, #148]	; 0x94
  40229e:	9324      	str	r3, [sp, #144]	; 0x90
  4022a0:	9318      	str	r3, [sp, #96]	; 0x60
  4022a2:	9319      	str	r3, [sp, #100]	; 0x64
  4022a4:	930b      	str	r3, [sp, #44]	; 0x2c
  4022a6:	ab30      	add	r3, sp, #192	; 0xc0
  4022a8:	9323      	str	r3, [sp, #140]	; 0x8c
  4022aa:	4698      	mov	r8, r3
  4022ac:	9016      	str	r0, [sp, #88]	; 0x58
  4022ae:	9017      	str	r0, [sp, #92]	; 0x5c
  4022b0:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
  4022b4:	f899 3000 	ldrb.w	r3, [r9]
  4022b8:	464c      	mov	r4, r9
  4022ba:	b1eb      	cbz	r3, 4022f8 <_vfprintf_r+0xdc>
  4022bc:	2b25      	cmp	r3, #37	; 0x25
  4022be:	d102      	bne.n	4022c6 <_vfprintf_r+0xaa>
  4022c0:	e01a      	b.n	4022f8 <_vfprintf_r+0xdc>
  4022c2:	2b25      	cmp	r3, #37	; 0x25
  4022c4:	d003      	beq.n	4022ce <_vfprintf_r+0xb2>
  4022c6:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  4022ca:	2b00      	cmp	r3, #0
  4022cc:	d1f9      	bne.n	4022c2 <_vfprintf_r+0xa6>
  4022ce:	eba4 0509 	sub.w	r5, r4, r9
  4022d2:	b18d      	cbz	r5, 4022f8 <_vfprintf_r+0xdc>
  4022d4:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4022d6:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4022d8:	f8c8 9000 	str.w	r9, [r8]
  4022dc:	3301      	adds	r3, #1
  4022de:	442a      	add	r2, r5
  4022e0:	2b07      	cmp	r3, #7
  4022e2:	f8c8 5004 	str.w	r5, [r8, #4]
  4022e6:	9225      	str	r2, [sp, #148]	; 0x94
  4022e8:	9324      	str	r3, [sp, #144]	; 0x90
  4022ea:	f300 8201 	bgt.w	4026f0 <_vfprintf_r+0x4d4>
  4022ee:	f108 0808 	add.w	r8, r8, #8
  4022f2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4022f4:	442b      	add	r3, r5
  4022f6:	930b      	str	r3, [sp, #44]	; 0x2c
  4022f8:	7823      	ldrb	r3, [r4, #0]
  4022fa:	2b00      	cmp	r3, #0
  4022fc:	f000 83f0 	beq.w	402ae0 <_vfprintf_r+0x8c4>
  402300:	2300      	movs	r3, #0
  402302:	461a      	mov	r2, r3
  402304:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
  402308:	4619      	mov	r1, r3
  40230a:	930c      	str	r3, [sp, #48]	; 0x30
  40230c:	469b      	mov	fp, r3
  40230e:	7866      	ldrb	r6, [r4, #1]
  402310:	f04f 33ff 	mov.w	r3, #4294967295
  402314:	f104 0901 	add.w	r9, r4, #1
  402318:	9309      	str	r3, [sp, #36]	; 0x24
  40231a:	f109 0901 	add.w	r9, r9, #1
  40231e:	f1a6 0320 	sub.w	r3, r6, #32
  402322:	2b58      	cmp	r3, #88	; 0x58
  402324:	f200 83bf 	bhi.w	402aa6 <_vfprintf_r+0x88a>
  402328:	e8df f013 	tbh	[pc, r3, lsl #1]
  40232c:	03bd02e0 	.word	0x03bd02e0
  402330:	034f03bd 	.word	0x034f03bd
  402334:	03bd03bd 	.word	0x03bd03bd
  402338:	03bd03bd 	.word	0x03bd03bd
  40233c:	03bd03bd 	.word	0x03bd03bd
  402340:	03080354 	.word	0x03080354
  402344:	021a03bd 	.word	0x021a03bd
  402348:	03bd02e8 	.word	0x03bd02e8
  40234c:	033a0303 	.word	0x033a0303
  402350:	033a033a 	.word	0x033a033a
  402354:	033a033a 	.word	0x033a033a
  402358:	033a033a 	.word	0x033a033a
  40235c:	033a033a 	.word	0x033a033a
  402360:	03bd03bd 	.word	0x03bd03bd
  402364:	03bd03bd 	.word	0x03bd03bd
  402368:	03bd03bd 	.word	0x03bd03bd
  40236c:	03bd03bd 	.word	0x03bd03bd
  402370:	03bd03bd 	.word	0x03bd03bd
  402374:	03620349 	.word	0x03620349
  402378:	036203bd 	.word	0x036203bd
  40237c:	03bd03bd 	.word	0x03bd03bd
  402380:	03bd03bd 	.word	0x03bd03bd
  402384:	03bd03a2 	.word	0x03bd03a2
  402388:	006f03bd 	.word	0x006f03bd
  40238c:	03bd03bd 	.word	0x03bd03bd
  402390:	03bd03bd 	.word	0x03bd03bd
  402394:	005903bd 	.word	0x005903bd
  402398:	03bd03bd 	.word	0x03bd03bd
  40239c:	03bd031e 	.word	0x03bd031e
  4023a0:	03bd03bd 	.word	0x03bd03bd
  4023a4:	03bd03bd 	.word	0x03bd03bd
  4023a8:	03bd03bd 	.word	0x03bd03bd
  4023ac:	03bd03bd 	.word	0x03bd03bd
  4023b0:	032403bd 	.word	0x032403bd
  4023b4:	03620273 	.word	0x03620273
  4023b8:	03620362 	.word	0x03620362
  4023bc:	027302b7 	.word	0x027302b7
  4023c0:	03bd03bd 	.word	0x03bd03bd
  4023c4:	03bd02bc 	.word	0x03bd02bc
  4023c8:	007102c9 	.word	0x007102c9
  4023cc:	0247030d 	.word	0x0247030d
  4023d0:	025203bd 	.word	0x025203bd
  4023d4:	005b03bd 	.word	0x005b03bd
  4023d8:	03bd03bd 	.word	0x03bd03bd
  4023dc:	021f      	.short	0x021f
  4023de:	f04b 0b10 	orr.w	fp, fp, #16
  4023e2:	f01b 0f20 	tst.w	fp, #32
  4023e6:	f040 8353 	bne.w	402a90 <_vfprintf_r+0x874>
  4023ea:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4023ec:	f01b 0f10 	tst.w	fp, #16
  4023f0:	4613      	mov	r3, r2
  4023f2:	f040 85b4 	bne.w	402f5e <_vfprintf_r+0xd42>
  4023f6:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4023fa:	f000 85b0 	beq.w	402f5e <_vfprintf_r+0xd42>
  4023fe:	8814      	ldrh	r4, [r2, #0]
  402400:	3204      	adds	r2, #4
  402402:	2500      	movs	r5, #0
  402404:	2301      	movs	r3, #1
  402406:	920e      	str	r2, [sp, #56]	; 0x38
  402408:	e014      	b.n	402434 <_vfprintf_r+0x218>
  40240a:	f04b 0b10 	orr.w	fp, fp, #16
  40240e:	f01b 0320 	ands.w	r3, fp, #32
  402412:	f040 8332 	bne.w	402a7a <_vfprintf_r+0x85e>
  402416:	f01b 0210 	ands.w	r2, fp, #16
  40241a:	f040 8589 	bne.w	402f30 <_vfprintf_r+0xd14>
  40241e:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  402422:	f000 8585 	beq.w	402f30 <_vfprintf_r+0xd14>
  402426:	990e      	ldr	r1, [sp, #56]	; 0x38
  402428:	4613      	mov	r3, r2
  40242a:	460a      	mov	r2, r1
  40242c:	3204      	adds	r2, #4
  40242e:	880c      	ldrh	r4, [r1, #0]
  402430:	920e      	str	r2, [sp, #56]	; 0x38
  402432:	2500      	movs	r5, #0
  402434:	f04f 0a00 	mov.w	sl, #0
  402438:	f88d a06f 	strb.w	sl, [sp, #111]	; 0x6f
  40243c:	9909      	ldr	r1, [sp, #36]	; 0x24
  40243e:	1c4a      	adds	r2, r1, #1
  402440:	f000 820b 	beq.w	40285a <_vfprintf_r+0x63e>
  402444:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  402448:	9206      	str	r2, [sp, #24]
  40244a:	ea54 0205 	orrs.w	r2, r4, r5
  40244e:	f040 820a 	bne.w	402866 <_vfprintf_r+0x64a>
  402452:	2900      	cmp	r1, #0
  402454:	f040 846f 	bne.w	402d36 <_vfprintf_r+0xb1a>
  402458:	2b00      	cmp	r3, #0
  40245a:	f040 852d 	bne.w	402eb8 <_vfprintf_r+0xc9c>
  40245e:	f01b 0301 	ands.w	r3, fp, #1
  402462:	930d      	str	r3, [sp, #52]	; 0x34
  402464:	f000 8668 	beq.w	403138 <_vfprintf_r+0xf1c>
  402468:	af40      	add	r7, sp, #256	; 0x100
  40246a:	2330      	movs	r3, #48	; 0x30
  40246c:	f807 3d41 	strb.w	r3, [r7, #-65]!
  402470:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402472:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  402474:	4293      	cmp	r3, r2
  402476:	bfb8      	it	lt
  402478:	4613      	movlt	r3, r2
  40247a:	9307      	str	r3, [sp, #28]
  40247c:	2300      	movs	r3, #0
  40247e:	9310      	str	r3, [sp, #64]	; 0x40
  402480:	f1ba 0f00 	cmp.w	sl, #0
  402484:	d002      	beq.n	40248c <_vfprintf_r+0x270>
  402486:	9b07      	ldr	r3, [sp, #28]
  402488:	3301      	adds	r3, #1
  40248a:	9307      	str	r3, [sp, #28]
  40248c:	9b06      	ldr	r3, [sp, #24]
  40248e:	f013 0302 	ands.w	r3, r3, #2
  402492:	930f      	str	r3, [sp, #60]	; 0x3c
  402494:	d002      	beq.n	40249c <_vfprintf_r+0x280>
  402496:	9b07      	ldr	r3, [sp, #28]
  402498:	3302      	adds	r3, #2
  40249a:	9307      	str	r3, [sp, #28]
  40249c:	9b06      	ldr	r3, [sp, #24]
  40249e:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  4024a2:	f040 831b 	bne.w	402adc <_vfprintf_r+0x8c0>
  4024a6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4024a8:	9a07      	ldr	r2, [sp, #28]
  4024aa:	eba3 0b02 	sub.w	fp, r3, r2
  4024ae:	f1bb 0f00 	cmp.w	fp, #0
  4024b2:	f340 8313 	ble.w	402adc <_vfprintf_r+0x8c0>
  4024b6:	f1bb 0f10 	cmp.w	fp, #16
  4024ba:	9925      	ldr	r1, [sp, #148]	; 0x94
  4024bc:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4024be:	dd28      	ble.n	402512 <_vfprintf_r+0x2f6>
  4024c0:	4643      	mov	r3, r8
  4024c2:	2410      	movs	r4, #16
  4024c4:	46a8      	mov	r8, r5
  4024c6:	f8dd a020 	ldr.w	sl, [sp, #32]
  4024ca:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  4024cc:	e006      	b.n	4024dc <_vfprintf_r+0x2c0>
  4024ce:	f1ab 0b10 	sub.w	fp, fp, #16
  4024d2:	f1bb 0f10 	cmp.w	fp, #16
  4024d6:	f103 0308 	add.w	r3, r3, #8
  4024da:	dd18      	ble.n	40250e <_vfprintf_r+0x2f2>
  4024dc:	3201      	adds	r2, #1
  4024de:	48b9      	ldr	r0, [pc, #740]	; (4027c4 <_vfprintf_r+0x5a8>)
  4024e0:	9224      	str	r2, [sp, #144]	; 0x90
  4024e2:	3110      	adds	r1, #16
  4024e4:	2a07      	cmp	r2, #7
  4024e6:	9125      	str	r1, [sp, #148]	; 0x94
  4024e8:	e883 0011 	stmia.w	r3, {r0, r4}
  4024ec:	ddef      	ble.n	4024ce <_vfprintf_r+0x2b2>
  4024ee:	aa23      	add	r2, sp, #140	; 0x8c
  4024f0:	4629      	mov	r1, r5
  4024f2:	4650      	mov	r0, sl
  4024f4:	f003 ff3a 	bl	40636c <__sprint_r>
  4024f8:	2800      	cmp	r0, #0
  4024fa:	f040 836a 	bne.w	402bd2 <_vfprintf_r+0x9b6>
  4024fe:	f1ab 0b10 	sub.w	fp, fp, #16
  402502:	f1bb 0f10 	cmp.w	fp, #16
  402506:	9925      	ldr	r1, [sp, #148]	; 0x94
  402508:	9a24      	ldr	r2, [sp, #144]	; 0x90
  40250a:	ab30      	add	r3, sp, #192	; 0xc0
  40250c:	dce6      	bgt.n	4024dc <_vfprintf_r+0x2c0>
  40250e:	4645      	mov	r5, r8
  402510:	4698      	mov	r8, r3
  402512:	3201      	adds	r2, #1
  402514:	4bab      	ldr	r3, [pc, #684]	; (4027c4 <_vfprintf_r+0x5a8>)
  402516:	9224      	str	r2, [sp, #144]	; 0x90
  402518:	eb0b 0401 	add.w	r4, fp, r1
  40251c:	2a07      	cmp	r2, #7
  40251e:	9425      	str	r4, [sp, #148]	; 0x94
  402520:	e888 0808 	stmia.w	r8, {r3, fp}
  402524:	f300 84cd 	bgt.w	402ec2 <_vfprintf_r+0xca6>
  402528:	f89d a06f 	ldrb.w	sl, [sp, #111]	; 0x6f
  40252c:	f108 0808 	add.w	r8, r8, #8
  402530:	f1ba 0f00 	cmp.w	sl, #0
  402534:	d00e      	beq.n	402554 <_vfprintf_r+0x338>
  402536:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402538:	3301      	adds	r3, #1
  40253a:	3401      	adds	r4, #1
  40253c:	f10d 016f 	add.w	r1, sp, #111	; 0x6f
  402540:	2201      	movs	r2, #1
  402542:	2b07      	cmp	r3, #7
  402544:	9425      	str	r4, [sp, #148]	; 0x94
  402546:	9324      	str	r3, [sp, #144]	; 0x90
  402548:	e888 0006 	stmia.w	r8, {r1, r2}
  40254c:	f300 840a 	bgt.w	402d64 <_vfprintf_r+0xb48>
  402550:	f108 0808 	add.w	r8, r8, #8
  402554:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  402556:	b16b      	cbz	r3, 402574 <_vfprintf_r+0x358>
  402558:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40255a:	3301      	adds	r3, #1
  40255c:	3402      	adds	r4, #2
  40255e:	a91c      	add	r1, sp, #112	; 0x70
  402560:	2202      	movs	r2, #2
  402562:	2b07      	cmp	r3, #7
  402564:	9425      	str	r4, [sp, #148]	; 0x94
  402566:	9324      	str	r3, [sp, #144]	; 0x90
  402568:	e888 0006 	stmia.w	r8, {r1, r2}
  40256c:	f300 8406 	bgt.w	402d7c <_vfprintf_r+0xb60>
  402570:	f108 0808 	add.w	r8, r8, #8
  402574:	2d80      	cmp	r5, #128	; 0x80
  402576:	f000 832e 	beq.w	402bd6 <_vfprintf_r+0x9ba>
  40257a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40257c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  40257e:	eba3 0a02 	sub.w	sl, r3, r2
  402582:	f1ba 0f00 	cmp.w	sl, #0
  402586:	dd3b      	ble.n	402600 <_vfprintf_r+0x3e4>
  402588:	f1ba 0f10 	cmp.w	sl, #16
  40258c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40258e:	4d8e      	ldr	r5, [pc, #568]	; (4027c8 <_vfprintf_r+0x5ac>)
  402590:	dd2b      	ble.n	4025ea <_vfprintf_r+0x3ce>
  402592:	4642      	mov	r2, r8
  402594:	4621      	mov	r1, r4
  402596:	46b0      	mov	r8, r6
  402598:	f04f 0b10 	mov.w	fp, #16
  40259c:	462e      	mov	r6, r5
  40259e:	9c08      	ldr	r4, [sp, #32]
  4025a0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  4025a2:	e006      	b.n	4025b2 <_vfprintf_r+0x396>
  4025a4:	f1aa 0a10 	sub.w	sl, sl, #16
  4025a8:	f1ba 0f10 	cmp.w	sl, #16
  4025ac:	f102 0208 	add.w	r2, r2, #8
  4025b0:	dd17      	ble.n	4025e2 <_vfprintf_r+0x3c6>
  4025b2:	3301      	adds	r3, #1
  4025b4:	3110      	adds	r1, #16
  4025b6:	2b07      	cmp	r3, #7
  4025b8:	9125      	str	r1, [sp, #148]	; 0x94
  4025ba:	9324      	str	r3, [sp, #144]	; 0x90
  4025bc:	e882 0840 	stmia.w	r2, {r6, fp}
  4025c0:	ddf0      	ble.n	4025a4 <_vfprintf_r+0x388>
  4025c2:	aa23      	add	r2, sp, #140	; 0x8c
  4025c4:	4629      	mov	r1, r5
  4025c6:	4620      	mov	r0, r4
  4025c8:	f003 fed0 	bl	40636c <__sprint_r>
  4025cc:	2800      	cmp	r0, #0
  4025ce:	f040 8300 	bne.w	402bd2 <_vfprintf_r+0x9b6>
  4025d2:	f1aa 0a10 	sub.w	sl, sl, #16
  4025d6:	f1ba 0f10 	cmp.w	sl, #16
  4025da:	9925      	ldr	r1, [sp, #148]	; 0x94
  4025dc:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4025de:	aa30      	add	r2, sp, #192	; 0xc0
  4025e0:	dce7      	bgt.n	4025b2 <_vfprintf_r+0x396>
  4025e2:	4635      	mov	r5, r6
  4025e4:	460c      	mov	r4, r1
  4025e6:	4646      	mov	r6, r8
  4025e8:	4690      	mov	r8, r2
  4025ea:	3301      	adds	r3, #1
  4025ec:	4454      	add	r4, sl
  4025ee:	2b07      	cmp	r3, #7
  4025f0:	9425      	str	r4, [sp, #148]	; 0x94
  4025f2:	9324      	str	r3, [sp, #144]	; 0x90
  4025f4:	e888 0420 	stmia.w	r8, {r5, sl}
  4025f8:	f300 83a9 	bgt.w	402d4e <_vfprintf_r+0xb32>
  4025fc:	f108 0808 	add.w	r8, r8, #8
  402600:	9b06      	ldr	r3, [sp, #24]
  402602:	05db      	lsls	r3, r3, #23
  402604:	f100 8285 	bmi.w	402b12 <_vfprintf_r+0x8f6>
  402608:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40260a:	990d      	ldr	r1, [sp, #52]	; 0x34
  40260c:	f8c8 7000 	str.w	r7, [r8]
  402610:	3301      	adds	r3, #1
  402612:	440c      	add	r4, r1
  402614:	2b07      	cmp	r3, #7
  402616:	9425      	str	r4, [sp, #148]	; 0x94
  402618:	f8c8 1004 	str.w	r1, [r8, #4]
  40261c:	9324      	str	r3, [sp, #144]	; 0x90
  40261e:	f300 8375 	bgt.w	402d0c <_vfprintf_r+0xaf0>
  402622:	f108 0808 	add.w	r8, r8, #8
  402626:	9b06      	ldr	r3, [sp, #24]
  402628:	0759      	lsls	r1, r3, #29
  40262a:	d53b      	bpl.n	4026a4 <_vfprintf_r+0x488>
  40262c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40262e:	9a07      	ldr	r2, [sp, #28]
  402630:	1a9d      	subs	r5, r3, r2
  402632:	2d00      	cmp	r5, #0
  402634:	dd36      	ble.n	4026a4 <_vfprintf_r+0x488>
  402636:	2d10      	cmp	r5, #16
  402638:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40263a:	dd21      	ble.n	402680 <_vfprintf_r+0x464>
  40263c:	2610      	movs	r6, #16
  40263e:	9f08      	ldr	r7, [sp, #32]
  402640:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
  402644:	e004      	b.n	402650 <_vfprintf_r+0x434>
  402646:	3d10      	subs	r5, #16
  402648:	2d10      	cmp	r5, #16
  40264a:	f108 0808 	add.w	r8, r8, #8
  40264e:	dd17      	ble.n	402680 <_vfprintf_r+0x464>
  402650:	3301      	adds	r3, #1
  402652:	4a5c      	ldr	r2, [pc, #368]	; (4027c4 <_vfprintf_r+0x5a8>)
  402654:	9324      	str	r3, [sp, #144]	; 0x90
  402656:	3410      	adds	r4, #16
  402658:	2b07      	cmp	r3, #7
  40265a:	9425      	str	r4, [sp, #148]	; 0x94
  40265c:	e888 0044 	stmia.w	r8, {r2, r6}
  402660:	ddf1      	ble.n	402646 <_vfprintf_r+0x42a>
  402662:	aa23      	add	r2, sp, #140	; 0x8c
  402664:	4651      	mov	r1, sl
  402666:	4638      	mov	r0, r7
  402668:	f003 fe80 	bl	40636c <__sprint_r>
  40266c:	2800      	cmp	r0, #0
  40266e:	f040 823f 	bne.w	402af0 <_vfprintf_r+0x8d4>
  402672:	3d10      	subs	r5, #16
  402674:	2d10      	cmp	r5, #16
  402676:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402678:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40267a:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  40267e:	dce7      	bgt.n	402650 <_vfprintf_r+0x434>
  402680:	3301      	adds	r3, #1
  402682:	4a50      	ldr	r2, [pc, #320]	; (4027c4 <_vfprintf_r+0x5a8>)
  402684:	9324      	str	r3, [sp, #144]	; 0x90
  402686:	442c      	add	r4, r5
  402688:	2b07      	cmp	r3, #7
  40268a:	9425      	str	r4, [sp, #148]	; 0x94
  40268c:	e888 0024 	stmia.w	r8, {r2, r5}
  402690:	dd08      	ble.n	4026a4 <_vfprintf_r+0x488>
  402692:	aa23      	add	r2, sp, #140	; 0x8c
  402694:	990a      	ldr	r1, [sp, #40]	; 0x28
  402696:	9808      	ldr	r0, [sp, #32]
  402698:	f003 fe68 	bl	40636c <__sprint_r>
  40269c:	2800      	cmp	r0, #0
  40269e:	f040 8347 	bne.w	402d30 <_vfprintf_r+0xb14>
  4026a2:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4026a4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4026a6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4026a8:	9907      	ldr	r1, [sp, #28]
  4026aa:	428a      	cmp	r2, r1
  4026ac:	bfac      	ite	ge
  4026ae:	189b      	addge	r3, r3, r2
  4026b0:	185b      	addlt	r3, r3, r1
  4026b2:	930b      	str	r3, [sp, #44]	; 0x2c
  4026b4:	2c00      	cmp	r4, #0
  4026b6:	f040 8333 	bne.w	402d20 <_vfprintf_r+0xb04>
  4026ba:	2300      	movs	r3, #0
  4026bc:	9324      	str	r3, [sp, #144]	; 0x90
  4026be:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  4026c2:	e5f7      	b.n	4022b4 <_vfprintf_r+0x98>
  4026c4:	4651      	mov	r1, sl
  4026c6:	9808      	ldr	r0, [sp, #32]
  4026c8:	f001 f896 	bl	4037f8 <__swsetup_r>
  4026cc:	2800      	cmp	r0, #0
  4026ce:	d038      	beq.n	402742 <_vfprintf_r+0x526>
  4026d0:	f8da 3064 	ldr.w	r3, [sl, #100]	; 0x64
  4026d4:	07dd      	lsls	r5, r3, #31
  4026d6:	d404      	bmi.n	4026e2 <_vfprintf_r+0x4c6>
  4026d8:	f8ba 300c 	ldrh.w	r3, [sl, #12]
  4026dc:	059c      	lsls	r4, r3, #22
  4026de:	f140 85ca 	bpl.w	403276 <_vfprintf_r+0x105a>
  4026e2:	f04f 33ff 	mov.w	r3, #4294967295
  4026e6:	930b      	str	r3, [sp, #44]	; 0x2c
  4026e8:	980b      	ldr	r0, [sp, #44]	; 0x2c
  4026ea:	b041      	add	sp, #260	; 0x104
  4026ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4026f0:	aa23      	add	r2, sp, #140	; 0x8c
  4026f2:	990a      	ldr	r1, [sp, #40]	; 0x28
  4026f4:	9808      	ldr	r0, [sp, #32]
  4026f6:	f003 fe39 	bl	40636c <__sprint_r>
  4026fa:	2800      	cmp	r0, #0
  4026fc:	f040 8318 	bne.w	402d30 <_vfprintf_r+0xb14>
  402700:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  402704:	e5f5      	b.n	4022f2 <_vfprintf_r+0xd6>
  402706:	9808      	ldr	r0, [sp, #32]
  402708:	f002 f9a0 	bl	404a4c <__sinit>
  40270c:	e59c      	b.n	402248 <_vfprintf_r+0x2c>
  40270e:	f9ba 200e 	ldrsh.w	r2, [sl, #14]
  402712:	2a00      	cmp	r2, #0
  402714:	f6ff adbd 	blt.w	402292 <_vfprintf_r+0x76>
  402718:	f8da 2064 	ldr.w	r2, [sl, #100]	; 0x64
  40271c:	07d0      	lsls	r0, r2, #31
  40271e:	d405      	bmi.n	40272c <_vfprintf_r+0x510>
  402720:	0599      	lsls	r1, r3, #22
  402722:	d403      	bmi.n	40272c <_vfprintf_r+0x510>
  402724:	f8da 0058 	ldr.w	r0, [sl, #88]	; 0x58
  402728:	f002 fcdc 	bl	4050e4 <__retarget_lock_release_recursive>
  40272c:	462b      	mov	r3, r5
  40272e:	464a      	mov	r2, r9
  402730:	4651      	mov	r1, sl
  402732:	9808      	ldr	r0, [sp, #32]
  402734:	f001 f81e 	bl	403774 <__sbprintf>
  402738:	900b      	str	r0, [sp, #44]	; 0x2c
  40273a:	980b      	ldr	r0, [sp, #44]	; 0x2c
  40273c:	b041      	add	sp, #260	; 0x104
  40273e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402742:	f8ba 300c 	ldrh.w	r3, [sl, #12]
  402746:	e59f      	b.n	402288 <_vfprintf_r+0x6c>
  402748:	f8da 0058 	ldr.w	r0, [sl, #88]	; 0x58
  40274c:	f002 fcc8 	bl	4050e0 <__retarget_lock_acquire_recursive>
  402750:	f9ba 200c 	ldrsh.w	r2, [sl, #12]
  402754:	b293      	uxth	r3, r2
  402756:	e582      	b.n	40225e <_vfprintf_r+0x42>
  402758:	980c      	ldr	r0, [sp, #48]	; 0x30
  40275a:	930e      	str	r3, [sp, #56]	; 0x38
  40275c:	4240      	negs	r0, r0
  40275e:	900c      	str	r0, [sp, #48]	; 0x30
  402760:	f04b 0b04 	orr.w	fp, fp, #4
  402764:	f899 6000 	ldrb.w	r6, [r9]
  402768:	e5d7      	b.n	40231a <_vfprintf_r+0xfe>
  40276a:	2a00      	cmp	r2, #0
  40276c:	f040 87df 	bne.w	40372e <_vfprintf_r+0x1512>
  402770:	4b16      	ldr	r3, [pc, #88]	; (4027cc <_vfprintf_r+0x5b0>)
  402772:	9318      	str	r3, [sp, #96]	; 0x60
  402774:	f01b 0f20 	tst.w	fp, #32
  402778:	f040 84b9 	bne.w	4030ee <_vfprintf_r+0xed2>
  40277c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40277e:	f01b 0f10 	tst.w	fp, #16
  402782:	4613      	mov	r3, r2
  402784:	f040 83dc 	bne.w	402f40 <_vfprintf_r+0xd24>
  402788:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40278c:	f000 83d8 	beq.w	402f40 <_vfprintf_r+0xd24>
  402790:	3304      	adds	r3, #4
  402792:	8814      	ldrh	r4, [r2, #0]
  402794:	930e      	str	r3, [sp, #56]	; 0x38
  402796:	2500      	movs	r5, #0
  402798:	f01b 0f01 	tst.w	fp, #1
  40279c:	f000 8322 	beq.w	402de4 <_vfprintf_r+0xbc8>
  4027a0:	ea54 0305 	orrs.w	r3, r4, r5
  4027a4:	f000 831e 	beq.w	402de4 <_vfprintf_r+0xbc8>
  4027a8:	2330      	movs	r3, #48	; 0x30
  4027aa:	f88d 3070 	strb.w	r3, [sp, #112]	; 0x70
  4027ae:	f88d 6071 	strb.w	r6, [sp, #113]	; 0x71
  4027b2:	f04b 0b02 	orr.w	fp, fp, #2
  4027b6:	2302      	movs	r3, #2
  4027b8:	e63c      	b.n	402434 <_vfprintf_r+0x218>
  4027ba:	f04b 0b20 	orr.w	fp, fp, #32
  4027be:	f899 6000 	ldrb.w	r6, [r9]
  4027c2:	e5aa      	b.n	40231a <_vfprintf_r+0xfe>
  4027c4:	00406cf4 	.word	0x00406cf4
  4027c8:	00406d04 	.word	0x00406d04
  4027cc:	00406cd4 	.word	0x00406cd4
  4027d0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4027d2:	6817      	ldr	r7, [r2, #0]
  4027d4:	2400      	movs	r4, #0
  4027d6:	f88d 406f 	strb.w	r4, [sp, #111]	; 0x6f
  4027da:	1d15      	adds	r5, r2, #4
  4027dc:	2f00      	cmp	r7, #0
  4027de:	f000 864e 	beq.w	40347e <_vfprintf_r+0x1262>
  4027e2:	9a09      	ldr	r2, [sp, #36]	; 0x24
  4027e4:	1c53      	adds	r3, r2, #1
  4027e6:	f000 85cc 	beq.w	403382 <_vfprintf_r+0x1166>
  4027ea:	4621      	mov	r1, r4
  4027ec:	4638      	mov	r0, r7
  4027ee:	f002 ffc7 	bl	405780 <memchr>
  4027f2:	2800      	cmp	r0, #0
  4027f4:	f000 8697 	beq.w	403526 <_vfprintf_r+0x130a>
  4027f8:	1bc3      	subs	r3, r0, r7
  4027fa:	930d      	str	r3, [sp, #52]	; 0x34
  4027fc:	9409      	str	r4, [sp, #36]	; 0x24
  4027fe:	950e      	str	r5, [sp, #56]	; 0x38
  402800:	f8cd b018 	str.w	fp, [sp, #24]
  402804:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402808:	9307      	str	r3, [sp, #28]
  40280a:	9410      	str	r4, [sp, #64]	; 0x40
  40280c:	f89d a06f 	ldrb.w	sl, [sp, #111]	; 0x6f
  402810:	e636      	b.n	402480 <_vfprintf_r+0x264>
  402812:	2a00      	cmp	r2, #0
  402814:	f040 8796 	bne.w	403744 <_vfprintf_r+0x1528>
  402818:	f01b 0f20 	tst.w	fp, #32
  40281c:	f040 845a 	bne.w	4030d4 <_vfprintf_r+0xeb8>
  402820:	f01b 0f10 	tst.w	fp, #16
  402824:	f040 83a2 	bne.w	402f6c <_vfprintf_r+0xd50>
  402828:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40282c:	f000 839e 	beq.w	402f6c <_vfprintf_r+0xd50>
  402830:	990e      	ldr	r1, [sp, #56]	; 0x38
  402832:	f9b1 4000 	ldrsh.w	r4, [r1]
  402836:	3104      	adds	r1, #4
  402838:	17e5      	asrs	r5, r4, #31
  40283a:	4622      	mov	r2, r4
  40283c:	462b      	mov	r3, r5
  40283e:	910e      	str	r1, [sp, #56]	; 0x38
  402840:	2a00      	cmp	r2, #0
  402842:	f173 0300 	sbcs.w	r3, r3, #0
  402846:	f2c0 8487 	blt.w	403158 <_vfprintf_r+0xf3c>
  40284a:	9909      	ldr	r1, [sp, #36]	; 0x24
  40284c:	f89d a06f 	ldrb.w	sl, [sp, #111]	; 0x6f
  402850:	1c4a      	adds	r2, r1, #1
  402852:	f04f 0301 	mov.w	r3, #1
  402856:	f47f adf5 	bne.w	402444 <_vfprintf_r+0x228>
  40285a:	ea54 0205 	orrs.w	r2, r4, r5
  40285e:	f000 826c 	beq.w	402d3a <_vfprintf_r+0xb1e>
  402862:	f8cd b018 	str.w	fp, [sp, #24]
  402866:	2b01      	cmp	r3, #1
  402868:	f000 8308 	beq.w	402e7c <_vfprintf_r+0xc60>
  40286c:	2b02      	cmp	r3, #2
  40286e:	f040 8295 	bne.w	402d9c <_vfprintf_r+0xb80>
  402872:	9818      	ldr	r0, [sp, #96]	; 0x60
  402874:	af30      	add	r7, sp, #192	; 0xc0
  402876:	0923      	lsrs	r3, r4, #4
  402878:	f004 010f 	and.w	r1, r4, #15
  40287c:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  402880:	092a      	lsrs	r2, r5, #4
  402882:	461c      	mov	r4, r3
  402884:	4615      	mov	r5, r2
  402886:	5c43      	ldrb	r3, [r0, r1]
  402888:	f807 3d01 	strb.w	r3, [r7, #-1]!
  40288c:	ea54 0305 	orrs.w	r3, r4, r5
  402890:	d1f1      	bne.n	402876 <_vfprintf_r+0x65a>
  402892:	ab30      	add	r3, sp, #192	; 0xc0
  402894:	1bdb      	subs	r3, r3, r7
  402896:	930d      	str	r3, [sp, #52]	; 0x34
  402898:	e5ea      	b.n	402470 <_vfprintf_r+0x254>
  40289a:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  40289e:	f899 6000 	ldrb.w	r6, [r9]
  4028a2:	e53a      	b.n	40231a <_vfprintf_r+0xfe>
  4028a4:	f899 6000 	ldrb.w	r6, [r9]
  4028a8:	2e6c      	cmp	r6, #108	; 0x6c
  4028aa:	bf03      	ittte	eq
  4028ac:	f899 6001 	ldrbeq.w	r6, [r9, #1]
  4028b0:	f04b 0b20 	orreq.w	fp, fp, #32
  4028b4:	f109 0901 	addeq.w	r9, r9, #1
  4028b8:	f04b 0b10 	orrne.w	fp, fp, #16
  4028bc:	e52d      	b.n	40231a <_vfprintf_r+0xfe>
  4028be:	2a00      	cmp	r2, #0
  4028c0:	f040 874c 	bne.w	40375c <_vfprintf_r+0x1540>
  4028c4:	f01b 0f20 	tst.w	fp, #32
  4028c8:	f040 853f 	bne.w	40334a <_vfprintf_r+0x112e>
  4028cc:	f01b 0f10 	tst.w	fp, #16
  4028d0:	f040 80fc 	bne.w	402acc <_vfprintf_r+0x8b0>
  4028d4:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4028d8:	f000 80f8 	beq.w	402acc <_vfprintf_r+0x8b0>
  4028dc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4028de:	6813      	ldr	r3, [r2, #0]
  4028e0:	3204      	adds	r2, #4
  4028e2:	920e      	str	r2, [sp, #56]	; 0x38
  4028e4:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
  4028e8:	801a      	strh	r2, [r3, #0]
  4028ea:	e4e3      	b.n	4022b4 <_vfprintf_r+0x98>
  4028ec:	f899 6000 	ldrb.w	r6, [r9]
  4028f0:	2900      	cmp	r1, #0
  4028f2:	f47f ad12 	bne.w	40231a <_vfprintf_r+0xfe>
  4028f6:	2201      	movs	r2, #1
  4028f8:	2120      	movs	r1, #32
  4028fa:	e50e      	b.n	40231a <_vfprintf_r+0xfe>
  4028fc:	f899 6000 	ldrb.w	r6, [r9]
  402900:	2e2a      	cmp	r6, #42	; 0x2a
  402902:	f109 0001 	add.w	r0, r9, #1
  402906:	f000 86f1 	beq.w	4036ec <_vfprintf_r+0x14d0>
  40290a:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
  40290e:	2b09      	cmp	r3, #9
  402910:	4681      	mov	r9, r0
  402912:	bf98      	it	ls
  402914:	2000      	movls	r0, #0
  402916:	f200 863d 	bhi.w	403594 <_vfprintf_r+0x1378>
  40291a:	f819 6b01 	ldrb.w	r6, [r9], #1
  40291e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  402922:	eb03 0040 	add.w	r0, r3, r0, lsl #1
  402926:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
  40292a:	2b09      	cmp	r3, #9
  40292c:	d9f5      	bls.n	40291a <_vfprintf_r+0x6fe>
  40292e:	9009      	str	r0, [sp, #36]	; 0x24
  402930:	e4f5      	b.n	40231e <_vfprintf_r+0x102>
  402932:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  402936:	f899 6000 	ldrb.w	r6, [r9]
  40293a:	e4ee      	b.n	40231a <_vfprintf_r+0xfe>
  40293c:	f899 6000 	ldrb.w	r6, [r9]
  402940:	2201      	movs	r2, #1
  402942:	212b      	movs	r1, #43	; 0x2b
  402944:	e4e9      	b.n	40231a <_vfprintf_r+0xfe>
  402946:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402948:	4bae      	ldr	r3, [pc, #696]	; (402c04 <_vfprintf_r+0x9e8>)
  40294a:	6814      	ldr	r4, [r2, #0]
  40294c:	9318      	str	r3, [sp, #96]	; 0x60
  40294e:	2678      	movs	r6, #120	; 0x78
  402950:	2330      	movs	r3, #48	; 0x30
  402952:	3204      	adds	r2, #4
  402954:	f88d 3070 	strb.w	r3, [sp, #112]	; 0x70
  402958:	f04b 0b02 	orr.w	fp, fp, #2
  40295c:	920e      	str	r2, [sp, #56]	; 0x38
  40295e:	2500      	movs	r5, #0
  402960:	f88d 6071 	strb.w	r6, [sp, #113]	; 0x71
  402964:	2302      	movs	r3, #2
  402966:	e565      	b.n	402434 <_vfprintf_r+0x218>
  402968:	2a00      	cmp	r2, #0
  40296a:	f040 86e4 	bne.w	403736 <_vfprintf_r+0x151a>
  40296e:	4ba6      	ldr	r3, [pc, #664]	; (402c08 <_vfprintf_r+0x9ec>)
  402970:	9318      	str	r3, [sp, #96]	; 0x60
  402972:	e6ff      	b.n	402774 <_vfprintf_r+0x558>
  402974:	990e      	ldr	r1, [sp, #56]	; 0x38
  402976:	f8cd b018 	str.w	fp, [sp, #24]
  40297a:	680a      	ldr	r2, [r1, #0]
  40297c:	f88d 2098 	strb.w	r2, [sp, #152]	; 0x98
  402980:	2300      	movs	r3, #0
  402982:	460a      	mov	r2, r1
  402984:	469a      	mov	sl, r3
  402986:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
  40298a:	3204      	adds	r2, #4
  40298c:	2301      	movs	r3, #1
  40298e:	9307      	str	r3, [sp, #28]
  402990:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
  402994:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
  402998:	920e      	str	r2, [sp, #56]	; 0x38
  40299a:	930d      	str	r3, [sp, #52]	; 0x34
  40299c:	af26      	add	r7, sp, #152	; 0x98
  40299e:	e575      	b.n	40248c <_vfprintf_r+0x270>
  4029a0:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
  4029a4:	2000      	movs	r0, #0
  4029a6:	f819 6b01 	ldrb.w	r6, [r9], #1
  4029aa:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  4029ae:	eb03 0040 	add.w	r0, r3, r0, lsl #1
  4029b2:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
  4029b6:	2b09      	cmp	r3, #9
  4029b8:	d9f5      	bls.n	4029a6 <_vfprintf_r+0x78a>
  4029ba:	900c      	str	r0, [sp, #48]	; 0x30
  4029bc:	e4af      	b.n	40231e <_vfprintf_r+0x102>
  4029be:	2a00      	cmp	r2, #0
  4029c0:	f040 86c8 	bne.w	403754 <_vfprintf_r+0x1538>
  4029c4:	f04b 0b10 	orr.w	fp, fp, #16
  4029c8:	e726      	b.n	402818 <_vfprintf_r+0x5fc>
  4029ca:	f04b 0b01 	orr.w	fp, fp, #1
  4029ce:	f899 6000 	ldrb.w	r6, [r9]
  4029d2:	e4a2      	b.n	40231a <_vfprintf_r+0xfe>
  4029d4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
  4029d6:	6823      	ldr	r3, [r4, #0]
  4029d8:	930c      	str	r3, [sp, #48]	; 0x30
  4029da:	4618      	mov	r0, r3
  4029dc:	2800      	cmp	r0, #0
  4029de:	4623      	mov	r3, r4
  4029e0:	f103 0304 	add.w	r3, r3, #4
  4029e4:	f6ff aeb8 	blt.w	402758 <_vfprintf_r+0x53c>
  4029e8:	930e      	str	r3, [sp, #56]	; 0x38
  4029ea:	f899 6000 	ldrb.w	r6, [r9]
  4029ee:	e494      	b.n	40231a <_vfprintf_r+0xfe>
  4029f0:	2a00      	cmp	r2, #0
  4029f2:	f040 86b7 	bne.w	403764 <_vfprintf_r+0x1548>
  4029f6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
  4029f8:	3507      	adds	r5, #7
  4029fa:	f025 0307 	bic.w	r3, r5, #7
  4029fe:	f103 0208 	add.w	r2, r3, #8
  402a02:	920e      	str	r2, [sp, #56]	; 0x38
  402a04:	681a      	ldr	r2, [r3, #0]
  402a06:	9213      	str	r2, [sp, #76]	; 0x4c
  402a08:	685b      	ldr	r3, [r3, #4]
  402a0a:	9312      	str	r3, [sp, #72]	; 0x48
  402a0c:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402a0e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
  402a10:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  402a14:	4628      	mov	r0, r5
  402a16:	4621      	mov	r1, r4
  402a18:	f04f 32ff 	mov.w	r2, #4294967295
  402a1c:	4b7b      	ldr	r3, [pc, #492]	; (402c0c <_vfprintf_r+0x9f0>)
  402a1e:	f003 ff31 	bl	406884 <__aeabi_dcmpun>
  402a22:	2800      	cmp	r0, #0
  402a24:	f040 83a2 	bne.w	40316c <_vfprintf_r+0xf50>
  402a28:	4628      	mov	r0, r5
  402a2a:	4621      	mov	r1, r4
  402a2c:	f04f 32ff 	mov.w	r2, #4294967295
  402a30:	4b76      	ldr	r3, [pc, #472]	; (402c0c <_vfprintf_r+0x9f0>)
  402a32:	f7ff f90d 	bl	401c50 <__aeabi_dcmple>
  402a36:	2800      	cmp	r0, #0
  402a38:	f040 8398 	bne.w	40316c <_vfprintf_r+0xf50>
  402a3c:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402a3e:	9813      	ldr	r0, [sp, #76]	; 0x4c
  402a40:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  402a42:	9912      	ldr	r1, [sp, #72]	; 0x48
  402a44:	f7ff f8fa 	bl	401c3c <__aeabi_dcmplt>
  402a48:	2800      	cmp	r0, #0
  402a4a:	f040 8435 	bne.w	4032b8 <_vfprintf_r+0x109c>
  402a4e:	f89d a06f 	ldrb.w	sl, [sp, #111]	; 0x6f
  402a52:	4f6f      	ldr	r7, [pc, #444]	; (402c10 <_vfprintf_r+0x9f4>)
  402a54:	4b6f      	ldr	r3, [pc, #444]	; (402c14 <_vfprintf_r+0x9f8>)
  402a56:	2203      	movs	r2, #3
  402a58:	2100      	movs	r1, #0
  402a5a:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  402a5e:	9207      	str	r2, [sp, #28]
  402a60:	9109      	str	r1, [sp, #36]	; 0x24
  402a62:	9006      	str	r0, [sp, #24]
  402a64:	2e47      	cmp	r6, #71	; 0x47
  402a66:	bfd8      	it	le
  402a68:	461f      	movle	r7, r3
  402a6a:	920d      	str	r2, [sp, #52]	; 0x34
  402a6c:	9110      	str	r1, [sp, #64]	; 0x40
  402a6e:	e507      	b.n	402480 <_vfprintf_r+0x264>
  402a70:	f04b 0b08 	orr.w	fp, fp, #8
  402a74:	f899 6000 	ldrb.w	r6, [r9]
  402a78:	e44f      	b.n	40231a <_vfprintf_r+0xfe>
  402a7a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
  402a7c:	3507      	adds	r5, #7
  402a7e:	f025 0307 	bic.w	r3, r5, #7
  402a82:	f103 0208 	add.w	r2, r3, #8
  402a86:	e9d3 4500 	ldrd	r4, r5, [r3]
  402a8a:	920e      	str	r2, [sp, #56]	; 0x38
  402a8c:	2300      	movs	r3, #0
  402a8e:	e4d1      	b.n	402434 <_vfprintf_r+0x218>
  402a90:	9d0e      	ldr	r5, [sp, #56]	; 0x38
  402a92:	3507      	adds	r5, #7
  402a94:	f025 0307 	bic.w	r3, r5, #7
  402a98:	f103 0208 	add.w	r2, r3, #8
  402a9c:	e9d3 4500 	ldrd	r4, r5, [r3]
  402aa0:	920e      	str	r2, [sp, #56]	; 0x38
  402aa2:	2301      	movs	r3, #1
  402aa4:	e4c6      	b.n	402434 <_vfprintf_r+0x218>
  402aa6:	2a00      	cmp	r2, #0
  402aa8:	f040 8650 	bne.w	40374c <_vfprintf_r+0x1530>
  402aac:	b1c6      	cbz	r6, 402ae0 <_vfprintf_r+0x8c4>
  402aae:	2300      	movs	r3, #0
  402ab0:	2201      	movs	r2, #1
  402ab2:	469a      	mov	sl, r3
  402ab4:	9207      	str	r2, [sp, #28]
  402ab6:	f88d 6098 	strb.w	r6, [sp, #152]	; 0x98
  402aba:	f8cd b018 	str.w	fp, [sp, #24]
  402abe:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
  402ac2:	9309      	str	r3, [sp, #36]	; 0x24
  402ac4:	9310      	str	r3, [sp, #64]	; 0x40
  402ac6:	920d      	str	r2, [sp, #52]	; 0x34
  402ac8:	af26      	add	r7, sp, #152	; 0x98
  402aca:	e4df      	b.n	40248c <_vfprintf_r+0x270>
  402acc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402ace:	6813      	ldr	r3, [r2, #0]
  402ad0:	3204      	adds	r2, #4
  402ad2:	920e      	str	r2, [sp, #56]	; 0x38
  402ad4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  402ad6:	601a      	str	r2, [r3, #0]
  402ad8:	f7ff bbec 	b.w	4022b4 <_vfprintf_r+0x98>
  402adc:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402ade:	e527      	b.n	402530 <_vfprintf_r+0x314>
  402ae0:	9b25      	ldr	r3, [sp, #148]	; 0x94
  402ae2:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
  402ae6:	2b00      	cmp	r3, #0
  402ae8:	f040 8594 	bne.w	403614 <_vfprintf_r+0x13f8>
  402aec:	2300      	movs	r3, #0
  402aee:	9324      	str	r3, [sp, #144]	; 0x90
  402af0:	f8da 3064 	ldr.w	r3, [sl, #100]	; 0x64
  402af4:	f013 0f01 	tst.w	r3, #1
  402af8:	f8ba 300c 	ldrh.w	r3, [sl, #12]
  402afc:	d102      	bne.n	402b04 <_vfprintf_r+0x8e8>
  402afe:	059a      	lsls	r2, r3, #22
  402b00:	f140 8249 	bpl.w	402f96 <_vfprintf_r+0xd7a>
  402b04:	065b      	lsls	r3, r3, #25
  402b06:	f53f adec 	bmi.w	4026e2 <_vfprintf_r+0x4c6>
  402b0a:	980b      	ldr	r0, [sp, #44]	; 0x2c
  402b0c:	b041      	add	sp, #260	; 0x104
  402b0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402b12:	2e65      	cmp	r6, #101	; 0x65
  402b14:	f340 80b2 	ble.w	402c7c <_vfprintf_r+0xa60>
  402b18:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402b1a:	9813      	ldr	r0, [sp, #76]	; 0x4c
  402b1c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  402b1e:	9912      	ldr	r1, [sp, #72]	; 0x48
  402b20:	f7ff f882 	bl	401c28 <__aeabi_dcmpeq>
  402b24:	2800      	cmp	r0, #0
  402b26:	f000 8160 	beq.w	402dea <_vfprintf_r+0xbce>
  402b2a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402b2c:	4a3a      	ldr	r2, [pc, #232]	; (402c18 <_vfprintf_r+0x9fc>)
  402b2e:	f8c8 2000 	str.w	r2, [r8]
  402b32:	3301      	adds	r3, #1
  402b34:	3401      	adds	r4, #1
  402b36:	2201      	movs	r2, #1
  402b38:	2b07      	cmp	r3, #7
  402b3a:	9425      	str	r4, [sp, #148]	; 0x94
  402b3c:	9324      	str	r3, [sp, #144]	; 0x90
  402b3e:	f8c8 2004 	str.w	r2, [r8, #4]
  402b42:	f300 83bf 	bgt.w	4032c4 <_vfprintf_r+0x10a8>
  402b46:	f108 0808 	add.w	r8, r8, #8
  402b4a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  402b4c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402b4e:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402b50:	4293      	cmp	r3, r2
  402b52:	db03      	blt.n	402b5c <_vfprintf_r+0x940>
  402b54:	9b06      	ldr	r3, [sp, #24]
  402b56:	07df      	lsls	r7, r3, #31
  402b58:	f57f ad65 	bpl.w	402626 <_vfprintf_r+0x40a>
  402b5c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402b5e:	9914      	ldr	r1, [sp, #80]	; 0x50
  402b60:	9a15      	ldr	r2, [sp, #84]	; 0x54
  402b62:	f8c8 2000 	str.w	r2, [r8]
  402b66:	3301      	adds	r3, #1
  402b68:	440c      	add	r4, r1
  402b6a:	2b07      	cmp	r3, #7
  402b6c:	f8c8 1004 	str.w	r1, [r8, #4]
  402b70:	9425      	str	r4, [sp, #148]	; 0x94
  402b72:	9324      	str	r3, [sp, #144]	; 0x90
  402b74:	f300 83f8 	bgt.w	403368 <_vfprintf_r+0x114c>
  402b78:	f108 0808 	add.w	r8, r8, #8
  402b7c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402b7e:	1e5e      	subs	r6, r3, #1
  402b80:	2e00      	cmp	r6, #0
  402b82:	f77f ad50 	ble.w	402626 <_vfprintf_r+0x40a>
  402b86:	2e10      	cmp	r6, #16
  402b88:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402b8a:	4d24      	ldr	r5, [pc, #144]	; (402c1c <_vfprintf_r+0xa00>)
  402b8c:	f340 81dd 	ble.w	402f4a <_vfprintf_r+0xd2e>
  402b90:	2710      	movs	r7, #16
  402b92:	f8dd a020 	ldr.w	sl, [sp, #32]
  402b96:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  402b9a:	e005      	b.n	402ba8 <_vfprintf_r+0x98c>
  402b9c:	f108 0808 	add.w	r8, r8, #8
  402ba0:	3e10      	subs	r6, #16
  402ba2:	2e10      	cmp	r6, #16
  402ba4:	f340 81d1 	ble.w	402f4a <_vfprintf_r+0xd2e>
  402ba8:	3301      	adds	r3, #1
  402baa:	3410      	adds	r4, #16
  402bac:	2b07      	cmp	r3, #7
  402bae:	9425      	str	r4, [sp, #148]	; 0x94
  402bb0:	9324      	str	r3, [sp, #144]	; 0x90
  402bb2:	e888 00a0 	stmia.w	r8, {r5, r7}
  402bb6:	ddf1      	ble.n	402b9c <_vfprintf_r+0x980>
  402bb8:	aa23      	add	r2, sp, #140	; 0x8c
  402bba:	4659      	mov	r1, fp
  402bbc:	4650      	mov	r0, sl
  402bbe:	f003 fbd5 	bl	40636c <__sprint_r>
  402bc2:	2800      	cmp	r0, #0
  402bc4:	f040 83cd 	bne.w	403362 <_vfprintf_r+0x1146>
  402bc8:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402bca:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402bcc:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  402bd0:	e7e6      	b.n	402ba0 <_vfprintf_r+0x984>
  402bd2:	46aa      	mov	sl, r5
  402bd4:	e78c      	b.n	402af0 <_vfprintf_r+0x8d4>
  402bd6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  402bd8:	9a07      	ldr	r2, [sp, #28]
  402bda:	eba3 0a02 	sub.w	sl, r3, r2
  402bde:	f1ba 0f00 	cmp.w	sl, #0
  402be2:	f77f acca 	ble.w	40257a <_vfprintf_r+0x35e>
  402be6:	f1ba 0f10 	cmp.w	sl, #16
  402bea:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402bec:	4d0b      	ldr	r5, [pc, #44]	; (402c1c <_vfprintf_r+0xa00>)
  402bee:	dd39      	ble.n	402c64 <_vfprintf_r+0xa48>
  402bf0:	4642      	mov	r2, r8
  402bf2:	4621      	mov	r1, r4
  402bf4:	46b0      	mov	r8, r6
  402bf6:	f04f 0b10 	mov.w	fp, #16
  402bfa:	462e      	mov	r6, r5
  402bfc:	9c08      	ldr	r4, [sp, #32]
  402bfe:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  402c00:	e015      	b.n	402c2e <_vfprintf_r+0xa12>
  402c02:	bf00      	nop
  402c04:	00406cd4 	.word	0x00406cd4
  402c08:	00406cc0 	.word	0x00406cc0
  402c0c:	7fefffff 	.word	0x7fefffff
  402c10:	00406cb4 	.word	0x00406cb4
  402c14:	00406cb0 	.word	0x00406cb0
  402c18:	00406cf0 	.word	0x00406cf0
  402c1c:	00406d04 	.word	0x00406d04
  402c20:	f1aa 0a10 	sub.w	sl, sl, #16
  402c24:	f1ba 0f10 	cmp.w	sl, #16
  402c28:	f102 0208 	add.w	r2, r2, #8
  402c2c:	dd16      	ble.n	402c5c <_vfprintf_r+0xa40>
  402c2e:	3301      	adds	r3, #1
  402c30:	3110      	adds	r1, #16
  402c32:	2b07      	cmp	r3, #7
  402c34:	9125      	str	r1, [sp, #148]	; 0x94
  402c36:	9324      	str	r3, [sp, #144]	; 0x90
  402c38:	e882 0840 	stmia.w	r2, {r6, fp}
  402c3c:	ddf0      	ble.n	402c20 <_vfprintf_r+0xa04>
  402c3e:	aa23      	add	r2, sp, #140	; 0x8c
  402c40:	4629      	mov	r1, r5
  402c42:	4620      	mov	r0, r4
  402c44:	f003 fb92 	bl	40636c <__sprint_r>
  402c48:	2800      	cmp	r0, #0
  402c4a:	d1c2      	bne.n	402bd2 <_vfprintf_r+0x9b6>
  402c4c:	f1aa 0a10 	sub.w	sl, sl, #16
  402c50:	f1ba 0f10 	cmp.w	sl, #16
  402c54:	9925      	ldr	r1, [sp, #148]	; 0x94
  402c56:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402c58:	aa30      	add	r2, sp, #192	; 0xc0
  402c5a:	dce8      	bgt.n	402c2e <_vfprintf_r+0xa12>
  402c5c:	4635      	mov	r5, r6
  402c5e:	460c      	mov	r4, r1
  402c60:	4646      	mov	r6, r8
  402c62:	4690      	mov	r8, r2
  402c64:	3301      	adds	r3, #1
  402c66:	4454      	add	r4, sl
  402c68:	2b07      	cmp	r3, #7
  402c6a:	9425      	str	r4, [sp, #148]	; 0x94
  402c6c:	9324      	str	r3, [sp, #144]	; 0x90
  402c6e:	e888 0420 	stmia.w	r8, {r5, sl}
  402c72:	f300 8264 	bgt.w	40313e <_vfprintf_r+0xf22>
  402c76:	f108 0808 	add.w	r8, r8, #8
  402c7a:	e47e      	b.n	40257a <_vfprintf_r+0x35e>
  402c7c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402c7e:	9e24      	ldr	r6, [sp, #144]	; 0x90
  402c80:	2b01      	cmp	r3, #1
  402c82:	f340 81fd 	ble.w	403080 <_vfprintf_r+0xe64>
  402c86:	3601      	adds	r6, #1
  402c88:	3401      	adds	r4, #1
  402c8a:	2301      	movs	r3, #1
  402c8c:	2e07      	cmp	r6, #7
  402c8e:	9425      	str	r4, [sp, #148]	; 0x94
  402c90:	9624      	str	r6, [sp, #144]	; 0x90
  402c92:	f8c8 7000 	str.w	r7, [r8]
  402c96:	f8c8 3004 	str.w	r3, [r8, #4]
  402c9a:	f300 820e 	bgt.w	4030ba <_vfprintf_r+0xe9e>
  402c9e:	f108 0808 	add.w	r8, r8, #8
  402ca2:	9a14      	ldr	r2, [sp, #80]	; 0x50
  402ca4:	9b15      	ldr	r3, [sp, #84]	; 0x54
  402ca6:	f8c8 3000 	str.w	r3, [r8]
  402caa:	3601      	adds	r6, #1
  402cac:	4414      	add	r4, r2
  402cae:	2e07      	cmp	r6, #7
  402cb0:	9425      	str	r4, [sp, #148]	; 0x94
  402cb2:	9624      	str	r6, [sp, #144]	; 0x90
  402cb4:	f8c8 2004 	str.w	r2, [r8, #4]
  402cb8:	f300 822e 	bgt.w	403118 <_vfprintf_r+0xefc>
  402cbc:	f108 0808 	add.w	r8, r8, #8
  402cc0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  402cc2:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402cc4:	9813      	ldr	r0, [sp, #76]	; 0x4c
  402cc6:	9912      	ldr	r1, [sp, #72]	; 0x48
  402cc8:	f7fe ffae 	bl	401c28 <__aeabi_dcmpeq>
  402ccc:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402cce:	2800      	cmp	r0, #0
  402cd0:	f040 8106 	bne.w	402ee0 <_vfprintf_r+0xcc4>
  402cd4:	3b01      	subs	r3, #1
  402cd6:	3601      	adds	r6, #1
  402cd8:	3701      	adds	r7, #1
  402cda:	441c      	add	r4, r3
  402cdc:	2e07      	cmp	r6, #7
  402cde:	9624      	str	r6, [sp, #144]	; 0x90
  402ce0:	9425      	str	r4, [sp, #148]	; 0x94
  402ce2:	f8c8 7000 	str.w	r7, [r8]
  402ce6:	f8c8 3004 	str.w	r3, [r8, #4]
  402cea:	f300 81d9 	bgt.w	4030a0 <_vfprintf_r+0xe84>
  402cee:	f108 0808 	add.w	r8, r8, #8
  402cf2:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402cf4:	f8c8 2004 	str.w	r2, [r8, #4]
  402cf8:	3601      	adds	r6, #1
  402cfa:	4414      	add	r4, r2
  402cfc:	ab1f      	add	r3, sp, #124	; 0x7c
  402cfe:	2e07      	cmp	r6, #7
  402d00:	9425      	str	r4, [sp, #148]	; 0x94
  402d02:	9624      	str	r6, [sp, #144]	; 0x90
  402d04:	f8c8 3000 	str.w	r3, [r8]
  402d08:	f77f ac8b 	ble.w	402622 <_vfprintf_r+0x406>
  402d0c:	aa23      	add	r2, sp, #140	; 0x8c
  402d0e:	990a      	ldr	r1, [sp, #40]	; 0x28
  402d10:	9808      	ldr	r0, [sp, #32]
  402d12:	f003 fb2b 	bl	40636c <__sprint_r>
  402d16:	b958      	cbnz	r0, 402d30 <_vfprintf_r+0xb14>
  402d18:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402d1a:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  402d1e:	e482      	b.n	402626 <_vfprintf_r+0x40a>
  402d20:	aa23      	add	r2, sp, #140	; 0x8c
  402d22:	990a      	ldr	r1, [sp, #40]	; 0x28
  402d24:	9808      	ldr	r0, [sp, #32]
  402d26:	f003 fb21 	bl	40636c <__sprint_r>
  402d2a:	2800      	cmp	r0, #0
  402d2c:	f43f acc5 	beq.w	4026ba <_vfprintf_r+0x49e>
  402d30:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
  402d34:	e6dc      	b.n	402af0 <_vfprintf_r+0x8d4>
  402d36:	f8dd b018 	ldr.w	fp, [sp, #24]
  402d3a:	2b01      	cmp	r3, #1
  402d3c:	f000 8121 	beq.w	402f82 <_vfprintf_r+0xd66>
  402d40:	2b02      	cmp	r3, #2
  402d42:	d127      	bne.n	402d94 <_vfprintf_r+0xb78>
  402d44:	f8cd b018 	str.w	fp, [sp, #24]
  402d48:	2400      	movs	r4, #0
  402d4a:	2500      	movs	r5, #0
  402d4c:	e591      	b.n	402872 <_vfprintf_r+0x656>
  402d4e:	aa23      	add	r2, sp, #140	; 0x8c
  402d50:	990a      	ldr	r1, [sp, #40]	; 0x28
  402d52:	9808      	ldr	r0, [sp, #32]
  402d54:	f003 fb0a 	bl	40636c <__sprint_r>
  402d58:	2800      	cmp	r0, #0
  402d5a:	d1e9      	bne.n	402d30 <_vfprintf_r+0xb14>
  402d5c:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402d5e:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  402d62:	e44d      	b.n	402600 <_vfprintf_r+0x3e4>
  402d64:	aa23      	add	r2, sp, #140	; 0x8c
  402d66:	990a      	ldr	r1, [sp, #40]	; 0x28
  402d68:	9808      	ldr	r0, [sp, #32]
  402d6a:	f003 faff 	bl	40636c <__sprint_r>
  402d6e:	2800      	cmp	r0, #0
  402d70:	d1de      	bne.n	402d30 <_vfprintf_r+0xb14>
  402d72:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402d74:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  402d78:	f7ff bbec 	b.w	402554 <_vfprintf_r+0x338>
  402d7c:	aa23      	add	r2, sp, #140	; 0x8c
  402d7e:	990a      	ldr	r1, [sp, #40]	; 0x28
  402d80:	9808      	ldr	r0, [sp, #32]
  402d82:	f003 faf3 	bl	40636c <__sprint_r>
  402d86:	2800      	cmp	r0, #0
  402d88:	d1d2      	bne.n	402d30 <_vfprintf_r+0xb14>
  402d8a:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402d8c:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  402d90:	f7ff bbf0 	b.w	402574 <_vfprintf_r+0x358>
  402d94:	f8cd b018 	str.w	fp, [sp, #24]
  402d98:	2400      	movs	r4, #0
  402d9a:	2500      	movs	r5, #0
  402d9c:	a930      	add	r1, sp, #192	; 0xc0
  402d9e:	e000      	b.n	402da2 <_vfprintf_r+0xb86>
  402da0:	4639      	mov	r1, r7
  402da2:	08e2      	lsrs	r2, r4, #3
  402da4:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  402da8:	08e8      	lsrs	r0, r5, #3
  402daa:	f004 0307 	and.w	r3, r4, #7
  402dae:	4605      	mov	r5, r0
  402db0:	4614      	mov	r4, r2
  402db2:	3330      	adds	r3, #48	; 0x30
  402db4:	ea54 0205 	orrs.w	r2, r4, r5
  402db8:	f801 3c01 	strb.w	r3, [r1, #-1]
  402dbc:	f101 37ff 	add.w	r7, r1, #4294967295
  402dc0:	d1ee      	bne.n	402da0 <_vfprintf_r+0xb84>
  402dc2:	9a06      	ldr	r2, [sp, #24]
  402dc4:	07d2      	lsls	r2, r2, #31
  402dc6:	f57f ad64 	bpl.w	402892 <_vfprintf_r+0x676>
  402dca:	2b30      	cmp	r3, #48	; 0x30
  402dcc:	f43f ad61 	beq.w	402892 <_vfprintf_r+0x676>
  402dd0:	2330      	movs	r3, #48	; 0x30
  402dd2:	3902      	subs	r1, #2
  402dd4:	f807 3c01 	strb.w	r3, [r7, #-1]
  402dd8:	ab30      	add	r3, sp, #192	; 0xc0
  402dda:	1a5b      	subs	r3, r3, r1
  402ddc:	930d      	str	r3, [sp, #52]	; 0x34
  402dde:	460f      	mov	r7, r1
  402de0:	f7ff bb46 	b.w	402470 <_vfprintf_r+0x254>
  402de4:	2302      	movs	r3, #2
  402de6:	f7ff bb25 	b.w	402434 <_vfprintf_r+0x218>
  402dea:	991d      	ldr	r1, [sp, #116]	; 0x74
  402dec:	2900      	cmp	r1, #0
  402dee:	f340 8274 	ble.w	4032da <_vfprintf_r+0x10be>
  402df2:	9b10      	ldr	r3, [sp, #64]	; 0x40
  402df4:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402df6:	4293      	cmp	r3, r2
  402df8:	bfa8      	it	ge
  402dfa:	4613      	movge	r3, r2
  402dfc:	2b00      	cmp	r3, #0
  402dfe:	461e      	mov	r6, r3
  402e00:	dd0d      	ble.n	402e1e <_vfprintf_r+0xc02>
  402e02:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402e04:	f8c8 7000 	str.w	r7, [r8]
  402e08:	3301      	adds	r3, #1
  402e0a:	4434      	add	r4, r6
  402e0c:	2b07      	cmp	r3, #7
  402e0e:	9425      	str	r4, [sp, #148]	; 0x94
  402e10:	f8c8 6004 	str.w	r6, [r8, #4]
  402e14:	9324      	str	r3, [sp, #144]	; 0x90
  402e16:	f300 8324 	bgt.w	403462 <_vfprintf_r+0x1246>
  402e1a:	f108 0808 	add.w	r8, r8, #8
  402e1e:	9b10      	ldr	r3, [sp, #64]	; 0x40
  402e20:	2e00      	cmp	r6, #0
  402e22:	bfa8      	it	ge
  402e24:	1b9b      	subge	r3, r3, r6
  402e26:	2b00      	cmp	r3, #0
  402e28:	461e      	mov	r6, r3
  402e2a:	f340 80d0 	ble.w	402fce <_vfprintf_r+0xdb2>
  402e2e:	2e10      	cmp	r6, #16
  402e30:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402e32:	4dc0      	ldr	r5, [pc, #768]	; (403134 <_vfprintf_r+0xf18>)
  402e34:	f340 80b7 	ble.w	402fa6 <_vfprintf_r+0xd8a>
  402e38:	4622      	mov	r2, r4
  402e3a:	f04f 0a10 	mov.w	sl, #16
  402e3e:	f8dd b020 	ldr.w	fp, [sp, #32]
  402e42:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  402e44:	e005      	b.n	402e52 <_vfprintf_r+0xc36>
  402e46:	f108 0808 	add.w	r8, r8, #8
  402e4a:	3e10      	subs	r6, #16
  402e4c:	2e10      	cmp	r6, #16
  402e4e:	f340 80a9 	ble.w	402fa4 <_vfprintf_r+0xd88>
  402e52:	3301      	adds	r3, #1
  402e54:	3210      	adds	r2, #16
  402e56:	2b07      	cmp	r3, #7
  402e58:	9225      	str	r2, [sp, #148]	; 0x94
  402e5a:	9324      	str	r3, [sp, #144]	; 0x90
  402e5c:	e888 0420 	stmia.w	r8, {r5, sl}
  402e60:	ddf1      	ble.n	402e46 <_vfprintf_r+0xc2a>
  402e62:	aa23      	add	r2, sp, #140	; 0x8c
  402e64:	4621      	mov	r1, r4
  402e66:	4658      	mov	r0, fp
  402e68:	f003 fa80 	bl	40636c <__sprint_r>
  402e6c:	2800      	cmp	r0, #0
  402e6e:	f040 8324 	bne.w	4034ba <_vfprintf_r+0x129e>
  402e72:	9a25      	ldr	r2, [sp, #148]	; 0x94
  402e74:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402e76:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  402e7a:	e7e6      	b.n	402e4a <_vfprintf_r+0xc2e>
  402e7c:	2d00      	cmp	r5, #0
  402e7e:	bf08      	it	eq
  402e80:	2c0a      	cmpeq	r4, #10
  402e82:	d37c      	bcc.n	402f7e <_vfprintf_r+0xd62>
  402e84:	af30      	add	r7, sp, #192	; 0xc0
  402e86:	4620      	mov	r0, r4
  402e88:	4629      	mov	r1, r5
  402e8a:	220a      	movs	r2, #10
  402e8c:	2300      	movs	r3, #0
  402e8e:	f003 fd37 	bl	406900 <__aeabi_uldivmod>
  402e92:	3230      	adds	r2, #48	; 0x30
  402e94:	f807 2d01 	strb.w	r2, [r7, #-1]!
  402e98:	4620      	mov	r0, r4
  402e9a:	4629      	mov	r1, r5
  402e9c:	2300      	movs	r3, #0
  402e9e:	220a      	movs	r2, #10
  402ea0:	f003 fd2e 	bl	406900 <__aeabi_uldivmod>
  402ea4:	4604      	mov	r4, r0
  402ea6:	460d      	mov	r5, r1
  402ea8:	ea54 0305 	orrs.w	r3, r4, r5
  402eac:	d1eb      	bne.n	402e86 <_vfprintf_r+0xc6a>
  402eae:	ab30      	add	r3, sp, #192	; 0xc0
  402eb0:	1bdb      	subs	r3, r3, r7
  402eb2:	930d      	str	r3, [sp, #52]	; 0x34
  402eb4:	f7ff badc 	b.w	402470 <_vfprintf_r+0x254>
  402eb8:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402eba:	930d      	str	r3, [sp, #52]	; 0x34
  402ebc:	af30      	add	r7, sp, #192	; 0xc0
  402ebe:	f7ff bad7 	b.w	402470 <_vfprintf_r+0x254>
  402ec2:	aa23      	add	r2, sp, #140	; 0x8c
  402ec4:	990a      	ldr	r1, [sp, #40]	; 0x28
  402ec6:	9808      	ldr	r0, [sp, #32]
  402ec8:	f003 fa50 	bl	40636c <__sprint_r>
  402ecc:	2800      	cmp	r0, #0
  402ece:	f47f af2f 	bne.w	402d30 <_vfprintf_r+0xb14>
  402ed2:	f89d a06f 	ldrb.w	sl, [sp, #111]	; 0x6f
  402ed6:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402ed8:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  402edc:	f7ff bb28 	b.w	402530 <_vfprintf_r+0x314>
  402ee0:	1e5f      	subs	r7, r3, #1
  402ee2:	2f00      	cmp	r7, #0
  402ee4:	f77f af05 	ble.w	402cf2 <_vfprintf_r+0xad6>
  402ee8:	2f10      	cmp	r7, #16
  402eea:	4d92      	ldr	r5, [pc, #584]	; (403134 <_vfprintf_r+0xf18>)
  402eec:	f340 810a 	ble.w	403104 <_vfprintf_r+0xee8>
  402ef0:	f04f 0a10 	mov.w	sl, #16
  402ef4:	f8dd b020 	ldr.w	fp, [sp, #32]
  402ef8:	e005      	b.n	402f06 <_vfprintf_r+0xcea>
  402efa:	f108 0808 	add.w	r8, r8, #8
  402efe:	3f10      	subs	r7, #16
  402f00:	2f10      	cmp	r7, #16
  402f02:	f340 80ff 	ble.w	403104 <_vfprintf_r+0xee8>
  402f06:	3601      	adds	r6, #1
  402f08:	3410      	adds	r4, #16
  402f0a:	2e07      	cmp	r6, #7
  402f0c:	9425      	str	r4, [sp, #148]	; 0x94
  402f0e:	9624      	str	r6, [sp, #144]	; 0x90
  402f10:	e888 0420 	stmia.w	r8, {r5, sl}
  402f14:	ddf1      	ble.n	402efa <_vfprintf_r+0xcde>
  402f16:	aa23      	add	r2, sp, #140	; 0x8c
  402f18:	990a      	ldr	r1, [sp, #40]	; 0x28
  402f1a:	4658      	mov	r0, fp
  402f1c:	f003 fa26 	bl	40636c <__sprint_r>
  402f20:	2800      	cmp	r0, #0
  402f22:	f47f af05 	bne.w	402d30 <_vfprintf_r+0xb14>
  402f26:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402f28:	9e24      	ldr	r6, [sp, #144]	; 0x90
  402f2a:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  402f2e:	e7e6      	b.n	402efe <_vfprintf_r+0xce2>
  402f30:	990e      	ldr	r1, [sp, #56]	; 0x38
  402f32:	460a      	mov	r2, r1
  402f34:	3204      	adds	r2, #4
  402f36:	680c      	ldr	r4, [r1, #0]
  402f38:	920e      	str	r2, [sp, #56]	; 0x38
  402f3a:	2500      	movs	r5, #0
  402f3c:	f7ff ba7a 	b.w	402434 <_vfprintf_r+0x218>
  402f40:	681c      	ldr	r4, [r3, #0]
  402f42:	3304      	adds	r3, #4
  402f44:	930e      	str	r3, [sp, #56]	; 0x38
  402f46:	2500      	movs	r5, #0
  402f48:	e426      	b.n	402798 <_vfprintf_r+0x57c>
  402f4a:	3301      	adds	r3, #1
  402f4c:	4434      	add	r4, r6
  402f4e:	2b07      	cmp	r3, #7
  402f50:	9425      	str	r4, [sp, #148]	; 0x94
  402f52:	9324      	str	r3, [sp, #144]	; 0x90
  402f54:	e888 0060 	stmia.w	r8, {r5, r6}
  402f58:	f77f ab63 	ble.w	402622 <_vfprintf_r+0x406>
  402f5c:	e6d6      	b.n	402d0c <_vfprintf_r+0xaf0>
  402f5e:	3204      	adds	r2, #4
  402f60:	681c      	ldr	r4, [r3, #0]
  402f62:	920e      	str	r2, [sp, #56]	; 0x38
  402f64:	2301      	movs	r3, #1
  402f66:	2500      	movs	r5, #0
  402f68:	f7ff ba64 	b.w	402434 <_vfprintf_r+0x218>
  402f6c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402f6e:	6814      	ldr	r4, [r2, #0]
  402f70:	4613      	mov	r3, r2
  402f72:	3304      	adds	r3, #4
  402f74:	17e5      	asrs	r5, r4, #31
  402f76:	930e      	str	r3, [sp, #56]	; 0x38
  402f78:	4622      	mov	r2, r4
  402f7a:	462b      	mov	r3, r5
  402f7c:	e460      	b.n	402840 <_vfprintf_r+0x624>
  402f7e:	f8dd b018 	ldr.w	fp, [sp, #24]
  402f82:	f8cd b018 	str.w	fp, [sp, #24]
  402f86:	af40      	add	r7, sp, #256	; 0x100
  402f88:	3430      	adds	r4, #48	; 0x30
  402f8a:	2301      	movs	r3, #1
  402f8c:	f807 4d41 	strb.w	r4, [r7, #-65]!
  402f90:	930d      	str	r3, [sp, #52]	; 0x34
  402f92:	f7ff ba6d 	b.w	402470 <_vfprintf_r+0x254>
  402f96:	f8da 0058 	ldr.w	r0, [sl, #88]	; 0x58
  402f9a:	f002 f8a3 	bl	4050e4 <__retarget_lock_release_recursive>
  402f9e:	f8ba 300c 	ldrh.w	r3, [sl, #12]
  402fa2:	e5af      	b.n	402b04 <_vfprintf_r+0x8e8>
  402fa4:	4614      	mov	r4, r2
  402fa6:	3301      	adds	r3, #1
  402fa8:	4434      	add	r4, r6
  402faa:	2b07      	cmp	r3, #7
  402fac:	9425      	str	r4, [sp, #148]	; 0x94
  402fae:	9324      	str	r3, [sp, #144]	; 0x90
  402fb0:	e888 0060 	stmia.w	r8, {r5, r6}
  402fb4:	f340 816d 	ble.w	403292 <_vfprintf_r+0x1076>
  402fb8:	aa23      	add	r2, sp, #140	; 0x8c
  402fba:	990a      	ldr	r1, [sp, #40]	; 0x28
  402fbc:	9808      	ldr	r0, [sp, #32]
  402fbe:	f003 f9d5 	bl	40636c <__sprint_r>
  402fc2:	2800      	cmp	r0, #0
  402fc4:	f47f aeb4 	bne.w	402d30 <_vfprintf_r+0xb14>
  402fc8:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402fca:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  402fce:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  402fd0:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402fd2:	4293      	cmp	r3, r2
  402fd4:	f280 8158 	bge.w	403288 <_vfprintf_r+0x106c>
  402fd8:	9a24      	ldr	r2, [sp, #144]	; 0x90
  402fda:	9814      	ldr	r0, [sp, #80]	; 0x50
  402fdc:	9915      	ldr	r1, [sp, #84]	; 0x54
  402fde:	f8c8 1000 	str.w	r1, [r8]
  402fe2:	3201      	adds	r2, #1
  402fe4:	4404      	add	r4, r0
  402fe6:	2a07      	cmp	r2, #7
  402fe8:	9425      	str	r4, [sp, #148]	; 0x94
  402fea:	f8c8 0004 	str.w	r0, [r8, #4]
  402fee:	9224      	str	r2, [sp, #144]	; 0x90
  402ff0:	f300 8152 	bgt.w	403298 <_vfprintf_r+0x107c>
  402ff4:	f108 0808 	add.w	r8, r8, #8
  402ff8:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402ffa:	9910      	ldr	r1, [sp, #64]	; 0x40
  402ffc:	1ad3      	subs	r3, r2, r3
  402ffe:	1a56      	subs	r6, r2, r1
  403000:	429e      	cmp	r6, r3
  403002:	bfa8      	it	ge
  403004:	461e      	movge	r6, r3
  403006:	2e00      	cmp	r6, #0
  403008:	dd0e      	ble.n	403028 <_vfprintf_r+0xe0c>
  40300a:	9a24      	ldr	r2, [sp, #144]	; 0x90
  40300c:	f8c8 6004 	str.w	r6, [r8, #4]
  403010:	3201      	adds	r2, #1
  403012:	440f      	add	r7, r1
  403014:	4434      	add	r4, r6
  403016:	2a07      	cmp	r2, #7
  403018:	f8c8 7000 	str.w	r7, [r8]
  40301c:	9425      	str	r4, [sp, #148]	; 0x94
  40301e:	9224      	str	r2, [sp, #144]	; 0x90
  403020:	f300 823c 	bgt.w	40349c <_vfprintf_r+0x1280>
  403024:	f108 0808 	add.w	r8, r8, #8
  403028:	2e00      	cmp	r6, #0
  40302a:	bfac      	ite	ge
  40302c:	1b9e      	subge	r6, r3, r6
  40302e:	461e      	movlt	r6, r3
  403030:	2e00      	cmp	r6, #0
  403032:	f77f aaf8 	ble.w	402626 <_vfprintf_r+0x40a>
  403036:	2e10      	cmp	r6, #16
  403038:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40303a:	4d3e      	ldr	r5, [pc, #248]	; (403134 <_vfprintf_r+0xf18>)
  40303c:	dd85      	ble.n	402f4a <_vfprintf_r+0xd2e>
  40303e:	2710      	movs	r7, #16
  403040:	f8dd a020 	ldr.w	sl, [sp, #32]
  403044:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  403048:	e005      	b.n	403056 <_vfprintf_r+0xe3a>
  40304a:	f108 0808 	add.w	r8, r8, #8
  40304e:	3e10      	subs	r6, #16
  403050:	2e10      	cmp	r6, #16
  403052:	f77f af7a 	ble.w	402f4a <_vfprintf_r+0xd2e>
  403056:	3301      	adds	r3, #1
  403058:	3410      	adds	r4, #16
  40305a:	2b07      	cmp	r3, #7
  40305c:	9425      	str	r4, [sp, #148]	; 0x94
  40305e:	9324      	str	r3, [sp, #144]	; 0x90
  403060:	e888 00a0 	stmia.w	r8, {r5, r7}
  403064:	ddf1      	ble.n	40304a <_vfprintf_r+0xe2e>
  403066:	aa23      	add	r2, sp, #140	; 0x8c
  403068:	4659      	mov	r1, fp
  40306a:	4650      	mov	r0, sl
  40306c:	f003 f97e 	bl	40636c <__sprint_r>
  403070:	2800      	cmp	r0, #0
  403072:	f040 8176 	bne.w	403362 <_vfprintf_r+0x1146>
  403076:	9c25      	ldr	r4, [sp, #148]	; 0x94
  403078:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40307a:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  40307e:	e7e6      	b.n	40304e <_vfprintf_r+0xe32>
  403080:	9b06      	ldr	r3, [sp, #24]
  403082:	07d8      	lsls	r0, r3, #31
  403084:	f53f adff 	bmi.w	402c86 <_vfprintf_r+0xa6a>
  403088:	3601      	adds	r6, #1
  40308a:	3401      	adds	r4, #1
  40308c:	2301      	movs	r3, #1
  40308e:	2e07      	cmp	r6, #7
  403090:	9425      	str	r4, [sp, #148]	; 0x94
  403092:	9624      	str	r6, [sp, #144]	; 0x90
  403094:	f8c8 7000 	str.w	r7, [r8]
  403098:	f8c8 3004 	str.w	r3, [r8, #4]
  40309c:	f77f ae27 	ble.w	402cee <_vfprintf_r+0xad2>
  4030a0:	aa23      	add	r2, sp, #140	; 0x8c
  4030a2:	990a      	ldr	r1, [sp, #40]	; 0x28
  4030a4:	9808      	ldr	r0, [sp, #32]
  4030a6:	f003 f961 	bl	40636c <__sprint_r>
  4030aa:	2800      	cmp	r0, #0
  4030ac:	f47f ae40 	bne.w	402d30 <_vfprintf_r+0xb14>
  4030b0:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4030b2:	9e24      	ldr	r6, [sp, #144]	; 0x90
  4030b4:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  4030b8:	e61b      	b.n	402cf2 <_vfprintf_r+0xad6>
  4030ba:	aa23      	add	r2, sp, #140	; 0x8c
  4030bc:	990a      	ldr	r1, [sp, #40]	; 0x28
  4030be:	9808      	ldr	r0, [sp, #32]
  4030c0:	f003 f954 	bl	40636c <__sprint_r>
  4030c4:	2800      	cmp	r0, #0
  4030c6:	f47f ae33 	bne.w	402d30 <_vfprintf_r+0xb14>
  4030ca:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4030cc:	9e24      	ldr	r6, [sp, #144]	; 0x90
  4030ce:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  4030d2:	e5e6      	b.n	402ca2 <_vfprintf_r+0xa86>
  4030d4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
  4030d6:	3507      	adds	r5, #7
  4030d8:	f025 0507 	bic.w	r5, r5, #7
  4030dc:	e9d5 2300 	ldrd	r2, r3, [r5]
  4030e0:	f105 0108 	add.w	r1, r5, #8
  4030e4:	910e      	str	r1, [sp, #56]	; 0x38
  4030e6:	4614      	mov	r4, r2
  4030e8:	461d      	mov	r5, r3
  4030ea:	f7ff bba9 	b.w	402840 <_vfprintf_r+0x624>
  4030ee:	9d0e      	ldr	r5, [sp, #56]	; 0x38
  4030f0:	3507      	adds	r5, #7
  4030f2:	f025 0307 	bic.w	r3, r5, #7
  4030f6:	f103 0208 	add.w	r2, r3, #8
  4030fa:	920e      	str	r2, [sp, #56]	; 0x38
  4030fc:	e9d3 4500 	ldrd	r4, r5, [r3]
  403100:	f7ff bb4a 	b.w	402798 <_vfprintf_r+0x57c>
  403104:	3601      	adds	r6, #1
  403106:	443c      	add	r4, r7
  403108:	2e07      	cmp	r6, #7
  40310a:	9425      	str	r4, [sp, #148]	; 0x94
  40310c:	9624      	str	r6, [sp, #144]	; 0x90
  40310e:	e888 00a0 	stmia.w	r8, {r5, r7}
  403112:	f77f adec 	ble.w	402cee <_vfprintf_r+0xad2>
  403116:	e7c3      	b.n	4030a0 <_vfprintf_r+0xe84>
  403118:	aa23      	add	r2, sp, #140	; 0x8c
  40311a:	990a      	ldr	r1, [sp, #40]	; 0x28
  40311c:	9808      	ldr	r0, [sp, #32]
  40311e:	f003 f925 	bl	40636c <__sprint_r>
  403122:	2800      	cmp	r0, #0
  403124:	f47f ae04 	bne.w	402d30 <_vfprintf_r+0xb14>
  403128:	9c25      	ldr	r4, [sp, #148]	; 0x94
  40312a:	9e24      	ldr	r6, [sp, #144]	; 0x90
  40312c:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  403130:	e5c6      	b.n	402cc0 <_vfprintf_r+0xaa4>
  403132:	bf00      	nop
  403134:	00406d04 	.word	0x00406d04
  403138:	af30      	add	r7, sp, #192	; 0xc0
  40313a:	f7ff b999 	b.w	402470 <_vfprintf_r+0x254>
  40313e:	aa23      	add	r2, sp, #140	; 0x8c
  403140:	990a      	ldr	r1, [sp, #40]	; 0x28
  403142:	9808      	ldr	r0, [sp, #32]
  403144:	f003 f912 	bl	40636c <__sprint_r>
  403148:	2800      	cmp	r0, #0
  40314a:	f47f adf1 	bne.w	402d30 <_vfprintf_r+0xb14>
  40314e:	9c25      	ldr	r4, [sp, #148]	; 0x94
  403150:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  403154:	f7ff ba11 	b.w	40257a <_vfprintf_r+0x35e>
  403158:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
  40315c:	4264      	negs	r4, r4
  40315e:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  403162:	f88d a06f 	strb.w	sl, [sp, #111]	; 0x6f
  403166:	2301      	movs	r3, #1
  403168:	f7ff b968 	b.w	40243c <_vfprintf_r+0x220>
  40316c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
  40316e:	4622      	mov	r2, r4
  403170:	4620      	mov	r0, r4
  403172:	9c12      	ldr	r4, [sp, #72]	; 0x48
  403174:	4623      	mov	r3, r4
  403176:	4621      	mov	r1, r4
  403178:	f003 fb84 	bl	406884 <__aeabi_dcmpun>
  40317c:	2800      	cmp	r0, #0
  40317e:	f040 828c 	bne.w	40369a <_vfprintf_r+0x147e>
  403182:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403184:	3301      	adds	r3, #1
  403186:	f026 0320 	bic.w	r3, r6, #32
  40318a:	930d      	str	r3, [sp, #52]	; 0x34
  40318c:	f000 8091 	beq.w	4032b2 <_vfprintf_r+0x1096>
  403190:	2b47      	cmp	r3, #71	; 0x47
  403192:	d104      	bne.n	40319e <_vfprintf_r+0xf82>
  403194:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403196:	2b00      	cmp	r3, #0
  403198:	bf08      	it	eq
  40319a:	2301      	moveq	r3, #1
  40319c:	9309      	str	r3, [sp, #36]	; 0x24
  40319e:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  4031a2:	9306      	str	r3, [sp, #24]
  4031a4:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4031a6:	f1b3 0a00 	subs.w	sl, r3, #0
  4031aa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4031ac:	9307      	str	r3, [sp, #28]
  4031ae:	bfbb      	ittet	lt
  4031b0:	4653      	movlt	r3, sl
  4031b2:	f103 4a00 	addlt.w	sl, r3, #2147483648	; 0x80000000
  4031b6:	2300      	movge	r3, #0
  4031b8:	232d      	movlt	r3, #45	; 0x2d
  4031ba:	2e66      	cmp	r6, #102	; 0x66
  4031bc:	930f      	str	r3, [sp, #60]	; 0x3c
  4031be:	f000 817f 	beq.w	4034c0 <_vfprintf_r+0x12a4>
  4031c2:	2e46      	cmp	r6, #70	; 0x46
  4031c4:	f000 81d4 	beq.w	403570 <_vfprintf_r+0x1354>
  4031c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4031ca:	9a07      	ldr	r2, [sp, #28]
  4031cc:	2b45      	cmp	r3, #69	; 0x45
  4031ce:	bf0c      	ite	eq
  4031d0:	9b09      	ldreq	r3, [sp, #36]	; 0x24
  4031d2:	9d09      	ldrne	r5, [sp, #36]	; 0x24
  4031d4:	a821      	add	r0, sp, #132	; 0x84
  4031d6:	a91e      	add	r1, sp, #120	; 0x78
  4031d8:	bf08      	it	eq
  4031da:	1c5d      	addeq	r5, r3, #1
  4031dc:	9004      	str	r0, [sp, #16]
  4031de:	9103      	str	r1, [sp, #12]
  4031e0:	a81d      	add	r0, sp, #116	; 0x74
  4031e2:	2102      	movs	r1, #2
  4031e4:	9002      	str	r0, [sp, #8]
  4031e6:	4653      	mov	r3, sl
  4031e8:	9501      	str	r5, [sp, #4]
  4031ea:	9100      	str	r1, [sp, #0]
  4031ec:	9808      	ldr	r0, [sp, #32]
  4031ee:	f000 fc0b 	bl	403a08 <_dtoa_r>
  4031f2:	2e67      	cmp	r6, #103	; 0x67
  4031f4:	4607      	mov	r7, r0
  4031f6:	f040 81af 	bne.w	403558 <_vfprintf_r+0x133c>
  4031fa:	f01b 0f01 	tst.w	fp, #1
  4031fe:	f000 8213 	beq.w	403628 <_vfprintf_r+0x140c>
  403202:	197c      	adds	r4, r7, r5
  403204:	9a16      	ldr	r2, [sp, #88]	; 0x58
  403206:	9807      	ldr	r0, [sp, #28]
  403208:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  40320a:	4651      	mov	r1, sl
  40320c:	f7fe fd0c 	bl	401c28 <__aeabi_dcmpeq>
  403210:	2800      	cmp	r0, #0
  403212:	f040 8132 	bne.w	40347a <_vfprintf_r+0x125e>
  403216:	9b21      	ldr	r3, [sp, #132]	; 0x84
  403218:	42a3      	cmp	r3, r4
  40321a:	d206      	bcs.n	40322a <_vfprintf_r+0x100e>
  40321c:	2130      	movs	r1, #48	; 0x30
  40321e:	1c5a      	adds	r2, r3, #1
  403220:	9221      	str	r2, [sp, #132]	; 0x84
  403222:	7019      	strb	r1, [r3, #0]
  403224:	9b21      	ldr	r3, [sp, #132]	; 0x84
  403226:	429c      	cmp	r4, r3
  403228:	d8f9      	bhi.n	40321e <_vfprintf_r+0x1002>
  40322a:	1bdb      	subs	r3, r3, r7
  40322c:	9311      	str	r3, [sp, #68]	; 0x44
  40322e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403230:	2b47      	cmp	r3, #71	; 0x47
  403232:	f000 80b9 	beq.w	4033a8 <_vfprintf_r+0x118c>
  403236:	2e65      	cmp	r6, #101	; 0x65
  403238:	f340 8276 	ble.w	403728 <_vfprintf_r+0x150c>
  40323c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  40323e:	9310      	str	r3, [sp, #64]	; 0x40
  403240:	2e66      	cmp	r6, #102	; 0x66
  403242:	f000 8162 	beq.w	40350a <_vfprintf_r+0x12ee>
  403246:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403248:	9a10      	ldr	r2, [sp, #64]	; 0x40
  40324a:	4619      	mov	r1, r3
  40324c:	4291      	cmp	r1, r2
  40324e:	f300 814f 	bgt.w	4034f0 <_vfprintf_r+0x12d4>
  403252:	f01b 0f01 	tst.w	fp, #1
  403256:	f040 8209 	bne.w	40366c <_vfprintf_r+0x1450>
  40325a:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  40325e:	9307      	str	r3, [sp, #28]
  403260:	920d      	str	r2, [sp, #52]	; 0x34
  403262:	2667      	movs	r6, #103	; 0x67
  403264:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403266:	2b00      	cmp	r3, #0
  403268:	f040 8096 	bne.w	403398 <_vfprintf_r+0x117c>
  40326c:	9309      	str	r3, [sp, #36]	; 0x24
  40326e:	f89d a06f 	ldrb.w	sl, [sp, #111]	; 0x6f
  403272:	f7ff b905 	b.w	402480 <_vfprintf_r+0x264>
  403276:	f8da 0058 	ldr.w	r0, [sl, #88]	; 0x58
  40327a:	f001 ff33 	bl	4050e4 <__retarget_lock_release_recursive>
  40327e:	f04f 33ff 	mov.w	r3, #4294967295
  403282:	930b      	str	r3, [sp, #44]	; 0x2c
  403284:	f7ff ba30 	b.w	4026e8 <_vfprintf_r+0x4cc>
  403288:	9a06      	ldr	r2, [sp, #24]
  40328a:	07d5      	lsls	r5, r2, #31
  40328c:	f57f aeb4 	bpl.w	402ff8 <_vfprintf_r+0xddc>
  403290:	e6a2      	b.n	402fd8 <_vfprintf_r+0xdbc>
  403292:	f108 0808 	add.w	r8, r8, #8
  403296:	e69a      	b.n	402fce <_vfprintf_r+0xdb2>
  403298:	aa23      	add	r2, sp, #140	; 0x8c
  40329a:	990a      	ldr	r1, [sp, #40]	; 0x28
  40329c:	9808      	ldr	r0, [sp, #32]
  40329e:	f003 f865 	bl	40636c <__sprint_r>
  4032a2:	2800      	cmp	r0, #0
  4032a4:	f47f ad44 	bne.w	402d30 <_vfprintf_r+0xb14>
  4032a8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  4032aa:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4032ac:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  4032b0:	e6a2      	b.n	402ff8 <_vfprintf_r+0xddc>
  4032b2:	2306      	movs	r3, #6
  4032b4:	9309      	str	r3, [sp, #36]	; 0x24
  4032b6:	e772      	b.n	40319e <_vfprintf_r+0xf82>
  4032b8:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
  4032bc:	f88d a06f 	strb.w	sl, [sp, #111]	; 0x6f
  4032c0:	f7ff bbc7 	b.w	402a52 <_vfprintf_r+0x836>
  4032c4:	aa23      	add	r2, sp, #140	; 0x8c
  4032c6:	990a      	ldr	r1, [sp, #40]	; 0x28
  4032c8:	9808      	ldr	r0, [sp, #32]
  4032ca:	f003 f84f 	bl	40636c <__sprint_r>
  4032ce:	2800      	cmp	r0, #0
  4032d0:	f47f ad2e 	bne.w	402d30 <_vfprintf_r+0xb14>
  4032d4:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  4032d8:	e437      	b.n	402b4a <_vfprintf_r+0x92e>
  4032da:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4032dc:	4ab4      	ldr	r2, [pc, #720]	; (4035b0 <_vfprintf_r+0x1394>)
  4032de:	f8c8 2000 	str.w	r2, [r8]
  4032e2:	3301      	adds	r3, #1
  4032e4:	3401      	adds	r4, #1
  4032e6:	2201      	movs	r2, #1
  4032e8:	2b07      	cmp	r3, #7
  4032ea:	9425      	str	r4, [sp, #148]	; 0x94
  4032ec:	9324      	str	r3, [sp, #144]	; 0x90
  4032ee:	f8c8 2004 	str.w	r2, [r8, #4]
  4032f2:	f300 8124 	bgt.w	40353e <_vfprintf_r+0x1322>
  4032f6:	f108 0808 	add.w	r8, r8, #8
  4032fa:	b929      	cbnz	r1, 403308 <_vfprintf_r+0x10ec>
  4032fc:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4032fe:	b91b      	cbnz	r3, 403308 <_vfprintf_r+0x10ec>
  403300:	9b06      	ldr	r3, [sp, #24]
  403302:	07de      	lsls	r6, r3, #31
  403304:	f57f a98f 	bpl.w	402626 <_vfprintf_r+0x40a>
  403308:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40330a:	9814      	ldr	r0, [sp, #80]	; 0x50
  40330c:	9a15      	ldr	r2, [sp, #84]	; 0x54
  40330e:	f8c8 2000 	str.w	r2, [r8]
  403312:	3301      	adds	r3, #1
  403314:	4602      	mov	r2, r0
  403316:	4422      	add	r2, r4
  403318:	2b07      	cmp	r3, #7
  40331a:	9225      	str	r2, [sp, #148]	; 0x94
  40331c:	f8c8 0004 	str.w	r0, [r8, #4]
  403320:	9324      	str	r3, [sp, #144]	; 0x90
  403322:	f300 8169 	bgt.w	4035f8 <_vfprintf_r+0x13dc>
  403326:	f108 0808 	add.w	r8, r8, #8
  40332a:	2900      	cmp	r1, #0
  40332c:	f2c0 8136 	blt.w	40359c <_vfprintf_r+0x1380>
  403330:	9911      	ldr	r1, [sp, #68]	; 0x44
  403332:	f8c8 7000 	str.w	r7, [r8]
  403336:	3301      	adds	r3, #1
  403338:	188c      	adds	r4, r1, r2
  40333a:	2b07      	cmp	r3, #7
  40333c:	9425      	str	r4, [sp, #148]	; 0x94
  40333e:	9324      	str	r3, [sp, #144]	; 0x90
  403340:	f8c8 1004 	str.w	r1, [r8, #4]
  403344:	f77f a96d 	ble.w	402622 <_vfprintf_r+0x406>
  403348:	e4e0      	b.n	402d0c <_vfprintf_r+0xaf0>
  40334a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40334c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40334e:	6813      	ldr	r3, [r2, #0]
  403350:	17cd      	asrs	r5, r1, #31
  403352:	4608      	mov	r0, r1
  403354:	3204      	adds	r2, #4
  403356:	4629      	mov	r1, r5
  403358:	920e      	str	r2, [sp, #56]	; 0x38
  40335a:	e9c3 0100 	strd	r0, r1, [r3]
  40335e:	f7fe bfa9 	b.w	4022b4 <_vfprintf_r+0x98>
  403362:	46da      	mov	sl, fp
  403364:	f7ff bbc4 	b.w	402af0 <_vfprintf_r+0x8d4>
  403368:	aa23      	add	r2, sp, #140	; 0x8c
  40336a:	990a      	ldr	r1, [sp, #40]	; 0x28
  40336c:	9808      	ldr	r0, [sp, #32]
  40336e:	f002 fffd 	bl	40636c <__sprint_r>
  403372:	2800      	cmp	r0, #0
  403374:	f47f acdc 	bne.w	402d30 <_vfprintf_r+0xb14>
  403378:	9c25      	ldr	r4, [sp, #148]	; 0x94
  40337a:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  40337e:	f7ff bbfd 	b.w	402b7c <_vfprintf_r+0x960>
  403382:	4638      	mov	r0, r7
  403384:	9409      	str	r4, [sp, #36]	; 0x24
  403386:	f7fe fedb 	bl	402140 <strlen>
  40338a:	950e      	str	r5, [sp, #56]	; 0x38
  40338c:	900d      	str	r0, [sp, #52]	; 0x34
  40338e:	f8cd b018 	str.w	fp, [sp, #24]
  403392:	4603      	mov	r3, r0
  403394:	f7ff ba36 	b.w	402804 <_vfprintf_r+0x5e8>
  403398:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
  40339c:	2300      	movs	r3, #0
  40339e:	f88d a06f 	strb.w	sl, [sp, #111]	; 0x6f
  4033a2:	9309      	str	r3, [sp, #36]	; 0x24
  4033a4:	f7ff b86f 	b.w	402486 <_vfprintf_r+0x26a>
  4033a8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  4033aa:	9310      	str	r3, [sp, #64]	; 0x40
  4033ac:	461a      	mov	r2, r3
  4033ae:	3303      	adds	r3, #3
  4033b0:	db04      	blt.n	4033bc <_vfprintf_r+0x11a0>
  4033b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4033b4:	4619      	mov	r1, r3
  4033b6:	4291      	cmp	r1, r2
  4033b8:	f6bf af45 	bge.w	403246 <_vfprintf_r+0x102a>
  4033bc:	3e02      	subs	r6, #2
  4033be:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4033c0:	f88d 607c 	strb.w	r6, [sp, #124]	; 0x7c
  4033c4:	3b01      	subs	r3, #1
  4033c6:	2b00      	cmp	r3, #0
  4033c8:	931d      	str	r3, [sp, #116]	; 0x74
  4033ca:	bfbd      	ittte	lt
  4033cc:	9b10      	ldrlt	r3, [sp, #64]	; 0x40
  4033ce:	f1c3 0301 	rsblt	r3, r3, #1
  4033d2:	222d      	movlt	r2, #45	; 0x2d
  4033d4:	222b      	movge	r2, #43	; 0x2b
  4033d6:	2b09      	cmp	r3, #9
  4033d8:	f88d 207d 	strb.w	r2, [sp, #125]	; 0x7d
  4033dc:	f340 813e 	ble.w	40365c <_vfprintf_r+0x1440>
  4033e0:	f10d 048b 	add.w	r4, sp, #139	; 0x8b
  4033e4:	4620      	mov	r0, r4
  4033e6:	4d73      	ldr	r5, [pc, #460]	; (4035b4 <_vfprintf_r+0x1398>)
  4033e8:	e000      	b.n	4033ec <_vfprintf_r+0x11d0>
  4033ea:	4610      	mov	r0, r2
  4033ec:	fb85 1203 	smull	r1, r2, r5, r3
  4033f0:	17d9      	asrs	r1, r3, #31
  4033f2:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  4033f6:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  4033fa:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  4033fe:	3230      	adds	r2, #48	; 0x30
  403400:	2909      	cmp	r1, #9
  403402:	f800 2c01 	strb.w	r2, [r0, #-1]
  403406:	460b      	mov	r3, r1
  403408:	f100 32ff 	add.w	r2, r0, #4294967295
  40340c:	dced      	bgt.n	4033ea <_vfprintf_r+0x11ce>
  40340e:	3330      	adds	r3, #48	; 0x30
  403410:	3802      	subs	r0, #2
  403412:	b2d9      	uxtb	r1, r3
  403414:	4284      	cmp	r4, r0
  403416:	f802 1c01 	strb.w	r1, [r2, #-1]
  40341a:	f240 8190 	bls.w	40373e <_vfprintf_r+0x1522>
  40341e:	f10d 007e 	add.w	r0, sp, #126	; 0x7e
  403422:	4613      	mov	r3, r2
  403424:	e001      	b.n	40342a <_vfprintf_r+0x120e>
  403426:	f813 1b01 	ldrb.w	r1, [r3], #1
  40342a:	f800 1b01 	strb.w	r1, [r0], #1
  40342e:	42a3      	cmp	r3, r4
  403430:	d1f9      	bne.n	403426 <_vfprintf_r+0x120a>
  403432:	3301      	adds	r3, #1
  403434:	1a9b      	subs	r3, r3, r2
  403436:	f10d 027e 	add.w	r2, sp, #126	; 0x7e
  40343a:	4413      	add	r3, r2
  40343c:	aa1f      	add	r2, sp, #124	; 0x7c
  40343e:	1a9b      	subs	r3, r3, r2
  403440:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403442:	9319      	str	r3, [sp, #100]	; 0x64
  403444:	2a01      	cmp	r2, #1
  403446:	4413      	add	r3, r2
  403448:	930d      	str	r3, [sp, #52]	; 0x34
  40344a:	f340 8145 	ble.w	4036d8 <_vfprintf_r+0x14bc>
  40344e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403450:	9a14      	ldr	r2, [sp, #80]	; 0x50
  403452:	4413      	add	r3, r2
  403454:	930d      	str	r3, [sp, #52]	; 0x34
  403456:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40345a:	9307      	str	r3, [sp, #28]
  40345c:	2300      	movs	r3, #0
  40345e:	9310      	str	r3, [sp, #64]	; 0x40
  403460:	e700      	b.n	403264 <_vfprintf_r+0x1048>
  403462:	aa23      	add	r2, sp, #140	; 0x8c
  403464:	990a      	ldr	r1, [sp, #40]	; 0x28
  403466:	9808      	ldr	r0, [sp, #32]
  403468:	f002 ff80 	bl	40636c <__sprint_r>
  40346c:	2800      	cmp	r0, #0
  40346e:	f47f ac5f 	bne.w	402d30 <_vfprintf_r+0xb14>
  403472:	9c25      	ldr	r4, [sp, #148]	; 0x94
  403474:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  403478:	e4d1      	b.n	402e1e <_vfprintf_r+0xc02>
  40347a:	4623      	mov	r3, r4
  40347c:	e6d5      	b.n	40322a <_vfprintf_r+0x100e>
  40347e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403480:	9710      	str	r7, [sp, #64]	; 0x40
  403482:	2b06      	cmp	r3, #6
  403484:	bf28      	it	cs
  403486:	2306      	movcs	r3, #6
  403488:	9709      	str	r7, [sp, #36]	; 0x24
  40348a:	46ba      	mov	sl, r7
  40348c:	9307      	str	r3, [sp, #28]
  40348e:	950e      	str	r5, [sp, #56]	; 0x38
  403490:	f8cd b018 	str.w	fp, [sp, #24]
  403494:	930d      	str	r3, [sp, #52]	; 0x34
  403496:	4f48      	ldr	r7, [pc, #288]	; (4035b8 <_vfprintf_r+0x139c>)
  403498:	f7fe bff2 	b.w	402480 <_vfprintf_r+0x264>
  40349c:	aa23      	add	r2, sp, #140	; 0x8c
  40349e:	990a      	ldr	r1, [sp, #40]	; 0x28
  4034a0:	9808      	ldr	r0, [sp, #32]
  4034a2:	f002 ff63 	bl	40636c <__sprint_r>
  4034a6:	2800      	cmp	r0, #0
  4034a8:	f47f ac42 	bne.w	402d30 <_vfprintf_r+0xb14>
  4034ac:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  4034ae:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4034b0:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4034b2:	1ad3      	subs	r3, r2, r3
  4034b4:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  4034b8:	e5b6      	b.n	403028 <_vfprintf_r+0xe0c>
  4034ba:	46a2      	mov	sl, r4
  4034bc:	f7ff bb18 	b.w	402af0 <_vfprintf_r+0x8d4>
  4034c0:	a821      	add	r0, sp, #132	; 0x84
  4034c2:	a91e      	add	r1, sp, #120	; 0x78
  4034c4:	9d09      	ldr	r5, [sp, #36]	; 0x24
  4034c6:	9004      	str	r0, [sp, #16]
  4034c8:	9103      	str	r1, [sp, #12]
  4034ca:	a81d      	add	r0, sp, #116	; 0x74
  4034cc:	2103      	movs	r1, #3
  4034ce:	9002      	str	r0, [sp, #8]
  4034d0:	9a07      	ldr	r2, [sp, #28]
  4034d2:	9501      	str	r5, [sp, #4]
  4034d4:	4653      	mov	r3, sl
  4034d6:	9100      	str	r1, [sp, #0]
  4034d8:	9808      	ldr	r0, [sp, #32]
  4034da:	f000 fa95 	bl	403a08 <_dtoa_r>
  4034de:	4607      	mov	r7, r0
  4034e0:	1944      	adds	r4, r0, r5
  4034e2:	783b      	ldrb	r3, [r7, #0]
  4034e4:	2b30      	cmp	r3, #48	; 0x30
  4034e6:	f000 80ca 	beq.w	40367e <_vfprintf_r+0x1462>
  4034ea:	9d1d      	ldr	r5, [sp, #116]	; 0x74
  4034ec:	442c      	add	r4, r5
  4034ee:	e689      	b.n	403204 <_vfprintf_r+0xfe8>
  4034f0:	9a14      	ldr	r2, [sp, #80]	; 0x50
  4034f2:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4034f4:	4413      	add	r3, r2
  4034f6:	9a10      	ldr	r2, [sp, #64]	; 0x40
  4034f8:	930d      	str	r3, [sp, #52]	; 0x34
  4034fa:	2a00      	cmp	r2, #0
  4034fc:	f340 80e4 	ble.w	4036c8 <_vfprintf_r+0x14ac>
  403500:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403504:	9307      	str	r3, [sp, #28]
  403506:	2667      	movs	r6, #103	; 0x67
  403508:	e6ac      	b.n	403264 <_vfprintf_r+0x1048>
  40350a:	2b00      	cmp	r3, #0
  40350c:	f340 80fb 	ble.w	403706 <_vfprintf_r+0x14ea>
  403510:	9a09      	ldr	r2, [sp, #36]	; 0x24
  403512:	2a00      	cmp	r2, #0
  403514:	f040 80ce 	bne.w	4036b4 <_vfprintf_r+0x1498>
  403518:	f01b 0f01 	tst.w	fp, #1
  40351c:	f040 80ca 	bne.w	4036b4 <_vfprintf_r+0x1498>
  403520:	9307      	str	r3, [sp, #28]
  403522:	930d      	str	r3, [sp, #52]	; 0x34
  403524:	e69e      	b.n	403264 <_vfprintf_r+0x1048>
  403526:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403528:	9307      	str	r3, [sp, #28]
  40352a:	930d      	str	r3, [sp, #52]	; 0x34
  40352c:	9009      	str	r0, [sp, #36]	; 0x24
  40352e:	950e      	str	r5, [sp, #56]	; 0x38
  403530:	f8cd b018 	str.w	fp, [sp, #24]
  403534:	9010      	str	r0, [sp, #64]	; 0x40
  403536:	f89d a06f 	ldrb.w	sl, [sp, #111]	; 0x6f
  40353a:	f7fe bfa1 	b.w	402480 <_vfprintf_r+0x264>
  40353e:	aa23      	add	r2, sp, #140	; 0x8c
  403540:	990a      	ldr	r1, [sp, #40]	; 0x28
  403542:	9808      	ldr	r0, [sp, #32]
  403544:	f002 ff12 	bl	40636c <__sprint_r>
  403548:	2800      	cmp	r0, #0
  40354a:	f47f abf1 	bne.w	402d30 <_vfprintf_r+0xb14>
  40354e:	991d      	ldr	r1, [sp, #116]	; 0x74
  403550:	9c25      	ldr	r4, [sp, #148]	; 0x94
  403552:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  403556:	e6d0      	b.n	4032fa <_vfprintf_r+0x10de>
  403558:	2e47      	cmp	r6, #71	; 0x47
  40355a:	f47f ae52 	bne.w	403202 <_vfprintf_r+0xfe6>
  40355e:	f01b 0f01 	tst.w	fp, #1
  403562:	f000 80da 	beq.w	40371a <_vfprintf_r+0x14fe>
  403566:	2e46      	cmp	r6, #70	; 0x46
  403568:	eb07 0405 	add.w	r4, r7, r5
  40356c:	d0b9      	beq.n	4034e2 <_vfprintf_r+0x12c6>
  40356e:	e649      	b.n	403204 <_vfprintf_r+0xfe8>
  403570:	a821      	add	r0, sp, #132	; 0x84
  403572:	a91e      	add	r1, sp, #120	; 0x78
  403574:	9c09      	ldr	r4, [sp, #36]	; 0x24
  403576:	9004      	str	r0, [sp, #16]
  403578:	9103      	str	r1, [sp, #12]
  40357a:	a81d      	add	r0, sp, #116	; 0x74
  40357c:	2103      	movs	r1, #3
  40357e:	9002      	str	r0, [sp, #8]
  403580:	9a07      	ldr	r2, [sp, #28]
  403582:	9401      	str	r4, [sp, #4]
  403584:	4653      	mov	r3, sl
  403586:	9100      	str	r1, [sp, #0]
  403588:	9808      	ldr	r0, [sp, #32]
  40358a:	f000 fa3d 	bl	403a08 <_dtoa_r>
  40358e:	4625      	mov	r5, r4
  403590:	4607      	mov	r7, r0
  403592:	e7e8      	b.n	403566 <_vfprintf_r+0x134a>
  403594:	2300      	movs	r3, #0
  403596:	9309      	str	r3, [sp, #36]	; 0x24
  403598:	f7fe bec1 	b.w	40231e <_vfprintf_r+0x102>
  40359c:	424e      	negs	r6, r1
  40359e:	3110      	adds	r1, #16
  4035a0:	4d06      	ldr	r5, [pc, #24]	; (4035bc <_vfprintf_r+0x13a0>)
  4035a2:	da43      	bge.n	40362c <_vfprintf_r+0x1410>
  4035a4:	2410      	movs	r4, #16
  4035a6:	f8dd a020 	ldr.w	sl, [sp, #32]
  4035aa:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  4035ae:	e00c      	b.n	4035ca <_vfprintf_r+0x13ae>
  4035b0:	00406cf0 	.word	0x00406cf0
  4035b4:	66666667 	.word	0x66666667
  4035b8:	00406ce8 	.word	0x00406ce8
  4035bc:	00406d04 	.word	0x00406d04
  4035c0:	f108 0808 	add.w	r8, r8, #8
  4035c4:	3e10      	subs	r6, #16
  4035c6:	2e10      	cmp	r6, #16
  4035c8:	dd30      	ble.n	40362c <_vfprintf_r+0x1410>
  4035ca:	3301      	adds	r3, #1
  4035cc:	3210      	adds	r2, #16
  4035ce:	2b07      	cmp	r3, #7
  4035d0:	9225      	str	r2, [sp, #148]	; 0x94
  4035d2:	9324      	str	r3, [sp, #144]	; 0x90
  4035d4:	f8c8 5000 	str.w	r5, [r8]
  4035d8:	f8c8 4004 	str.w	r4, [r8, #4]
  4035dc:	ddf0      	ble.n	4035c0 <_vfprintf_r+0x13a4>
  4035de:	aa23      	add	r2, sp, #140	; 0x8c
  4035e0:	4659      	mov	r1, fp
  4035e2:	4650      	mov	r0, sl
  4035e4:	f002 fec2 	bl	40636c <__sprint_r>
  4035e8:	2800      	cmp	r0, #0
  4035ea:	f47f aeba 	bne.w	403362 <_vfprintf_r+0x1146>
  4035ee:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4035f0:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4035f2:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  4035f6:	e7e5      	b.n	4035c4 <_vfprintf_r+0x13a8>
  4035f8:	aa23      	add	r2, sp, #140	; 0x8c
  4035fa:	990a      	ldr	r1, [sp, #40]	; 0x28
  4035fc:	9808      	ldr	r0, [sp, #32]
  4035fe:	f002 feb5 	bl	40636c <__sprint_r>
  403602:	2800      	cmp	r0, #0
  403604:	f47f ab94 	bne.w	402d30 <_vfprintf_r+0xb14>
  403608:	991d      	ldr	r1, [sp, #116]	; 0x74
  40360a:	9a25      	ldr	r2, [sp, #148]	; 0x94
  40360c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40360e:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  403612:	e68a      	b.n	40332a <_vfprintf_r+0x110e>
  403614:	9808      	ldr	r0, [sp, #32]
  403616:	aa23      	add	r2, sp, #140	; 0x8c
  403618:	4651      	mov	r1, sl
  40361a:	f002 fea7 	bl	40636c <__sprint_r>
  40361e:	2800      	cmp	r0, #0
  403620:	f43f aa64 	beq.w	402aec <_vfprintf_r+0x8d0>
  403624:	f7ff ba64 	b.w	402af0 <_vfprintf_r+0x8d4>
  403628:	9b21      	ldr	r3, [sp, #132]	; 0x84
  40362a:	e5fe      	b.n	40322a <_vfprintf_r+0x100e>
  40362c:	3301      	adds	r3, #1
  40362e:	4432      	add	r2, r6
  403630:	2b07      	cmp	r3, #7
  403632:	e888 0060 	stmia.w	r8, {r5, r6}
  403636:	9225      	str	r2, [sp, #148]	; 0x94
  403638:	9324      	str	r3, [sp, #144]	; 0x90
  40363a:	f108 0808 	add.w	r8, r8, #8
  40363e:	f77f ae77 	ble.w	403330 <_vfprintf_r+0x1114>
  403642:	aa23      	add	r2, sp, #140	; 0x8c
  403644:	990a      	ldr	r1, [sp, #40]	; 0x28
  403646:	9808      	ldr	r0, [sp, #32]
  403648:	f002 fe90 	bl	40636c <__sprint_r>
  40364c:	2800      	cmp	r0, #0
  40364e:	f47f ab6f 	bne.w	402d30 <_vfprintf_r+0xb14>
  403652:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403654:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403656:	f10d 08c0 	add.w	r8, sp, #192	; 0xc0
  40365a:	e669      	b.n	403330 <_vfprintf_r+0x1114>
  40365c:	3330      	adds	r3, #48	; 0x30
  40365e:	2230      	movs	r2, #48	; 0x30
  403660:	f88d 307f 	strb.w	r3, [sp, #127]	; 0x7f
  403664:	f88d 207e 	strb.w	r2, [sp, #126]	; 0x7e
  403668:	ab20      	add	r3, sp, #128	; 0x80
  40366a:	e6e7      	b.n	40343c <_vfprintf_r+0x1220>
  40366c:	9b10      	ldr	r3, [sp, #64]	; 0x40
  40366e:	9a14      	ldr	r2, [sp, #80]	; 0x50
  403670:	4413      	add	r3, r2
  403672:	930d      	str	r3, [sp, #52]	; 0x34
  403674:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403678:	9307      	str	r3, [sp, #28]
  40367a:	2667      	movs	r6, #103	; 0x67
  40367c:	e5f2      	b.n	403264 <_vfprintf_r+0x1048>
  40367e:	9a16      	ldr	r2, [sp, #88]	; 0x58
  403680:	9807      	ldr	r0, [sp, #28]
  403682:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  403684:	4651      	mov	r1, sl
  403686:	f7fe facf 	bl	401c28 <__aeabi_dcmpeq>
  40368a:	2800      	cmp	r0, #0
  40368c:	f47f af2d 	bne.w	4034ea <_vfprintf_r+0x12ce>
  403690:	f1c5 0501 	rsb	r5, r5, #1
  403694:	951d      	str	r5, [sp, #116]	; 0x74
  403696:	442c      	add	r4, r5
  403698:	e5b4      	b.n	403204 <_vfprintf_r+0xfe8>
  40369a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40369c:	4f33      	ldr	r7, [pc, #204]	; (40376c <_vfprintf_r+0x1550>)
  40369e:	2b00      	cmp	r3, #0
  4036a0:	bfb6      	itet	lt
  4036a2:	f04f 0a2d 	movlt.w	sl, #45	; 0x2d
  4036a6:	f89d a06f 	ldrbge.w	sl, [sp, #111]	; 0x6f
  4036aa:	f88d a06f 	strblt.w	sl, [sp, #111]	; 0x6f
  4036ae:	4b30      	ldr	r3, [pc, #192]	; (403770 <_vfprintf_r+0x1554>)
  4036b0:	f7ff b9d1 	b.w	402a56 <_vfprintf_r+0x83a>
  4036b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4036b6:	9a14      	ldr	r2, [sp, #80]	; 0x50
  4036b8:	4413      	add	r3, r2
  4036ba:	9a09      	ldr	r2, [sp, #36]	; 0x24
  4036bc:	441a      	add	r2, r3
  4036be:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  4036c2:	920d      	str	r2, [sp, #52]	; 0x34
  4036c4:	9307      	str	r3, [sp, #28]
  4036c6:	e5cd      	b.n	403264 <_vfprintf_r+0x1048>
  4036c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4036ca:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  4036cc:	f1c3 0301 	rsb	r3, r3, #1
  4036d0:	441a      	add	r2, r3
  4036d2:	4613      	mov	r3, r2
  4036d4:	920d      	str	r2, [sp, #52]	; 0x34
  4036d6:	e713      	b.n	403500 <_vfprintf_r+0x12e4>
  4036d8:	f01b 0301 	ands.w	r3, fp, #1
  4036dc:	9310      	str	r3, [sp, #64]	; 0x40
  4036de:	f47f aeb6 	bne.w	40344e <_vfprintf_r+0x1232>
  4036e2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4036e4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4036e8:	9307      	str	r3, [sp, #28]
  4036ea:	e5bb      	b.n	403264 <_vfprintf_r+0x1048>
  4036ec:	9c0e      	ldr	r4, [sp, #56]	; 0x38
  4036ee:	f899 6001 	ldrb.w	r6, [r9, #1]
  4036f2:	6823      	ldr	r3, [r4, #0]
  4036f4:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
  4036f8:	9309      	str	r3, [sp, #36]	; 0x24
  4036fa:	4623      	mov	r3, r4
  4036fc:	3304      	adds	r3, #4
  4036fe:	4681      	mov	r9, r0
  403700:	930e      	str	r3, [sp, #56]	; 0x38
  403702:	f7fe be0a 	b.w	40231a <_vfprintf_r+0xfe>
  403706:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403708:	b913      	cbnz	r3, 403710 <_vfprintf_r+0x14f4>
  40370a:	f01b 0f01 	tst.w	fp, #1
  40370e:	d002      	beq.n	403716 <_vfprintf_r+0x14fa>
  403710:	9b14      	ldr	r3, [sp, #80]	; 0x50
  403712:	3301      	adds	r3, #1
  403714:	e7d1      	b.n	4036ba <_vfprintf_r+0x149e>
  403716:	2301      	movs	r3, #1
  403718:	e702      	b.n	403520 <_vfprintf_r+0x1304>
  40371a:	9b21      	ldr	r3, [sp, #132]	; 0x84
  40371c:	1bdb      	subs	r3, r3, r7
  40371e:	9311      	str	r3, [sp, #68]	; 0x44
  403720:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403722:	2b47      	cmp	r3, #71	; 0x47
  403724:	f43f ae40 	beq.w	4033a8 <_vfprintf_r+0x118c>
  403728:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  40372a:	9310      	str	r3, [sp, #64]	; 0x40
  40372c:	e647      	b.n	4033be <_vfprintf_r+0x11a2>
  40372e:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  403732:	f7ff b81d 	b.w	402770 <_vfprintf_r+0x554>
  403736:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  40373a:	f7ff b918 	b.w	40296e <_vfprintf_r+0x752>
  40373e:	f10d 037e 	add.w	r3, sp, #126	; 0x7e
  403742:	e67b      	b.n	40343c <_vfprintf_r+0x1220>
  403744:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  403748:	f7ff b866 	b.w	402818 <_vfprintf_r+0x5fc>
  40374c:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  403750:	f7ff b9ac 	b.w	402aac <_vfprintf_r+0x890>
  403754:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  403758:	f7ff b934 	b.w	4029c4 <_vfprintf_r+0x7a8>
  40375c:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  403760:	f7ff b8b0 	b.w	4028c4 <_vfprintf_r+0x6a8>
  403764:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  403768:	f7ff b945 	b.w	4029f6 <_vfprintf_r+0x7da>
  40376c:	00406cbc 	.word	0x00406cbc
  403770:	00406cb8 	.word	0x00406cb8

00403774 <__sbprintf>:
  403774:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  403778:	460c      	mov	r4, r1
  40377a:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
  40377e:	8989      	ldrh	r1, [r1, #12]
  403780:	6e66      	ldr	r6, [r4, #100]	; 0x64
  403782:	89e5      	ldrh	r5, [r4, #14]
  403784:	9619      	str	r6, [sp, #100]	; 0x64
  403786:	f021 0102 	bic.w	r1, r1, #2
  40378a:	4606      	mov	r6, r0
  40378c:	69e0      	ldr	r0, [r4, #28]
  40378e:	f8ad 100c 	strh.w	r1, [sp, #12]
  403792:	4617      	mov	r7, r2
  403794:	f44f 6180 	mov.w	r1, #1024	; 0x400
  403798:	6a62      	ldr	r2, [r4, #36]	; 0x24
  40379a:	f8ad 500e 	strh.w	r5, [sp, #14]
  40379e:	4698      	mov	r8, r3
  4037a0:	ad1a      	add	r5, sp, #104	; 0x68
  4037a2:	2300      	movs	r3, #0
  4037a4:	9007      	str	r0, [sp, #28]
  4037a6:	a816      	add	r0, sp, #88	; 0x58
  4037a8:	9209      	str	r2, [sp, #36]	; 0x24
  4037aa:	9306      	str	r3, [sp, #24]
  4037ac:	9500      	str	r5, [sp, #0]
  4037ae:	9504      	str	r5, [sp, #16]
  4037b0:	9102      	str	r1, [sp, #8]
  4037b2:	9105      	str	r1, [sp, #20]
  4037b4:	f001 fc90 	bl	4050d8 <__retarget_lock_init_recursive>
  4037b8:	4643      	mov	r3, r8
  4037ba:	463a      	mov	r2, r7
  4037bc:	4669      	mov	r1, sp
  4037be:	4630      	mov	r0, r6
  4037c0:	f7fe fd2c 	bl	40221c <_vfprintf_r>
  4037c4:	1e05      	subs	r5, r0, #0
  4037c6:	db07      	blt.n	4037d8 <__sbprintf+0x64>
  4037c8:	4630      	mov	r0, r6
  4037ca:	4669      	mov	r1, sp
  4037cc:	f001 f8e6 	bl	40499c <_fflush_r>
  4037d0:	2800      	cmp	r0, #0
  4037d2:	bf18      	it	ne
  4037d4:	f04f 35ff 	movne.w	r5, #4294967295
  4037d8:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  4037dc:	065b      	lsls	r3, r3, #25
  4037de:	d503      	bpl.n	4037e8 <__sbprintf+0x74>
  4037e0:	89a3      	ldrh	r3, [r4, #12]
  4037e2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4037e6:	81a3      	strh	r3, [r4, #12]
  4037e8:	9816      	ldr	r0, [sp, #88]	; 0x58
  4037ea:	f001 fc77 	bl	4050dc <__retarget_lock_close_recursive>
  4037ee:	4628      	mov	r0, r5
  4037f0:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
  4037f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

004037f8 <__swsetup_r>:
  4037f8:	b538      	push	{r3, r4, r5, lr}
  4037fa:	4b30      	ldr	r3, [pc, #192]	; (4038bc <__swsetup_r+0xc4>)
  4037fc:	681b      	ldr	r3, [r3, #0]
  4037fe:	4605      	mov	r5, r0
  403800:	460c      	mov	r4, r1
  403802:	b113      	cbz	r3, 40380a <__swsetup_r+0x12>
  403804:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  403806:	2a00      	cmp	r2, #0
  403808:	d038      	beq.n	40387c <__swsetup_r+0x84>
  40380a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40380e:	b293      	uxth	r3, r2
  403810:	0718      	lsls	r0, r3, #28
  403812:	d50c      	bpl.n	40382e <__swsetup_r+0x36>
  403814:	6920      	ldr	r0, [r4, #16]
  403816:	b1a8      	cbz	r0, 403844 <__swsetup_r+0x4c>
  403818:	f013 0201 	ands.w	r2, r3, #1
  40381c:	d01e      	beq.n	40385c <__swsetup_r+0x64>
  40381e:	6963      	ldr	r3, [r4, #20]
  403820:	2200      	movs	r2, #0
  403822:	425b      	negs	r3, r3
  403824:	61a3      	str	r3, [r4, #24]
  403826:	60a2      	str	r2, [r4, #8]
  403828:	b1f0      	cbz	r0, 403868 <__swsetup_r+0x70>
  40382a:	2000      	movs	r0, #0
  40382c:	bd38      	pop	{r3, r4, r5, pc}
  40382e:	06d9      	lsls	r1, r3, #27
  403830:	d53c      	bpl.n	4038ac <__swsetup_r+0xb4>
  403832:	0758      	lsls	r0, r3, #29
  403834:	d426      	bmi.n	403884 <__swsetup_r+0x8c>
  403836:	6920      	ldr	r0, [r4, #16]
  403838:	f042 0308 	orr.w	r3, r2, #8
  40383c:	81a3      	strh	r3, [r4, #12]
  40383e:	b29b      	uxth	r3, r3
  403840:	2800      	cmp	r0, #0
  403842:	d1e9      	bne.n	403818 <__swsetup_r+0x20>
  403844:	f403 7220 	and.w	r2, r3, #640	; 0x280
  403848:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  40384c:	d0e4      	beq.n	403818 <__swsetup_r+0x20>
  40384e:	4628      	mov	r0, r5
  403850:	4621      	mov	r1, r4
  403852:	f001 fc77 	bl	405144 <__smakebuf_r>
  403856:	89a3      	ldrh	r3, [r4, #12]
  403858:	6920      	ldr	r0, [r4, #16]
  40385a:	e7dd      	b.n	403818 <__swsetup_r+0x20>
  40385c:	0799      	lsls	r1, r3, #30
  40385e:	bf58      	it	pl
  403860:	6962      	ldrpl	r2, [r4, #20]
  403862:	60a2      	str	r2, [r4, #8]
  403864:	2800      	cmp	r0, #0
  403866:	d1e0      	bne.n	40382a <__swsetup_r+0x32>
  403868:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40386c:	061a      	lsls	r2, r3, #24
  40386e:	d5dd      	bpl.n	40382c <__swsetup_r+0x34>
  403870:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  403874:	81a3      	strh	r3, [r4, #12]
  403876:	f04f 30ff 	mov.w	r0, #4294967295
  40387a:	bd38      	pop	{r3, r4, r5, pc}
  40387c:	4618      	mov	r0, r3
  40387e:	f001 f8e5 	bl	404a4c <__sinit>
  403882:	e7c2      	b.n	40380a <__swsetup_r+0x12>
  403884:	6b21      	ldr	r1, [r4, #48]	; 0x30
  403886:	b151      	cbz	r1, 40389e <__swsetup_r+0xa6>
  403888:	f104 0340 	add.w	r3, r4, #64	; 0x40
  40388c:	4299      	cmp	r1, r3
  40388e:	d004      	beq.n	40389a <__swsetup_r+0xa2>
  403890:	4628      	mov	r0, r5
  403892:	f001 f97d 	bl	404b90 <_free_r>
  403896:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40389a:	2300      	movs	r3, #0
  40389c:	6323      	str	r3, [r4, #48]	; 0x30
  40389e:	2300      	movs	r3, #0
  4038a0:	6920      	ldr	r0, [r4, #16]
  4038a2:	6063      	str	r3, [r4, #4]
  4038a4:	f022 0224 	bic.w	r2, r2, #36	; 0x24
  4038a8:	6020      	str	r0, [r4, #0]
  4038aa:	e7c5      	b.n	403838 <__swsetup_r+0x40>
  4038ac:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  4038b0:	2309      	movs	r3, #9
  4038b2:	602b      	str	r3, [r5, #0]
  4038b4:	f04f 30ff 	mov.w	r0, #4294967295
  4038b8:	81a2      	strh	r2, [r4, #12]
  4038ba:	bd38      	pop	{r3, r4, r5, pc}
  4038bc:	20400010 	.word	0x20400010

004038c0 <register_fini>:
  4038c0:	4b02      	ldr	r3, [pc, #8]	; (4038cc <register_fini+0xc>)
  4038c2:	b113      	cbz	r3, 4038ca <register_fini+0xa>
  4038c4:	4802      	ldr	r0, [pc, #8]	; (4038d0 <register_fini+0x10>)
  4038c6:	f000 b805 	b.w	4038d4 <atexit>
  4038ca:	4770      	bx	lr
  4038cc:	00000000 	.word	0x00000000
  4038d0:	00404abd 	.word	0x00404abd

004038d4 <atexit>:
  4038d4:	2300      	movs	r3, #0
  4038d6:	4601      	mov	r1, r0
  4038d8:	461a      	mov	r2, r3
  4038da:	4618      	mov	r0, r3
  4038dc:	f002 bdcc 	b.w	406478 <__register_exitproc>

004038e0 <quorem>:
  4038e0:	6902      	ldr	r2, [r0, #16]
  4038e2:	690b      	ldr	r3, [r1, #16]
  4038e4:	4293      	cmp	r3, r2
  4038e6:	f300 808d 	bgt.w	403a04 <quorem+0x124>
  4038ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4038ee:	f103 38ff 	add.w	r8, r3, #4294967295
  4038f2:	f101 0714 	add.w	r7, r1, #20
  4038f6:	f100 0b14 	add.w	fp, r0, #20
  4038fa:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  4038fe:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  403902:	ea4f 0488 	mov.w	r4, r8, lsl #2
  403906:	b083      	sub	sp, #12
  403908:	3201      	adds	r2, #1
  40390a:	fbb3 f9f2 	udiv	r9, r3, r2
  40390e:	eb0b 0304 	add.w	r3, fp, r4
  403912:	9400      	str	r4, [sp, #0]
  403914:	eb07 0a04 	add.w	sl, r7, r4
  403918:	9301      	str	r3, [sp, #4]
  40391a:	f1b9 0f00 	cmp.w	r9, #0
  40391e:	d039      	beq.n	403994 <quorem+0xb4>
  403920:	2500      	movs	r5, #0
  403922:	462e      	mov	r6, r5
  403924:	46bc      	mov	ip, r7
  403926:	46de      	mov	lr, fp
  403928:	f85c 4b04 	ldr.w	r4, [ip], #4
  40392c:	f8de 3000 	ldr.w	r3, [lr]
  403930:	b2a2      	uxth	r2, r4
  403932:	fb09 5502 	mla	r5, r9, r2, r5
  403936:	0c22      	lsrs	r2, r4, #16
  403938:	0c2c      	lsrs	r4, r5, #16
  40393a:	fb09 4202 	mla	r2, r9, r2, r4
  40393e:	b2ad      	uxth	r5, r5
  403940:	1b75      	subs	r5, r6, r5
  403942:	b296      	uxth	r6, r2
  403944:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  403948:	fa15 f383 	uxtah	r3, r5, r3
  40394c:	eb06 4623 	add.w	r6, r6, r3, asr #16
  403950:	b29b      	uxth	r3, r3
  403952:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  403956:	45e2      	cmp	sl, ip
  403958:	ea4f 4512 	mov.w	r5, r2, lsr #16
  40395c:	f84e 3b04 	str.w	r3, [lr], #4
  403960:	ea4f 4626 	mov.w	r6, r6, asr #16
  403964:	d2e0      	bcs.n	403928 <quorem+0x48>
  403966:	9b00      	ldr	r3, [sp, #0]
  403968:	f85b 3003 	ldr.w	r3, [fp, r3]
  40396c:	b993      	cbnz	r3, 403994 <quorem+0xb4>
  40396e:	9c01      	ldr	r4, [sp, #4]
  403970:	1f23      	subs	r3, r4, #4
  403972:	459b      	cmp	fp, r3
  403974:	d20c      	bcs.n	403990 <quorem+0xb0>
  403976:	f854 3c04 	ldr.w	r3, [r4, #-4]
  40397a:	b94b      	cbnz	r3, 403990 <quorem+0xb0>
  40397c:	f1a4 0308 	sub.w	r3, r4, #8
  403980:	e002      	b.n	403988 <quorem+0xa8>
  403982:	681a      	ldr	r2, [r3, #0]
  403984:	3b04      	subs	r3, #4
  403986:	b91a      	cbnz	r2, 403990 <quorem+0xb0>
  403988:	459b      	cmp	fp, r3
  40398a:	f108 38ff 	add.w	r8, r8, #4294967295
  40398e:	d3f8      	bcc.n	403982 <quorem+0xa2>
  403990:	f8c0 8010 	str.w	r8, [r0, #16]
  403994:	4604      	mov	r4, r0
  403996:	f002 f9b1 	bl	405cfc <__mcmp>
  40399a:	2800      	cmp	r0, #0
  40399c:	db2e      	blt.n	4039fc <quorem+0x11c>
  40399e:	f109 0901 	add.w	r9, r9, #1
  4039a2:	465d      	mov	r5, fp
  4039a4:	2300      	movs	r3, #0
  4039a6:	f857 1b04 	ldr.w	r1, [r7], #4
  4039aa:	6828      	ldr	r0, [r5, #0]
  4039ac:	b28a      	uxth	r2, r1
  4039ae:	1a9a      	subs	r2, r3, r2
  4039b0:	0c0b      	lsrs	r3, r1, #16
  4039b2:	fa12 f280 	uxtah	r2, r2, r0
  4039b6:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  4039ba:	eb03 4322 	add.w	r3, r3, r2, asr #16
  4039be:	b292      	uxth	r2, r2
  4039c0:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  4039c4:	45ba      	cmp	sl, r7
  4039c6:	f845 2b04 	str.w	r2, [r5], #4
  4039ca:	ea4f 4323 	mov.w	r3, r3, asr #16
  4039ce:	d2ea      	bcs.n	4039a6 <quorem+0xc6>
  4039d0:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  4039d4:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  4039d8:	b982      	cbnz	r2, 4039fc <quorem+0x11c>
  4039da:	1f1a      	subs	r2, r3, #4
  4039dc:	4593      	cmp	fp, r2
  4039de:	d20b      	bcs.n	4039f8 <quorem+0x118>
  4039e0:	f853 2c04 	ldr.w	r2, [r3, #-4]
  4039e4:	b942      	cbnz	r2, 4039f8 <quorem+0x118>
  4039e6:	3b08      	subs	r3, #8
  4039e8:	e002      	b.n	4039f0 <quorem+0x110>
  4039ea:	681a      	ldr	r2, [r3, #0]
  4039ec:	3b04      	subs	r3, #4
  4039ee:	b91a      	cbnz	r2, 4039f8 <quorem+0x118>
  4039f0:	459b      	cmp	fp, r3
  4039f2:	f108 38ff 	add.w	r8, r8, #4294967295
  4039f6:	d3f8      	bcc.n	4039ea <quorem+0x10a>
  4039f8:	f8c4 8010 	str.w	r8, [r4, #16]
  4039fc:	4648      	mov	r0, r9
  4039fe:	b003      	add	sp, #12
  403a00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403a04:	2000      	movs	r0, #0
  403a06:	4770      	bx	lr

00403a08 <_dtoa_r>:
  403a08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403a0c:	6c01      	ldr	r1, [r0, #64]	; 0x40
  403a0e:	b09b      	sub	sp, #108	; 0x6c
  403a10:	4604      	mov	r4, r0
  403a12:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  403a14:	4692      	mov	sl, r2
  403a16:	469b      	mov	fp, r3
  403a18:	b141      	cbz	r1, 403a2c <_dtoa_r+0x24>
  403a1a:	6c42      	ldr	r2, [r0, #68]	; 0x44
  403a1c:	604a      	str	r2, [r1, #4]
  403a1e:	2301      	movs	r3, #1
  403a20:	4093      	lsls	r3, r2
  403a22:	608b      	str	r3, [r1, #8]
  403a24:	f001 ff92 	bl	40594c <_Bfree>
  403a28:	2300      	movs	r3, #0
  403a2a:	6423      	str	r3, [r4, #64]	; 0x40
  403a2c:	f1bb 0f00 	cmp.w	fp, #0
  403a30:	465d      	mov	r5, fp
  403a32:	db35      	blt.n	403aa0 <_dtoa_r+0x98>
  403a34:	2300      	movs	r3, #0
  403a36:	6033      	str	r3, [r6, #0]
  403a38:	4b9d      	ldr	r3, [pc, #628]	; (403cb0 <_dtoa_r+0x2a8>)
  403a3a:	43ab      	bics	r3, r5
  403a3c:	d015      	beq.n	403a6a <_dtoa_r+0x62>
  403a3e:	4650      	mov	r0, sl
  403a40:	4659      	mov	r1, fp
  403a42:	2200      	movs	r2, #0
  403a44:	2300      	movs	r3, #0
  403a46:	f7fe f8ef 	bl	401c28 <__aeabi_dcmpeq>
  403a4a:	4680      	mov	r8, r0
  403a4c:	2800      	cmp	r0, #0
  403a4e:	d02d      	beq.n	403aac <_dtoa_r+0xa4>
  403a50:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403a52:	2301      	movs	r3, #1
  403a54:	6013      	str	r3, [r2, #0]
  403a56:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403a58:	2b00      	cmp	r3, #0
  403a5a:	f000 80bd 	beq.w	403bd8 <_dtoa_r+0x1d0>
  403a5e:	4895      	ldr	r0, [pc, #596]	; (403cb4 <_dtoa_r+0x2ac>)
  403a60:	6018      	str	r0, [r3, #0]
  403a62:	3801      	subs	r0, #1
  403a64:	b01b      	add	sp, #108	; 0x6c
  403a66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403a6a:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403a6c:	f242 730f 	movw	r3, #9999	; 0x270f
  403a70:	6013      	str	r3, [r2, #0]
  403a72:	f1ba 0f00 	cmp.w	sl, #0
  403a76:	d10d      	bne.n	403a94 <_dtoa_r+0x8c>
  403a78:	f3c5 0513 	ubfx	r5, r5, #0, #20
  403a7c:	b955      	cbnz	r5, 403a94 <_dtoa_r+0x8c>
  403a7e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403a80:	488d      	ldr	r0, [pc, #564]	; (403cb8 <_dtoa_r+0x2b0>)
  403a82:	2b00      	cmp	r3, #0
  403a84:	d0ee      	beq.n	403a64 <_dtoa_r+0x5c>
  403a86:	f100 0308 	add.w	r3, r0, #8
  403a8a:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  403a8c:	6013      	str	r3, [r2, #0]
  403a8e:	b01b      	add	sp, #108	; 0x6c
  403a90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403a94:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403a96:	4889      	ldr	r0, [pc, #548]	; (403cbc <_dtoa_r+0x2b4>)
  403a98:	2b00      	cmp	r3, #0
  403a9a:	d0e3      	beq.n	403a64 <_dtoa_r+0x5c>
  403a9c:	1cc3      	adds	r3, r0, #3
  403a9e:	e7f4      	b.n	403a8a <_dtoa_r+0x82>
  403aa0:	2301      	movs	r3, #1
  403aa2:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  403aa6:	6033      	str	r3, [r6, #0]
  403aa8:	46ab      	mov	fp, r5
  403aaa:	e7c5      	b.n	403a38 <_dtoa_r+0x30>
  403aac:	aa18      	add	r2, sp, #96	; 0x60
  403aae:	ab19      	add	r3, sp, #100	; 0x64
  403ab0:	9201      	str	r2, [sp, #4]
  403ab2:	9300      	str	r3, [sp, #0]
  403ab4:	4652      	mov	r2, sl
  403ab6:	465b      	mov	r3, fp
  403ab8:	4620      	mov	r0, r4
  403aba:	f002 f9bf 	bl	405e3c <__d2b>
  403abe:	0d2b      	lsrs	r3, r5, #20
  403ac0:	4681      	mov	r9, r0
  403ac2:	d071      	beq.n	403ba8 <_dtoa_r+0x1a0>
  403ac4:	f3cb 0213 	ubfx	r2, fp, #0, #20
  403ac8:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  403acc:	9f18      	ldr	r7, [sp, #96]	; 0x60
  403ace:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  403ad2:	4650      	mov	r0, sl
  403ad4:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  403ad8:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  403adc:	2200      	movs	r2, #0
  403ade:	4b78      	ldr	r3, [pc, #480]	; (403cc0 <_dtoa_r+0x2b8>)
  403ae0:	f7fd fc86 	bl	4013f0 <__aeabi_dsub>
  403ae4:	a36c      	add	r3, pc, #432	; (adr r3, 403c98 <_dtoa_r+0x290>)
  403ae6:	e9d3 2300 	ldrd	r2, r3, [r3]
  403aea:	f7fd fe35 	bl	401758 <__aeabi_dmul>
  403aee:	a36c      	add	r3, pc, #432	; (adr r3, 403ca0 <_dtoa_r+0x298>)
  403af0:	e9d3 2300 	ldrd	r2, r3, [r3]
  403af4:	f7fd fc7e 	bl	4013f4 <__adddf3>
  403af8:	e9cd 0102 	strd	r0, r1, [sp, #8]
  403afc:	4630      	mov	r0, r6
  403afe:	f7fd fdc5 	bl	40168c <__aeabi_i2d>
  403b02:	a369      	add	r3, pc, #420	; (adr r3, 403ca8 <_dtoa_r+0x2a0>)
  403b04:	e9d3 2300 	ldrd	r2, r3, [r3]
  403b08:	f7fd fe26 	bl	401758 <__aeabi_dmul>
  403b0c:	4602      	mov	r2, r0
  403b0e:	460b      	mov	r3, r1
  403b10:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  403b14:	f7fd fc6e 	bl	4013f4 <__adddf3>
  403b18:	e9cd 0104 	strd	r0, r1, [sp, #16]
  403b1c:	f002 fec8 	bl	4068b0 <__aeabi_d2iz>
  403b20:	2200      	movs	r2, #0
  403b22:	9002      	str	r0, [sp, #8]
  403b24:	2300      	movs	r3, #0
  403b26:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403b2a:	f7fe f887 	bl	401c3c <__aeabi_dcmplt>
  403b2e:	2800      	cmp	r0, #0
  403b30:	f040 8173 	bne.w	403e1a <_dtoa_r+0x412>
  403b34:	9d02      	ldr	r5, [sp, #8]
  403b36:	2d16      	cmp	r5, #22
  403b38:	f200 815d 	bhi.w	403df6 <_dtoa_r+0x3ee>
  403b3c:	4b61      	ldr	r3, [pc, #388]	; (403cc4 <_dtoa_r+0x2bc>)
  403b3e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  403b42:	e9d3 0100 	ldrd	r0, r1, [r3]
  403b46:	4652      	mov	r2, sl
  403b48:	465b      	mov	r3, fp
  403b4a:	f7fe f895 	bl	401c78 <__aeabi_dcmpgt>
  403b4e:	2800      	cmp	r0, #0
  403b50:	f000 81c5 	beq.w	403ede <_dtoa_r+0x4d6>
  403b54:	1e6b      	subs	r3, r5, #1
  403b56:	9302      	str	r3, [sp, #8]
  403b58:	2300      	movs	r3, #0
  403b5a:	930e      	str	r3, [sp, #56]	; 0x38
  403b5c:	1bbf      	subs	r7, r7, r6
  403b5e:	1e7b      	subs	r3, r7, #1
  403b60:	9306      	str	r3, [sp, #24]
  403b62:	f100 8154 	bmi.w	403e0e <_dtoa_r+0x406>
  403b66:	2300      	movs	r3, #0
  403b68:	9308      	str	r3, [sp, #32]
  403b6a:	9b02      	ldr	r3, [sp, #8]
  403b6c:	2b00      	cmp	r3, #0
  403b6e:	f2c0 8145 	blt.w	403dfc <_dtoa_r+0x3f4>
  403b72:	9a06      	ldr	r2, [sp, #24]
  403b74:	930d      	str	r3, [sp, #52]	; 0x34
  403b76:	4611      	mov	r1, r2
  403b78:	4419      	add	r1, r3
  403b7a:	2300      	movs	r3, #0
  403b7c:	9106      	str	r1, [sp, #24]
  403b7e:	930c      	str	r3, [sp, #48]	; 0x30
  403b80:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403b82:	2b09      	cmp	r3, #9
  403b84:	d82a      	bhi.n	403bdc <_dtoa_r+0x1d4>
  403b86:	2b05      	cmp	r3, #5
  403b88:	f340 865b 	ble.w	404842 <_dtoa_r+0xe3a>
  403b8c:	3b04      	subs	r3, #4
  403b8e:	9324      	str	r3, [sp, #144]	; 0x90
  403b90:	2500      	movs	r5, #0
  403b92:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403b94:	3b02      	subs	r3, #2
  403b96:	2b03      	cmp	r3, #3
  403b98:	f200 8642 	bhi.w	404820 <_dtoa_r+0xe18>
  403b9c:	e8df f013 	tbh	[pc, r3, lsl #1]
  403ba0:	02c903d4 	.word	0x02c903d4
  403ba4:	046103df 	.word	0x046103df
  403ba8:	9f18      	ldr	r7, [sp, #96]	; 0x60
  403baa:	9e19      	ldr	r6, [sp, #100]	; 0x64
  403bac:	443e      	add	r6, r7
  403bae:	f206 4332 	addw	r3, r6, #1074	; 0x432
  403bb2:	2b20      	cmp	r3, #32
  403bb4:	f340 818e 	ble.w	403ed4 <_dtoa_r+0x4cc>
  403bb8:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  403bbc:	f206 4012 	addw	r0, r6, #1042	; 0x412
  403bc0:	409d      	lsls	r5, r3
  403bc2:	fa2a f000 	lsr.w	r0, sl, r0
  403bc6:	4328      	orrs	r0, r5
  403bc8:	f7fd fd50 	bl	40166c <__aeabi_ui2d>
  403bcc:	2301      	movs	r3, #1
  403bce:	3e01      	subs	r6, #1
  403bd0:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  403bd4:	9314      	str	r3, [sp, #80]	; 0x50
  403bd6:	e781      	b.n	403adc <_dtoa_r+0xd4>
  403bd8:	483b      	ldr	r0, [pc, #236]	; (403cc8 <_dtoa_r+0x2c0>)
  403bda:	e743      	b.n	403a64 <_dtoa_r+0x5c>
  403bdc:	2100      	movs	r1, #0
  403bde:	6461      	str	r1, [r4, #68]	; 0x44
  403be0:	4620      	mov	r0, r4
  403be2:	9125      	str	r1, [sp, #148]	; 0x94
  403be4:	f001 fe8c 	bl	405900 <_Balloc>
  403be8:	f04f 33ff 	mov.w	r3, #4294967295
  403bec:	930a      	str	r3, [sp, #40]	; 0x28
  403bee:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403bf0:	930f      	str	r3, [sp, #60]	; 0x3c
  403bf2:	2301      	movs	r3, #1
  403bf4:	9004      	str	r0, [sp, #16]
  403bf6:	6420      	str	r0, [r4, #64]	; 0x40
  403bf8:	9224      	str	r2, [sp, #144]	; 0x90
  403bfa:	930b      	str	r3, [sp, #44]	; 0x2c
  403bfc:	9b19      	ldr	r3, [sp, #100]	; 0x64
  403bfe:	2b00      	cmp	r3, #0
  403c00:	f2c0 80d9 	blt.w	403db6 <_dtoa_r+0x3ae>
  403c04:	9a02      	ldr	r2, [sp, #8]
  403c06:	2a0e      	cmp	r2, #14
  403c08:	f300 80d5 	bgt.w	403db6 <_dtoa_r+0x3ae>
  403c0c:	4b2d      	ldr	r3, [pc, #180]	; (403cc4 <_dtoa_r+0x2bc>)
  403c0e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403c12:	e9d3 2300 	ldrd	r2, r3, [r3]
  403c16:	e9cd 2308 	strd	r2, r3, [sp, #32]
  403c1a:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403c1c:	2b00      	cmp	r3, #0
  403c1e:	f2c0 83ba 	blt.w	404396 <_dtoa_r+0x98e>
  403c22:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  403c26:	4650      	mov	r0, sl
  403c28:	462a      	mov	r2, r5
  403c2a:	4633      	mov	r3, r6
  403c2c:	4659      	mov	r1, fp
  403c2e:	f7fd febd 	bl	4019ac <__aeabi_ddiv>
  403c32:	f002 fe3d 	bl	4068b0 <__aeabi_d2iz>
  403c36:	4680      	mov	r8, r0
  403c38:	f7fd fd28 	bl	40168c <__aeabi_i2d>
  403c3c:	462a      	mov	r2, r5
  403c3e:	4633      	mov	r3, r6
  403c40:	f7fd fd8a 	bl	401758 <__aeabi_dmul>
  403c44:	460b      	mov	r3, r1
  403c46:	4602      	mov	r2, r0
  403c48:	4659      	mov	r1, fp
  403c4a:	4650      	mov	r0, sl
  403c4c:	f7fd fbd0 	bl	4013f0 <__aeabi_dsub>
  403c50:	9d04      	ldr	r5, [sp, #16]
  403c52:	f108 0330 	add.w	r3, r8, #48	; 0x30
  403c56:	702b      	strb	r3, [r5, #0]
  403c58:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403c5a:	2b01      	cmp	r3, #1
  403c5c:	4606      	mov	r6, r0
  403c5e:	460f      	mov	r7, r1
  403c60:	f105 0501 	add.w	r5, r5, #1
  403c64:	d068      	beq.n	403d38 <_dtoa_r+0x330>
  403c66:	2200      	movs	r2, #0
  403c68:	4b18      	ldr	r3, [pc, #96]	; (403ccc <_dtoa_r+0x2c4>)
  403c6a:	f7fd fd75 	bl	401758 <__aeabi_dmul>
  403c6e:	2200      	movs	r2, #0
  403c70:	2300      	movs	r3, #0
  403c72:	4606      	mov	r6, r0
  403c74:	460f      	mov	r7, r1
  403c76:	f7fd ffd7 	bl	401c28 <__aeabi_dcmpeq>
  403c7a:	2800      	cmp	r0, #0
  403c7c:	f040 8088 	bne.w	403d90 <_dtoa_r+0x388>
  403c80:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  403c84:	f04f 0a00 	mov.w	sl, #0
  403c88:	f8df b040 	ldr.w	fp, [pc, #64]	; 403ccc <_dtoa_r+0x2c4>
  403c8c:	940c      	str	r4, [sp, #48]	; 0x30
  403c8e:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  403c92:	e028      	b.n	403ce6 <_dtoa_r+0x2de>
  403c94:	f3af 8000 	nop.w
  403c98:	636f4361 	.word	0x636f4361
  403c9c:	3fd287a7 	.word	0x3fd287a7
  403ca0:	8b60c8b3 	.word	0x8b60c8b3
  403ca4:	3fc68a28 	.word	0x3fc68a28
  403ca8:	509f79fb 	.word	0x509f79fb
  403cac:	3fd34413 	.word	0x3fd34413
  403cb0:	7ff00000 	.word	0x7ff00000
  403cb4:	00406cf1 	.word	0x00406cf1
  403cb8:	00406d14 	.word	0x00406d14
  403cbc:	00406d20 	.word	0x00406d20
  403cc0:	3ff80000 	.word	0x3ff80000
  403cc4:	00406d60 	.word	0x00406d60
  403cc8:	00406cf0 	.word	0x00406cf0
  403ccc:	40240000 	.word	0x40240000
  403cd0:	f7fd fd42 	bl	401758 <__aeabi_dmul>
  403cd4:	2200      	movs	r2, #0
  403cd6:	2300      	movs	r3, #0
  403cd8:	4606      	mov	r6, r0
  403cda:	460f      	mov	r7, r1
  403cdc:	f7fd ffa4 	bl	401c28 <__aeabi_dcmpeq>
  403ce0:	2800      	cmp	r0, #0
  403ce2:	f040 83c1 	bne.w	404468 <_dtoa_r+0xa60>
  403ce6:	4642      	mov	r2, r8
  403ce8:	464b      	mov	r3, r9
  403cea:	4630      	mov	r0, r6
  403cec:	4639      	mov	r1, r7
  403cee:	f7fd fe5d 	bl	4019ac <__aeabi_ddiv>
  403cf2:	f002 fddd 	bl	4068b0 <__aeabi_d2iz>
  403cf6:	4604      	mov	r4, r0
  403cf8:	f7fd fcc8 	bl	40168c <__aeabi_i2d>
  403cfc:	4642      	mov	r2, r8
  403cfe:	464b      	mov	r3, r9
  403d00:	f7fd fd2a 	bl	401758 <__aeabi_dmul>
  403d04:	4602      	mov	r2, r0
  403d06:	460b      	mov	r3, r1
  403d08:	4630      	mov	r0, r6
  403d0a:	4639      	mov	r1, r7
  403d0c:	f7fd fb70 	bl	4013f0 <__aeabi_dsub>
  403d10:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  403d14:	9e04      	ldr	r6, [sp, #16]
  403d16:	f805 eb01 	strb.w	lr, [r5], #1
  403d1a:	eba5 0e06 	sub.w	lr, r5, r6
  403d1e:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  403d20:	45b6      	cmp	lr, r6
  403d22:	e9cd 0106 	strd	r0, r1, [sp, #24]
  403d26:	4652      	mov	r2, sl
  403d28:	465b      	mov	r3, fp
  403d2a:	d1d1      	bne.n	403cd0 <_dtoa_r+0x2c8>
  403d2c:	46a0      	mov	r8, r4
  403d2e:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403d32:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403d34:	4606      	mov	r6, r0
  403d36:	460f      	mov	r7, r1
  403d38:	4632      	mov	r2, r6
  403d3a:	463b      	mov	r3, r7
  403d3c:	4630      	mov	r0, r6
  403d3e:	4639      	mov	r1, r7
  403d40:	f7fd fb58 	bl	4013f4 <__adddf3>
  403d44:	4606      	mov	r6, r0
  403d46:	460f      	mov	r7, r1
  403d48:	4602      	mov	r2, r0
  403d4a:	460b      	mov	r3, r1
  403d4c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403d50:	f7fd ff74 	bl	401c3c <__aeabi_dcmplt>
  403d54:	b948      	cbnz	r0, 403d6a <_dtoa_r+0x362>
  403d56:	4632      	mov	r2, r6
  403d58:	463b      	mov	r3, r7
  403d5a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403d5e:	f7fd ff63 	bl	401c28 <__aeabi_dcmpeq>
  403d62:	b1a8      	cbz	r0, 403d90 <_dtoa_r+0x388>
  403d64:	f018 0f01 	tst.w	r8, #1
  403d68:	d012      	beq.n	403d90 <_dtoa_r+0x388>
  403d6a:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403d6e:	9a04      	ldr	r2, [sp, #16]
  403d70:	1e6b      	subs	r3, r5, #1
  403d72:	e004      	b.n	403d7e <_dtoa_r+0x376>
  403d74:	429a      	cmp	r2, r3
  403d76:	f000 8401 	beq.w	40457c <_dtoa_r+0xb74>
  403d7a:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  403d7e:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  403d82:	f103 0501 	add.w	r5, r3, #1
  403d86:	d0f5      	beq.n	403d74 <_dtoa_r+0x36c>
  403d88:	f108 0801 	add.w	r8, r8, #1
  403d8c:	f883 8000 	strb.w	r8, [r3]
  403d90:	4649      	mov	r1, r9
  403d92:	4620      	mov	r0, r4
  403d94:	f001 fdda 	bl	40594c <_Bfree>
  403d98:	2200      	movs	r2, #0
  403d9a:	9b02      	ldr	r3, [sp, #8]
  403d9c:	702a      	strb	r2, [r5, #0]
  403d9e:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403da0:	3301      	adds	r3, #1
  403da2:	6013      	str	r3, [r2, #0]
  403da4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403da6:	2b00      	cmp	r3, #0
  403da8:	f000 839e 	beq.w	4044e8 <_dtoa_r+0xae0>
  403dac:	9804      	ldr	r0, [sp, #16]
  403dae:	601d      	str	r5, [r3, #0]
  403db0:	b01b      	add	sp, #108	; 0x6c
  403db2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403db6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403db8:	2a00      	cmp	r2, #0
  403dba:	d03e      	beq.n	403e3a <_dtoa_r+0x432>
  403dbc:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403dbe:	2a01      	cmp	r2, #1
  403dc0:	f340 8311 	ble.w	4043e6 <_dtoa_r+0x9de>
  403dc4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403dc6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403dc8:	1e5f      	subs	r7, r3, #1
  403dca:	42ba      	cmp	r2, r7
  403dcc:	f2c0 838f 	blt.w	4044ee <_dtoa_r+0xae6>
  403dd0:	1bd7      	subs	r7, r2, r7
  403dd2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403dd4:	2b00      	cmp	r3, #0
  403dd6:	f2c0 848b 	blt.w	4046f0 <_dtoa_r+0xce8>
  403dda:	9d08      	ldr	r5, [sp, #32]
  403ddc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403dde:	9a08      	ldr	r2, [sp, #32]
  403de0:	441a      	add	r2, r3
  403de2:	9208      	str	r2, [sp, #32]
  403de4:	9a06      	ldr	r2, [sp, #24]
  403de6:	2101      	movs	r1, #1
  403de8:	441a      	add	r2, r3
  403dea:	4620      	mov	r0, r4
  403dec:	9206      	str	r2, [sp, #24]
  403dee:	f001 fe47 	bl	405a80 <__i2b>
  403df2:	4606      	mov	r6, r0
  403df4:	e024      	b.n	403e40 <_dtoa_r+0x438>
  403df6:	2301      	movs	r3, #1
  403df8:	930e      	str	r3, [sp, #56]	; 0x38
  403dfa:	e6af      	b.n	403b5c <_dtoa_r+0x154>
  403dfc:	9a08      	ldr	r2, [sp, #32]
  403dfe:	9b02      	ldr	r3, [sp, #8]
  403e00:	1ad2      	subs	r2, r2, r3
  403e02:	425b      	negs	r3, r3
  403e04:	930c      	str	r3, [sp, #48]	; 0x30
  403e06:	2300      	movs	r3, #0
  403e08:	9208      	str	r2, [sp, #32]
  403e0a:	930d      	str	r3, [sp, #52]	; 0x34
  403e0c:	e6b8      	b.n	403b80 <_dtoa_r+0x178>
  403e0e:	f1c7 0301 	rsb	r3, r7, #1
  403e12:	9308      	str	r3, [sp, #32]
  403e14:	2300      	movs	r3, #0
  403e16:	9306      	str	r3, [sp, #24]
  403e18:	e6a7      	b.n	403b6a <_dtoa_r+0x162>
  403e1a:	9d02      	ldr	r5, [sp, #8]
  403e1c:	4628      	mov	r0, r5
  403e1e:	f7fd fc35 	bl	40168c <__aeabi_i2d>
  403e22:	4602      	mov	r2, r0
  403e24:	460b      	mov	r3, r1
  403e26:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403e2a:	f7fd fefd 	bl	401c28 <__aeabi_dcmpeq>
  403e2e:	2800      	cmp	r0, #0
  403e30:	f47f ae80 	bne.w	403b34 <_dtoa_r+0x12c>
  403e34:	1e6b      	subs	r3, r5, #1
  403e36:	9302      	str	r3, [sp, #8]
  403e38:	e67c      	b.n	403b34 <_dtoa_r+0x12c>
  403e3a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403e3c:	9d08      	ldr	r5, [sp, #32]
  403e3e:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  403e40:	2d00      	cmp	r5, #0
  403e42:	dd0c      	ble.n	403e5e <_dtoa_r+0x456>
  403e44:	9906      	ldr	r1, [sp, #24]
  403e46:	2900      	cmp	r1, #0
  403e48:	460b      	mov	r3, r1
  403e4a:	dd08      	ble.n	403e5e <_dtoa_r+0x456>
  403e4c:	42a9      	cmp	r1, r5
  403e4e:	9a08      	ldr	r2, [sp, #32]
  403e50:	bfa8      	it	ge
  403e52:	462b      	movge	r3, r5
  403e54:	1ad2      	subs	r2, r2, r3
  403e56:	1aed      	subs	r5, r5, r3
  403e58:	1acb      	subs	r3, r1, r3
  403e5a:	9208      	str	r2, [sp, #32]
  403e5c:	9306      	str	r3, [sp, #24]
  403e5e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403e60:	b1d3      	cbz	r3, 403e98 <_dtoa_r+0x490>
  403e62:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403e64:	2b00      	cmp	r3, #0
  403e66:	f000 82b7 	beq.w	4043d8 <_dtoa_r+0x9d0>
  403e6a:	2f00      	cmp	r7, #0
  403e6c:	dd10      	ble.n	403e90 <_dtoa_r+0x488>
  403e6e:	4631      	mov	r1, r6
  403e70:	463a      	mov	r2, r7
  403e72:	4620      	mov	r0, r4
  403e74:	f001 fea0 	bl	405bb8 <__pow5mult>
  403e78:	464a      	mov	r2, r9
  403e7a:	4601      	mov	r1, r0
  403e7c:	4606      	mov	r6, r0
  403e7e:	4620      	mov	r0, r4
  403e80:	f001 fe08 	bl	405a94 <__multiply>
  403e84:	4649      	mov	r1, r9
  403e86:	4680      	mov	r8, r0
  403e88:	4620      	mov	r0, r4
  403e8a:	f001 fd5f 	bl	40594c <_Bfree>
  403e8e:	46c1      	mov	r9, r8
  403e90:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403e92:	1bda      	subs	r2, r3, r7
  403e94:	f040 82a1 	bne.w	4043da <_dtoa_r+0x9d2>
  403e98:	2101      	movs	r1, #1
  403e9a:	4620      	mov	r0, r4
  403e9c:	f001 fdf0 	bl	405a80 <__i2b>
  403ea0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403ea2:	2b00      	cmp	r3, #0
  403ea4:	4680      	mov	r8, r0
  403ea6:	dd1c      	ble.n	403ee2 <_dtoa_r+0x4da>
  403ea8:	4601      	mov	r1, r0
  403eaa:	461a      	mov	r2, r3
  403eac:	4620      	mov	r0, r4
  403eae:	f001 fe83 	bl	405bb8 <__pow5mult>
  403eb2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403eb4:	2b01      	cmp	r3, #1
  403eb6:	4680      	mov	r8, r0
  403eb8:	f340 8254 	ble.w	404364 <_dtoa_r+0x95c>
  403ebc:	2300      	movs	r3, #0
  403ebe:	930c      	str	r3, [sp, #48]	; 0x30
  403ec0:	f8d8 3010 	ldr.w	r3, [r8, #16]
  403ec4:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  403ec8:	6918      	ldr	r0, [r3, #16]
  403eca:	f001 fd89 	bl	4059e0 <__hi0bits>
  403ece:	f1c0 0020 	rsb	r0, r0, #32
  403ed2:	e010      	b.n	403ef6 <_dtoa_r+0x4ee>
  403ed4:	f1c3 0520 	rsb	r5, r3, #32
  403ed8:	fa0a f005 	lsl.w	r0, sl, r5
  403edc:	e674      	b.n	403bc8 <_dtoa_r+0x1c0>
  403ede:	900e      	str	r0, [sp, #56]	; 0x38
  403ee0:	e63c      	b.n	403b5c <_dtoa_r+0x154>
  403ee2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403ee4:	2b01      	cmp	r3, #1
  403ee6:	f340 8287 	ble.w	4043f8 <_dtoa_r+0x9f0>
  403eea:	2300      	movs	r3, #0
  403eec:	930c      	str	r3, [sp, #48]	; 0x30
  403eee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403ef0:	2001      	movs	r0, #1
  403ef2:	2b00      	cmp	r3, #0
  403ef4:	d1e4      	bne.n	403ec0 <_dtoa_r+0x4b8>
  403ef6:	9a06      	ldr	r2, [sp, #24]
  403ef8:	4410      	add	r0, r2
  403efa:	f010 001f 	ands.w	r0, r0, #31
  403efe:	f000 80a1 	beq.w	404044 <_dtoa_r+0x63c>
  403f02:	f1c0 0320 	rsb	r3, r0, #32
  403f06:	2b04      	cmp	r3, #4
  403f08:	f340 849e 	ble.w	404848 <_dtoa_r+0xe40>
  403f0c:	9b08      	ldr	r3, [sp, #32]
  403f0e:	f1c0 001c 	rsb	r0, r0, #28
  403f12:	4403      	add	r3, r0
  403f14:	9308      	str	r3, [sp, #32]
  403f16:	4613      	mov	r3, r2
  403f18:	4403      	add	r3, r0
  403f1a:	4405      	add	r5, r0
  403f1c:	9306      	str	r3, [sp, #24]
  403f1e:	9b08      	ldr	r3, [sp, #32]
  403f20:	2b00      	cmp	r3, #0
  403f22:	dd05      	ble.n	403f30 <_dtoa_r+0x528>
  403f24:	4649      	mov	r1, r9
  403f26:	461a      	mov	r2, r3
  403f28:	4620      	mov	r0, r4
  403f2a:	f001 fe95 	bl	405c58 <__lshift>
  403f2e:	4681      	mov	r9, r0
  403f30:	9b06      	ldr	r3, [sp, #24]
  403f32:	2b00      	cmp	r3, #0
  403f34:	dd05      	ble.n	403f42 <_dtoa_r+0x53a>
  403f36:	4641      	mov	r1, r8
  403f38:	461a      	mov	r2, r3
  403f3a:	4620      	mov	r0, r4
  403f3c:	f001 fe8c 	bl	405c58 <__lshift>
  403f40:	4680      	mov	r8, r0
  403f42:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403f44:	2b00      	cmp	r3, #0
  403f46:	f040 8086 	bne.w	404056 <_dtoa_r+0x64e>
  403f4a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403f4c:	2b00      	cmp	r3, #0
  403f4e:	f340 8266 	ble.w	40441e <_dtoa_r+0xa16>
  403f52:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403f54:	2b00      	cmp	r3, #0
  403f56:	f000 8098 	beq.w	40408a <_dtoa_r+0x682>
  403f5a:	2d00      	cmp	r5, #0
  403f5c:	dd05      	ble.n	403f6a <_dtoa_r+0x562>
  403f5e:	4631      	mov	r1, r6
  403f60:	462a      	mov	r2, r5
  403f62:	4620      	mov	r0, r4
  403f64:	f001 fe78 	bl	405c58 <__lshift>
  403f68:	4606      	mov	r6, r0
  403f6a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403f6c:	2b00      	cmp	r3, #0
  403f6e:	f040 8337 	bne.w	4045e0 <_dtoa_r+0xbd8>
  403f72:	9606      	str	r6, [sp, #24]
  403f74:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403f76:	9a04      	ldr	r2, [sp, #16]
  403f78:	f8dd b018 	ldr.w	fp, [sp, #24]
  403f7c:	3b01      	subs	r3, #1
  403f7e:	18d3      	adds	r3, r2, r3
  403f80:	930b      	str	r3, [sp, #44]	; 0x2c
  403f82:	f00a 0301 	and.w	r3, sl, #1
  403f86:	930c      	str	r3, [sp, #48]	; 0x30
  403f88:	4617      	mov	r7, r2
  403f8a:	46c2      	mov	sl, r8
  403f8c:	4651      	mov	r1, sl
  403f8e:	4648      	mov	r0, r9
  403f90:	f7ff fca6 	bl	4038e0 <quorem>
  403f94:	4631      	mov	r1, r6
  403f96:	4605      	mov	r5, r0
  403f98:	4648      	mov	r0, r9
  403f9a:	f001 feaf 	bl	405cfc <__mcmp>
  403f9e:	465a      	mov	r2, fp
  403fa0:	900a      	str	r0, [sp, #40]	; 0x28
  403fa2:	4651      	mov	r1, sl
  403fa4:	4620      	mov	r0, r4
  403fa6:	f001 fec5 	bl	405d34 <__mdiff>
  403faa:	68c2      	ldr	r2, [r0, #12]
  403fac:	4680      	mov	r8, r0
  403fae:	f105 0330 	add.w	r3, r5, #48	; 0x30
  403fb2:	2a00      	cmp	r2, #0
  403fb4:	f040 822b 	bne.w	40440e <_dtoa_r+0xa06>
  403fb8:	4601      	mov	r1, r0
  403fba:	4648      	mov	r0, r9
  403fbc:	9308      	str	r3, [sp, #32]
  403fbe:	f001 fe9d 	bl	405cfc <__mcmp>
  403fc2:	4641      	mov	r1, r8
  403fc4:	9006      	str	r0, [sp, #24]
  403fc6:	4620      	mov	r0, r4
  403fc8:	f001 fcc0 	bl	40594c <_Bfree>
  403fcc:	9a06      	ldr	r2, [sp, #24]
  403fce:	9b08      	ldr	r3, [sp, #32]
  403fd0:	b932      	cbnz	r2, 403fe0 <_dtoa_r+0x5d8>
  403fd2:	9924      	ldr	r1, [sp, #144]	; 0x90
  403fd4:	b921      	cbnz	r1, 403fe0 <_dtoa_r+0x5d8>
  403fd6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403fd8:	2a00      	cmp	r2, #0
  403fda:	f000 83ef 	beq.w	4047bc <_dtoa_r+0xdb4>
  403fde:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403fe0:	990a      	ldr	r1, [sp, #40]	; 0x28
  403fe2:	2900      	cmp	r1, #0
  403fe4:	f2c0 829f 	blt.w	404526 <_dtoa_r+0xb1e>
  403fe8:	d105      	bne.n	403ff6 <_dtoa_r+0x5ee>
  403fea:	9924      	ldr	r1, [sp, #144]	; 0x90
  403fec:	b919      	cbnz	r1, 403ff6 <_dtoa_r+0x5ee>
  403fee:	990c      	ldr	r1, [sp, #48]	; 0x30
  403ff0:	2900      	cmp	r1, #0
  403ff2:	f000 8298 	beq.w	404526 <_dtoa_r+0xb1e>
  403ff6:	2a00      	cmp	r2, #0
  403ff8:	f300 8306 	bgt.w	404608 <_dtoa_r+0xc00>
  403ffc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403ffe:	703b      	strb	r3, [r7, #0]
  404000:	f107 0801 	add.w	r8, r7, #1
  404004:	4297      	cmp	r7, r2
  404006:	4645      	mov	r5, r8
  404008:	f000 830c 	beq.w	404624 <_dtoa_r+0xc1c>
  40400c:	4649      	mov	r1, r9
  40400e:	2300      	movs	r3, #0
  404010:	220a      	movs	r2, #10
  404012:	4620      	mov	r0, r4
  404014:	f001 fca4 	bl	405960 <__multadd>
  404018:	455e      	cmp	r6, fp
  40401a:	4681      	mov	r9, r0
  40401c:	4631      	mov	r1, r6
  40401e:	f04f 0300 	mov.w	r3, #0
  404022:	f04f 020a 	mov.w	r2, #10
  404026:	4620      	mov	r0, r4
  404028:	f000 81eb 	beq.w	404402 <_dtoa_r+0x9fa>
  40402c:	f001 fc98 	bl	405960 <__multadd>
  404030:	4659      	mov	r1, fp
  404032:	4606      	mov	r6, r0
  404034:	2300      	movs	r3, #0
  404036:	220a      	movs	r2, #10
  404038:	4620      	mov	r0, r4
  40403a:	f001 fc91 	bl	405960 <__multadd>
  40403e:	4647      	mov	r7, r8
  404040:	4683      	mov	fp, r0
  404042:	e7a3      	b.n	403f8c <_dtoa_r+0x584>
  404044:	201c      	movs	r0, #28
  404046:	9b08      	ldr	r3, [sp, #32]
  404048:	4403      	add	r3, r0
  40404a:	9308      	str	r3, [sp, #32]
  40404c:	9b06      	ldr	r3, [sp, #24]
  40404e:	4403      	add	r3, r0
  404050:	4405      	add	r5, r0
  404052:	9306      	str	r3, [sp, #24]
  404054:	e763      	b.n	403f1e <_dtoa_r+0x516>
  404056:	4641      	mov	r1, r8
  404058:	4648      	mov	r0, r9
  40405a:	f001 fe4f 	bl	405cfc <__mcmp>
  40405e:	2800      	cmp	r0, #0
  404060:	f6bf af73 	bge.w	403f4a <_dtoa_r+0x542>
  404064:	9f02      	ldr	r7, [sp, #8]
  404066:	4649      	mov	r1, r9
  404068:	2300      	movs	r3, #0
  40406a:	220a      	movs	r2, #10
  40406c:	4620      	mov	r0, r4
  40406e:	3f01      	subs	r7, #1
  404070:	9702      	str	r7, [sp, #8]
  404072:	f001 fc75 	bl	405960 <__multadd>
  404076:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  404078:	4681      	mov	r9, r0
  40407a:	2b00      	cmp	r3, #0
  40407c:	f040 83b6 	bne.w	4047ec <_dtoa_r+0xde4>
  404080:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404082:	2b00      	cmp	r3, #0
  404084:	f340 83bf 	ble.w	404806 <_dtoa_r+0xdfe>
  404088:	930a      	str	r3, [sp, #40]	; 0x28
  40408a:	f8dd b010 	ldr.w	fp, [sp, #16]
  40408e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  404090:	465d      	mov	r5, fp
  404092:	e002      	b.n	40409a <_dtoa_r+0x692>
  404094:	f001 fc64 	bl	405960 <__multadd>
  404098:	4681      	mov	r9, r0
  40409a:	4641      	mov	r1, r8
  40409c:	4648      	mov	r0, r9
  40409e:	f7ff fc1f 	bl	4038e0 <quorem>
  4040a2:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  4040a6:	f805 ab01 	strb.w	sl, [r5], #1
  4040aa:	eba5 030b 	sub.w	r3, r5, fp
  4040ae:	42bb      	cmp	r3, r7
  4040b0:	f04f 020a 	mov.w	r2, #10
  4040b4:	f04f 0300 	mov.w	r3, #0
  4040b8:	4649      	mov	r1, r9
  4040ba:	4620      	mov	r0, r4
  4040bc:	dbea      	blt.n	404094 <_dtoa_r+0x68c>
  4040be:	9b04      	ldr	r3, [sp, #16]
  4040c0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4040c2:	2a01      	cmp	r2, #1
  4040c4:	bfac      	ite	ge
  4040c6:	189b      	addge	r3, r3, r2
  4040c8:	3301      	addlt	r3, #1
  4040ca:	461d      	mov	r5, r3
  4040cc:	f04f 0b00 	mov.w	fp, #0
  4040d0:	4649      	mov	r1, r9
  4040d2:	2201      	movs	r2, #1
  4040d4:	4620      	mov	r0, r4
  4040d6:	f001 fdbf 	bl	405c58 <__lshift>
  4040da:	4641      	mov	r1, r8
  4040dc:	4681      	mov	r9, r0
  4040de:	f001 fe0d 	bl	405cfc <__mcmp>
  4040e2:	2800      	cmp	r0, #0
  4040e4:	f340 823d 	ble.w	404562 <_dtoa_r+0xb5a>
  4040e8:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  4040ec:	9904      	ldr	r1, [sp, #16]
  4040ee:	1e6b      	subs	r3, r5, #1
  4040f0:	e004      	b.n	4040fc <_dtoa_r+0x6f4>
  4040f2:	428b      	cmp	r3, r1
  4040f4:	f000 81ae 	beq.w	404454 <_dtoa_r+0xa4c>
  4040f8:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  4040fc:	2a39      	cmp	r2, #57	; 0x39
  4040fe:	f103 0501 	add.w	r5, r3, #1
  404102:	d0f6      	beq.n	4040f2 <_dtoa_r+0x6ea>
  404104:	3201      	adds	r2, #1
  404106:	701a      	strb	r2, [r3, #0]
  404108:	4641      	mov	r1, r8
  40410a:	4620      	mov	r0, r4
  40410c:	f001 fc1e 	bl	40594c <_Bfree>
  404110:	2e00      	cmp	r6, #0
  404112:	f43f ae3d 	beq.w	403d90 <_dtoa_r+0x388>
  404116:	f1bb 0f00 	cmp.w	fp, #0
  40411a:	d005      	beq.n	404128 <_dtoa_r+0x720>
  40411c:	45b3      	cmp	fp, r6
  40411e:	d003      	beq.n	404128 <_dtoa_r+0x720>
  404120:	4659      	mov	r1, fp
  404122:	4620      	mov	r0, r4
  404124:	f001 fc12 	bl	40594c <_Bfree>
  404128:	4631      	mov	r1, r6
  40412a:	4620      	mov	r0, r4
  40412c:	f001 fc0e 	bl	40594c <_Bfree>
  404130:	e62e      	b.n	403d90 <_dtoa_r+0x388>
  404132:	2300      	movs	r3, #0
  404134:	930b      	str	r3, [sp, #44]	; 0x2c
  404136:	9b02      	ldr	r3, [sp, #8]
  404138:	9a25      	ldr	r2, [sp, #148]	; 0x94
  40413a:	4413      	add	r3, r2
  40413c:	930f      	str	r3, [sp, #60]	; 0x3c
  40413e:	3301      	adds	r3, #1
  404140:	2b01      	cmp	r3, #1
  404142:	461f      	mov	r7, r3
  404144:	461e      	mov	r6, r3
  404146:	930a      	str	r3, [sp, #40]	; 0x28
  404148:	bfb8      	it	lt
  40414a:	2701      	movlt	r7, #1
  40414c:	2100      	movs	r1, #0
  40414e:	2f17      	cmp	r7, #23
  404150:	6461      	str	r1, [r4, #68]	; 0x44
  404152:	d90a      	bls.n	40416a <_dtoa_r+0x762>
  404154:	2201      	movs	r2, #1
  404156:	2304      	movs	r3, #4
  404158:	005b      	lsls	r3, r3, #1
  40415a:	f103 0014 	add.w	r0, r3, #20
  40415e:	4287      	cmp	r7, r0
  404160:	4611      	mov	r1, r2
  404162:	f102 0201 	add.w	r2, r2, #1
  404166:	d2f7      	bcs.n	404158 <_dtoa_r+0x750>
  404168:	6461      	str	r1, [r4, #68]	; 0x44
  40416a:	4620      	mov	r0, r4
  40416c:	f001 fbc8 	bl	405900 <_Balloc>
  404170:	2e0e      	cmp	r6, #14
  404172:	9004      	str	r0, [sp, #16]
  404174:	6420      	str	r0, [r4, #64]	; 0x40
  404176:	f63f ad41 	bhi.w	403bfc <_dtoa_r+0x1f4>
  40417a:	2d00      	cmp	r5, #0
  40417c:	f43f ad3e 	beq.w	403bfc <_dtoa_r+0x1f4>
  404180:	9902      	ldr	r1, [sp, #8]
  404182:	2900      	cmp	r1, #0
  404184:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  404188:	f340 8202 	ble.w	404590 <_dtoa_r+0xb88>
  40418c:	4bb8      	ldr	r3, [pc, #736]	; (404470 <_dtoa_r+0xa68>)
  40418e:	f001 020f 	and.w	r2, r1, #15
  404192:	110d      	asrs	r5, r1, #4
  404194:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  404198:	06e9      	lsls	r1, r5, #27
  40419a:	e9d3 6700 	ldrd	r6, r7, [r3]
  40419e:	f140 81ae 	bpl.w	4044fe <_dtoa_r+0xaf6>
  4041a2:	4bb4      	ldr	r3, [pc, #720]	; (404474 <_dtoa_r+0xa6c>)
  4041a4:	4650      	mov	r0, sl
  4041a6:	4659      	mov	r1, fp
  4041a8:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  4041ac:	f7fd fbfe 	bl	4019ac <__aeabi_ddiv>
  4041b0:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  4041b4:	f005 050f 	and.w	r5, r5, #15
  4041b8:	f04f 0a03 	mov.w	sl, #3
  4041bc:	b18d      	cbz	r5, 4041e2 <_dtoa_r+0x7da>
  4041be:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 404474 <_dtoa_r+0xa6c>
  4041c2:	07ea      	lsls	r2, r5, #31
  4041c4:	d509      	bpl.n	4041da <_dtoa_r+0x7d2>
  4041c6:	4630      	mov	r0, r6
  4041c8:	4639      	mov	r1, r7
  4041ca:	e9d8 2300 	ldrd	r2, r3, [r8]
  4041ce:	f7fd fac3 	bl	401758 <__aeabi_dmul>
  4041d2:	f10a 0a01 	add.w	sl, sl, #1
  4041d6:	4606      	mov	r6, r0
  4041d8:	460f      	mov	r7, r1
  4041da:	106d      	asrs	r5, r5, #1
  4041dc:	f108 0808 	add.w	r8, r8, #8
  4041e0:	d1ef      	bne.n	4041c2 <_dtoa_r+0x7ba>
  4041e2:	463b      	mov	r3, r7
  4041e4:	4632      	mov	r2, r6
  4041e6:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  4041ea:	f7fd fbdf 	bl	4019ac <__aeabi_ddiv>
  4041ee:	4607      	mov	r7, r0
  4041f0:	4688      	mov	r8, r1
  4041f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4041f4:	b143      	cbz	r3, 404208 <_dtoa_r+0x800>
  4041f6:	2200      	movs	r2, #0
  4041f8:	4b9f      	ldr	r3, [pc, #636]	; (404478 <_dtoa_r+0xa70>)
  4041fa:	4638      	mov	r0, r7
  4041fc:	4641      	mov	r1, r8
  4041fe:	f7fd fd1d 	bl	401c3c <__aeabi_dcmplt>
  404202:	2800      	cmp	r0, #0
  404204:	f040 8286 	bne.w	404714 <_dtoa_r+0xd0c>
  404208:	4650      	mov	r0, sl
  40420a:	f7fd fa3f 	bl	40168c <__aeabi_i2d>
  40420e:	463a      	mov	r2, r7
  404210:	4643      	mov	r3, r8
  404212:	f7fd faa1 	bl	401758 <__aeabi_dmul>
  404216:	4b99      	ldr	r3, [pc, #612]	; (40447c <_dtoa_r+0xa74>)
  404218:	2200      	movs	r2, #0
  40421a:	f7fd f8eb 	bl	4013f4 <__adddf3>
  40421e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404220:	4605      	mov	r5, r0
  404222:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  404226:	2b00      	cmp	r3, #0
  404228:	f000 813e 	beq.w	4044a8 <_dtoa_r+0xaa0>
  40422c:	9b02      	ldr	r3, [sp, #8]
  40422e:	9315      	str	r3, [sp, #84]	; 0x54
  404230:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404232:	9312      	str	r3, [sp, #72]	; 0x48
  404234:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  404236:	2b00      	cmp	r3, #0
  404238:	f000 81fa 	beq.w	404630 <_dtoa_r+0xc28>
  40423c:	9a12      	ldr	r2, [sp, #72]	; 0x48
  40423e:	4b8c      	ldr	r3, [pc, #560]	; (404470 <_dtoa_r+0xa68>)
  404240:	498f      	ldr	r1, [pc, #572]	; (404480 <_dtoa_r+0xa78>)
  404242:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  404246:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  40424a:	2000      	movs	r0, #0
  40424c:	f7fd fbae 	bl	4019ac <__aeabi_ddiv>
  404250:	462a      	mov	r2, r5
  404252:	4633      	mov	r3, r6
  404254:	f7fd f8cc 	bl	4013f0 <__aeabi_dsub>
  404258:	4682      	mov	sl, r0
  40425a:	468b      	mov	fp, r1
  40425c:	4638      	mov	r0, r7
  40425e:	4641      	mov	r1, r8
  404260:	f002 fb26 	bl	4068b0 <__aeabi_d2iz>
  404264:	4605      	mov	r5, r0
  404266:	f7fd fa11 	bl	40168c <__aeabi_i2d>
  40426a:	4602      	mov	r2, r0
  40426c:	460b      	mov	r3, r1
  40426e:	4638      	mov	r0, r7
  404270:	4641      	mov	r1, r8
  404272:	f7fd f8bd 	bl	4013f0 <__aeabi_dsub>
  404276:	3530      	adds	r5, #48	; 0x30
  404278:	fa5f f885 	uxtb.w	r8, r5
  40427c:	9d04      	ldr	r5, [sp, #16]
  40427e:	4606      	mov	r6, r0
  404280:	460f      	mov	r7, r1
  404282:	f885 8000 	strb.w	r8, [r5]
  404286:	4602      	mov	r2, r0
  404288:	460b      	mov	r3, r1
  40428a:	4650      	mov	r0, sl
  40428c:	4659      	mov	r1, fp
  40428e:	3501      	adds	r5, #1
  404290:	f7fd fcf2 	bl	401c78 <__aeabi_dcmpgt>
  404294:	2800      	cmp	r0, #0
  404296:	d154      	bne.n	404342 <_dtoa_r+0x93a>
  404298:	4632      	mov	r2, r6
  40429a:	463b      	mov	r3, r7
  40429c:	2000      	movs	r0, #0
  40429e:	4976      	ldr	r1, [pc, #472]	; (404478 <_dtoa_r+0xa70>)
  4042a0:	f7fd f8a6 	bl	4013f0 <__aeabi_dsub>
  4042a4:	4602      	mov	r2, r0
  4042a6:	460b      	mov	r3, r1
  4042a8:	4650      	mov	r0, sl
  4042aa:	4659      	mov	r1, fp
  4042ac:	f7fd fce4 	bl	401c78 <__aeabi_dcmpgt>
  4042b0:	2800      	cmp	r0, #0
  4042b2:	f040 8270 	bne.w	404796 <_dtoa_r+0xd8e>
  4042b6:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4042b8:	2a01      	cmp	r2, #1
  4042ba:	f000 8111 	beq.w	4044e0 <_dtoa_r+0xad8>
  4042be:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4042c0:	9a04      	ldr	r2, [sp, #16]
  4042c2:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  4042c6:	4413      	add	r3, r2
  4042c8:	4699      	mov	r9, r3
  4042ca:	e00d      	b.n	4042e8 <_dtoa_r+0x8e0>
  4042cc:	2000      	movs	r0, #0
  4042ce:	496a      	ldr	r1, [pc, #424]	; (404478 <_dtoa_r+0xa70>)
  4042d0:	f7fd f88e 	bl	4013f0 <__aeabi_dsub>
  4042d4:	4652      	mov	r2, sl
  4042d6:	465b      	mov	r3, fp
  4042d8:	f7fd fcb0 	bl	401c3c <__aeabi_dcmplt>
  4042dc:	2800      	cmp	r0, #0
  4042de:	f040 8258 	bne.w	404792 <_dtoa_r+0xd8a>
  4042e2:	454d      	cmp	r5, r9
  4042e4:	f000 80fa 	beq.w	4044dc <_dtoa_r+0xad4>
  4042e8:	4650      	mov	r0, sl
  4042ea:	4659      	mov	r1, fp
  4042ec:	2200      	movs	r2, #0
  4042ee:	4b65      	ldr	r3, [pc, #404]	; (404484 <_dtoa_r+0xa7c>)
  4042f0:	f7fd fa32 	bl	401758 <__aeabi_dmul>
  4042f4:	2200      	movs	r2, #0
  4042f6:	4b63      	ldr	r3, [pc, #396]	; (404484 <_dtoa_r+0xa7c>)
  4042f8:	4682      	mov	sl, r0
  4042fa:	468b      	mov	fp, r1
  4042fc:	4630      	mov	r0, r6
  4042fe:	4639      	mov	r1, r7
  404300:	f7fd fa2a 	bl	401758 <__aeabi_dmul>
  404304:	460f      	mov	r7, r1
  404306:	4606      	mov	r6, r0
  404308:	f002 fad2 	bl	4068b0 <__aeabi_d2iz>
  40430c:	4680      	mov	r8, r0
  40430e:	f7fd f9bd 	bl	40168c <__aeabi_i2d>
  404312:	4602      	mov	r2, r0
  404314:	460b      	mov	r3, r1
  404316:	4630      	mov	r0, r6
  404318:	4639      	mov	r1, r7
  40431a:	f7fd f869 	bl	4013f0 <__aeabi_dsub>
  40431e:	f108 0830 	add.w	r8, r8, #48	; 0x30
  404322:	fa5f f888 	uxtb.w	r8, r8
  404326:	4652      	mov	r2, sl
  404328:	465b      	mov	r3, fp
  40432a:	f805 8b01 	strb.w	r8, [r5], #1
  40432e:	4606      	mov	r6, r0
  404330:	460f      	mov	r7, r1
  404332:	f7fd fc83 	bl	401c3c <__aeabi_dcmplt>
  404336:	4632      	mov	r2, r6
  404338:	463b      	mov	r3, r7
  40433a:	2800      	cmp	r0, #0
  40433c:	d0c6      	beq.n	4042cc <_dtoa_r+0x8c4>
  40433e:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404342:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404344:	9302      	str	r3, [sp, #8]
  404346:	e523      	b.n	403d90 <_dtoa_r+0x388>
  404348:	2300      	movs	r3, #0
  40434a:	930b      	str	r3, [sp, #44]	; 0x2c
  40434c:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40434e:	2b00      	cmp	r3, #0
  404350:	f340 80dc 	ble.w	40450c <_dtoa_r+0xb04>
  404354:	461f      	mov	r7, r3
  404356:	461e      	mov	r6, r3
  404358:	930f      	str	r3, [sp, #60]	; 0x3c
  40435a:	930a      	str	r3, [sp, #40]	; 0x28
  40435c:	e6f6      	b.n	40414c <_dtoa_r+0x744>
  40435e:	2301      	movs	r3, #1
  404360:	930b      	str	r3, [sp, #44]	; 0x2c
  404362:	e7f3      	b.n	40434c <_dtoa_r+0x944>
  404364:	f1ba 0f00 	cmp.w	sl, #0
  404368:	f47f ada8 	bne.w	403ebc <_dtoa_r+0x4b4>
  40436c:	f3cb 0313 	ubfx	r3, fp, #0, #20
  404370:	2b00      	cmp	r3, #0
  404372:	f47f adba 	bne.w	403eea <_dtoa_r+0x4e2>
  404376:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  40437a:	0d3f      	lsrs	r7, r7, #20
  40437c:	053f      	lsls	r7, r7, #20
  40437e:	2f00      	cmp	r7, #0
  404380:	f000 820d 	beq.w	40479e <_dtoa_r+0xd96>
  404384:	9b08      	ldr	r3, [sp, #32]
  404386:	3301      	adds	r3, #1
  404388:	9308      	str	r3, [sp, #32]
  40438a:	9b06      	ldr	r3, [sp, #24]
  40438c:	3301      	adds	r3, #1
  40438e:	9306      	str	r3, [sp, #24]
  404390:	2301      	movs	r3, #1
  404392:	930c      	str	r3, [sp, #48]	; 0x30
  404394:	e5ab      	b.n	403eee <_dtoa_r+0x4e6>
  404396:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404398:	2b00      	cmp	r3, #0
  40439a:	f73f ac42 	bgt.w	403c22 <_dtoa_r+0x21a>
  40439e:	f040 8221 	bne.w	4047e4 <_dtoa_r+0xddc>
  4043a2:	2200      	movs	r2, #0
  4043a4:	4b38      	ldr	r3, [pc, #224]	; (404488 <_dtoa_r+0xa80>)
  4043a6:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  4043aa:	f7fd f9d5 	bl	401758 <__aeabi_dmul>
  4043ae:	4652      	mov	r2, sl
  4043b0:	465b      	mov	r3, fp
  4043b2:	f7fd fc57 	bl	401c64 <__aeabi_dcmpge>
  4043b6:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  4043ba:	4646      	mov	r6, r8
  4043bc:	2800      	cmp	r0, #0
  4043be:	d041      	beq.n	404444 <_dtoa_r+0xa3c>
  4043c0:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4043c2:	9d04      	ldr	r5, [sp, #16]
  4043c4:	43db      	mvns	r3, r3
  4043c6:	9302      	str	r3, [sp, #8]
  4043c8:	4641      	mov	r1, r8
  4043ca:	4620      	mov	r0, r4
  4043cc:	f001 fabe 	bl	40594c <_Bfree>
  4043d0:	2e00      	cmp	r6, #0
  4043d2:	f43f acdd 	beq.w	403d90 <_dtoa_r+0x388>
  4043d6:	e6a7      	b.n	404128 <_dtoa_r+0x720>
  4043d8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4043da:	4649      	mov	r1, r9
  4043dc:	4620      	mov	r0, r4
  4043de:	f001 fbeb 	bl	405bb8 <__pow5mult>
  4043e2:	4681      	mov	r9, r0
  4043e4:	e558      	b.n	403e98 <_dtoa_r+0x490>
  4043e6:	9a14      	ldr	r2, [sp, #80]	; 0x50
  4043e8:	2a00      	cmp	r2, #0
  4043ea:	f000 8187 	beq.w	4046fc <_dtoa_r+0xcf4>
  4043ee:	f203 4333 	addw	r3, r3, #1075	; 0x433
  4043f2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4043f4:	9d08      	ldr	r5, [sp, #32]
  4043f6:	e4f2      	b.n	403dde <_dtoa_r+0x3d6>
  4043f8:	f1ba 0f00 	cmp.w	sl, #0
  4043fc:	f47f ad75 	bne.w	403eea <_dtoa_r+0x4e2>
  404400:	e7b4      	b.n	40436c <_dtoa_r+0x964>
  404402:	f001 faad 	bl	405960 <__multadd>
  404406:	4647      	mov	r7, r8
  404408:	4606      	mov	r6, r0
  40440a:	4683      	mov	fp, r0
  40440c:	e5be      	b.n	403f8c <_dtoa_r+0x584>
  40440e:	4601      	mov	r1, r0
  404410:	4620      	mov	r0, r4
  404412:	9306      	str	r3, [sp, #24]
  404414:	f001 fa9a 	bl	40594c <_Bfree>
  404418:	2201      	movs	r2, #1
  40441a:	9b06      	ldr	r3, [sp, #24]
  40441c:	e5e0      	b.n	403fe0 <_dtoa_r+0x5d8>
  40441e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404420:	2b02      	cmp	r3, #2
  404422:	f77f ad96 	ble.w	403f52 <_dtoa_r+0x54a>
  404426:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404428:	2b00      	cmp	r3, #0
  40442a:	d1c9      	bne.n	4043c0 <_dtoa_r+0x9b8>
  40442c:	4641      	mov	r1, r8
  40442e:	2205      	movs	r2, #5
  404430:	4620      	mov	r0, r4
  404432:	f001 fa95 	bl	405960 <__multadd>
  404436:	4601      	mov	r1, r0
  404438:	4680      	mov	r8, r0
  40443a:	4648      	mov	r0, r9
  40443c:	f001 fc5e 	bl	405cfc <__mcmp>
  404440:	2800      	cmp	r0, #0
  404442:	ddbd      	ble.n	4043c0 <_dtoa_r+0x9b8>
  404444:	9a02      	ldr	r2, [sp, #8]
  404446:	9904      	ldr	r1, [sp, #16]
  404448:	2331      	movs	r3, #49	; 0x31
  40444a:	3201      	adds	r2, #1
  40444c:	9202      	str	r2, [sp, #8]
  40444e:	700b      	strb	r3, [r1, #0]
  404450:	1c4d      	adds	r5, r1, #1
  404452:	e7b9      	b.n	4043c8 <_dtoa_r+0x9c0>
  404454:	9a02      	ldr	r2, [sp, #8]
  404456:	3201      	adds	r2, #1
  404458:	9202      	str	r2, [sp, #8]
  40445a:	9a04      	ldr	r2, [sp, #16]
  40445c:	2331      	movs	r3, #49	; 0x31
  40445e:	7013      	strb	r3, [r2, #0]
  404460:	e652      	b.n	404108 <_dtoa_r+0x700>
  404462:	2301      	movs	r3, #1
  404464:	930b      	str	r3, [sp, #44]	; 0x2c
  404466:	e666      	b.n	404136 <_dtoa_r+0x72e>
  404468:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  40446c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40446e:	e48f      	b.n	403d90 <_dtoa_r+0x388>
  404470:	00406d60 	.word	0x00406d60
  404474:	00406d38 	.word	0x00406d38
  404478:	3ff00000 	.word	0x3ff00000
  40447c:	401c0000 	.word	0x401c0000
  404480:	3fe00000 	.word	0x3fe00000
  404484:	40240000 	.word	0x40240000
  404488:	40140000 	.word	0x40140000
  40448c:	4650      	mov	r0, sl
  40448e:	f7fd f8fd 	bl	40168c <__aeabi_i2d>
  404492:	463a      	mov	r2, r7
  404494:	4643      	mov	r3, r8
  404496:	f7fd f95f 	bl	401758 <__aeabi_dmul>
  40449a:	2200      	movs	r2, #0
  40449c:	4bc1      	ldr	r3, [pc, #772]	; (4047a4 <_dtoa_r+0xd9c>)
  40449e:	f7fc ffa9 	bl	4013f4 <__adddf3>
  4044a2:	4605      	mov	r5, r0
  4044a4:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  4044a8:	4641      	mov	r1, r8
  4044aa:	2200      	movs	r2, #0
  4044ac:	4bbe      	ldr	r3, [pc, #760]	; (4047a8 <_dtoa_r+0xda0>)
  4044ae:	4638      	mov	r0, r7
  4044b0:	f7fc ff9e 	bl	4013f0 <__aeabi_dsub>
  4044b4:	462a      	mov	r2, r5
  4044b6:	4633      	mov	r3, r6
  4044b8:	4682      	mov	sl, r0
  4044ba:	468b      	mov	fp, r1
  4044bc:	f7fd fbdc 	bl	401c78 <__aeabi_dcmpgt>
  4044c0:	4680      	mov	r8, r0
  4044c2:	2800      	cmp	r0, #0
  4044c4:	f040 8110 	bne.w	4046e8 <_dtoa_r+0xce0>
  4044c8:	462a      	mov	r2, r5
  4044ca:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  4044ce:	4650      	mov	r0, sl
  4044d0:	4659      	mov	r1, fp
  4044d2:	f7fd fbb3 	bl	401c3c <__aeabi_dcmplt>
  4044d6:	b118      	cbz	r0, 4044e0 <_dtoa_r+0xad8>
  4044d8:	4646      	mov	r6, r8
  4044da:	e771      	b.n	4043c0 <_dtoa_r+0x9b8>
  4044dc:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4044e0:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  4044e4:	f7ff bb8a 	b.w	403bfc <_dtoa_r+0x1f4>
  4044e8:	9804      	ldr	r0, [sp, #16]
  4044ea:	f7ff babb 	b.w	403a64 <_dtoa_r+0x5c>
  4044ee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4044f0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  4044f2:	970c      	str	r7, [sp, #48]	; 0x30
  4044f4:	1afb      	subs	r3, r7, r3
  4044f6:	441a      	add	r2, r3
  4044f8:	920d      	str	r2, [sp, #52]	; 0x34
  4044fa:	2700      	movs	r7, #0
  4044fc:	e469      	b.n	403dd2 <_dtoa_r+0x3ca>
  4044fe:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  404502:	f04f 0a02 	mov.w	sl, #2
  404506:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  40450a:	e657      	b.n	4041bc <_dtoa_r+0x7b4>
  40450c:	2100      	movs	r1, #0
  40450e:	2301      	movs	r3, #1
  404510:	6461      	str	r1, [r4, #68]	; 0x44
  404512:	4620      	mov	r0, r4
  404514:	9325      	str	r3, [sp, #148]	; 0x94
  404516:	f001 f9f3 	bl	405900 <_Balloc>
  40451a:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40451c:	9004      	str	r0, [sp, #16]
  40451e:	6420      	str	r0, [r4, #64]	; 0x40
  404520:	930a      	str	r3, [sp, #40]	; 0x28
  404522:	930f      	str	r3, [sp, #60]	; 0x3c
  404524:	e629      	b.n	40417a <_dtoa_r+0x772>
  404526:	2a00      	cmp	r2, #0
  404528:	46d0      	mov	r8, sl
  40452a:	f8cd b018 	str.w	fp, [sp, #24]
  40452e:	469a      	mov	sl, r3
  404530:	dd11      	ble.n	404556 <_dtoa_r+0xb4e>
  404532:	4649      	mov	r1, r9
  404534:	2201      	movs	r2, #1
  404536:	4620      	mov	r0, r4
  404538:	f001 fb8e 	bl	405c58 <__lshift>
  40453c:	4641      	mov	r1, r8
  40453e:	4681      	mov	r9, r0
  404540:	f001 fbdc 	bl	405cfc <__mcmp>
  404544:	2800      	cmp	r0, #0
  404546:	f340 8146 	ble.w	4047d6 <_dtoa_r+0xdce>
  40454a:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  40454e:	f000 8106 	beq.w	40475e <_dtoa_r+0xd56>
  404552:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  404556:	46b3      	mov	fp, r6
  404558:	f887 a000 	strb.w	sl, [r7]
  40455c:	1c7d      	adds	r5, r7, #1
  40455e:	9e06      	ldr	r6, [sp, #24]
  404560:	e5d2      	b.n	404108 <_dtoa_r+0x700>
  404562:	d104      	bne.n	40456e <_dtoa_r+0xb66>
  404564:	f01a 0f01 	tst.w	sl, #1
  404568:	d001      	beq.n	40456e <_dtoa_r+0xb66>
  40456a:	e5bd      	b.n	4040e8 <_dtoa_r+0x6e0>
  40456c:	4615      	mov	r5, r2
  40456e:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  404572:	2b30      	cmp	r3, #48	; 0x30
  404574:	f105 32ff 	add.w	r2, r5, #4294967295
  404578:	d0f8      	beq.n	40456c <_dtoa_r+0xb64>
  40457a:	e5c5      	b.n	404108 <_dtoa_r+0x700>
  40457c:	9904      	ldr	r1, [sp, #16]
  40457e:	2230      	movs	r2, #48	; 0x30
  404580:	700a      	strb	r2, [r1, #0]
  404582:	9a02      	ldr	r2, [sp, #8]
  404584:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  404588:	3201      	adds	r2, #1
  40458a:	9202      	str	r2, [sp, #8]
  40458c:	f7ff bbfc 	b.w	403d88 <_dtoa_r+0x380>
  404590:	f000 80bb 	beq.w	40470a <_dtoa_r+0xd02>
  404594:	9b02      	ldr	r3, [sp, #8]
  404596:	425d      	negs	r5, r3
  404598:	4b84      	ldr	r3, [pc, #528]	; (4047ac <_dtoa_r+0xda4>)
  40459a:	f005 020f 	and.w	r2, r5, #15
  40459e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4045a2:	e9d3 2300 	ldrd	r2, r3, [r3]
  4045a6:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  4045aa:	f7fd f8d5 	bl	401758 <__aeabi_dmul>
  4045ae:	112d      	asrs	r5, r5, #4
  4045b0:	4607      	mov	r7, r0
  4045b2:	4688      	mov	r8, r1
  4045b4:	f000 812c 	beq.w	404810 <_dtoa_r+0xe08>
  4045b8:	4e7d      	ldr	r6, [pc, #500]	; (4047b0 <_dtoa_r+0xda8>)
  4045ba:	f04f 0a02 	mov.w	sl, #2
  4045be:	07eb      	lsls	r3, r5, #31
  4045c0:	d509      	bpl.n	4045d6 <_dtoa_r+0xbce>
  4045c2:	4638      	mov	r0, r7
  4045c4:	4641      	mov	r1, r8
  4045c6:	e9d6 2300 	ldrd	r2, r3, [r6]
  4045ca:	f7fd f8c5 	bl	401758 <__aeabi_dmul>
  4045ce:	f10a 0a01 	add.w	sl, sl, #1
  4045d2:	4607      	mov	r7, r0
  4045d4:	4688      	mov	r8, r1
  4045d6:	106d      	asrs	r5, r5, #1
  4045d8:	f106 0608 	add.w	r6, r6, #8
  4045dc:	d1ef      	bne.n	4045be <_dtoa_r+0xbb6>
  4045de:	e608      	b.n	4041f2 <_dtoa_r+0x7ea>
  4045e0:	6871      	ldr	r1, [r6, #4]
  4045e2:	4620      	mov	r0, r4
  4045e4:	f001 f98c 	bl	405900 <_Balloc>
  4045e8:	6933      	ldr	r3, [r6, #16]
  4045ea:	3302      	adds	r3, #2
  4045ec:	009a      	lsls	r2, r3, #2
  4045ee:	4605      	mov	r5, r0
  4045f0:	f106 010c 	add.w	r1, r6, #12
  4045f4:	300c      	adds	r0, #12
  4045f6:	f7fd fb71 	bl	401cdc <memcpy>
  4045fa:	4629      	mov	r1, r5
  4045fc:	2201      	movs	r2, #1
  4045fe:	4620      	mov	r0, r4
  404600:	f001 fb2a 	bl	405c58 <__lshift>
  404604:	9006      	str	r0, [sp, #24]
  404606:	e4b5      	b.n	403f74 <_dtoa_r+0x56c>
  404608:	2b39      	cmp	r3, #57	; 0x39
  40460a:	f8cd b018 	str.w	fp, [sp, #24]
  40460e:	46d0      	mov	r8, sl
  404610:	f000 80a5 	beq.w	40475e <_dtoa_r+0xd56>
  404614:	f103 0a01 	add.w	sl, r3, #1
  404618:	46b3      	mov	fp, r6
  40461a:	f887 a000 	strb.w	sl, [r7]
  40461e:	1c7d      	adds	r5, r7, #1
  404620:	9e06      	ldr	r6, [sp, #24]
  404622:	e571      	b.n	404108 <_dtoa_r+0x700>
  404624:	465a      	mov	r2, fp
  404626:	46d0      	mov	r8, sl
  404628:	46b3      	mov	fp, r6
  40462a:	469a      	mov	sl, r3
  40462c:	4616      	mov	r6, r2
  40462e:	e54f      	b.n	4040d0 <_dtoa_r+0x6c8>
  404630:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404632:	495e      	ldr	r1, [pc, #376]	; (4047ac <_dtoa_r+0xda4>)
  404634:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  404638:	462a      	mov	r2, r5
  40463a:	4633      	mov	r3, r6
  40463c:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  404640:	f7fd f88a 	bl	401758 <__aeabi_dmul>
  404644:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  404648:	4638      	mov	r0, r7
  40464a:	4641      	mov	r1, r8
  40464c:	f002 f930 	bl	4068b0 <__aeabi_d2iz>
  404650:	4605      	mov	r5, r0
  404652:	f7fd f81b 	bl	40168c <__aeabi_i2d>
  404656:	460b      	mov	r3, r1
  404658:	4602      	mov	r2, r0
  40465a:	4641      	mov	r1, r8
  40465c:	4638      	mov	r0, r7
  40465e:	f7fc fec7 	bl	4013f0 <__aeabi_dsub>
  404662:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404664:	460f      	mov	r7, r1
  404666:	9904      	ldr	r1, [sp, #16]
  404668:	3530      	adds	r5, #48	; 0x30
  40466a:	2b01      	cmp	r3, #1
  40466c:	700d      	strb	r5, [r1, #0]
  40466e:	4606      	mov	r6, r0
  404670:	f101 0501 	add.w	r5, r1, #1
  404674:	d026      	beq.n	4046c4 <_dtoa_r+0xcbc>
  404676:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404678:	9a04      	ldr	r2, [sp, #16]
  40467a:	f8df b13c 	ldr.w	fp, [pc, #316]	; 4047b8 <_dtoa_r+0xdb0>
  40467e:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  404682:	4413      	add	r3, r2
  404684:	f04f 0a00 	mov.w	sl, #0
  404688:	4699      	mov	r9, r3
  40468a:	4652      	mov	r2, sl
  40468c:	465b      	mov	r3, fp
  40468e:	4630      	mov	r0, r6
  404690:	4639      	mov	r1, r7
  404692:	f7fd f861 	bl	401758 <__aeabi_dmul>
  404696:	460f      	mov	r7, r1
  404698:	4606      	mov	r6, r0
  40469a:	f002 f909 	bl	4068b0 <__aeabi_d2iz>
  40469e:	4680      	mov	r8, r0
  4046a0:	f7fc fff4 	bl	40168c <__aeabi_i2d>
  4046a4:	f108 0830 	add.w	r8, r8, #48	; 0x30
  4046a8:	4602      	mov	r2, r0
  4046aa:	460b      	mov	r3, r1
  4046ac:	4630      	mov	r0, r6
  4046ae:	4639      	mov	r1, r7
  4046b0:	f7fc fe9e 	bl	4013f0 <__aeabi_dsub>
  4046b4:	f805 8b01 	strb.w	r8, [r5], #1
  4046b8:	454d      	cmp	r5, r9
  4046ba:	4606      	mov	r6, r0
  4046bc:	460f      	mov	r7, r1
  4046be:	d1e4      	bne.n	40468a <_dtoa_r+0xc82>
  4046c0:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4046c4:	4b3b      	ldr	r3, [pc, #236]	; (4047b4 <_dtoa_r+0xdac>)
  4046c6:	2200      	movs	r2, #0
  4046c8:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  4046cc:	f7fc fe92 	bl	4013f4 <__adddf3>
  4046d0:	4632      	mov	r2, r6
  4046d2:	463b      	mov	r3, r7
  4046d4:	f7fd fab2 	bl	401c3c <__aeabi_dcmplt>
  4046d8:	2800      	cmp	r0, #0
  4046da:	d046      	beq.n	40476a <_dtoa_r+0xd62>
  4046dc:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4046de:	9302      	str	r3, [sp, #8]
  4046e0:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  4046e4:	f7ff bb43 	b.w	403d6e <_dtoa_r+0x366>
  4046e8:	f04f 0800 	mov.w	r8, #0
  4046ec:	4646      	mov	r6, r8
  4046ee:	e6a9      	b.n	404444 <_dtoa_r+0xa3c>
  4046f0:	9b08      	ldr	r3, [sp, #32]
  4046f2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4046f4:	1a9d      	subs	r5, r3, r2
  4046f6:	2300      	movs	r3, #0
  4046f8:	f7ff bb71 	b.w	403dde <_dtoa_r+0x3d6>
  4046fc:	9b18      	ldr	r3, [sp, #96]	; 0x60
  4046fe:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404700:	9d08      	ldr	r5, [sp, #32]
  404702:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  404706:	f7ff bb6a 	b.w	403dde <_dtoa_r+0x3d6>
  40470a:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  40470e:	f04f 0a02 	mov.w	sl, #2
  404712:	e56e      	b.n	4041f2 <_dtoa_r+0x7ea>
  404714:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404716:	2b00      	cmp	r3, #0
  404718:	f43f aeb8 	beq.w	40448c <_dtoa_r+0xa84>
  40471c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40471e:	2b00      	cmp	r3, #0
  404720:	f77f aede 	ble.w	4044e0 <_dtoa_r+0xad8>
  404724:	2200      	movs	r2, #0
  404726:	4b24      	ldr	r3, [pc, #144]	; (4047b8 <_dtoa_r+0xdb0>)
  404728:	4638      	mov	r0, r7
  40472a:	4641      	mov	r1, r8
  40472c:	f7fd f814 	bl	401758 <__aeabi_dmul>
  404730:	4607      	mov	r7, r0
  404732:	4688      	mov	r8, r1
  404734:	f10a 0001 	add.w	r0, sl, #1
  404738:	f7fc ffa8 	bl	40168c <__aeabi_i2d>
  40473c:	463a      	mov	r2, r7
  40473e:	4643      	mov	r3, r8
  404740:	f7fd f80a 	bl	401758 <__aeabi_dmul>
  404744:	2200      	movs	r2, #0
  404746:	4b17      	ldr	r3, [pc, #92]	; (4047a4 <_dtoa_r+0xd9c>)
  404748:	f7fc fe54 	bl	4013f4 <__adddf3>
  40474c:	9a02      	ldr	r2, [sp, #8]
  40474e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404750:	9312      	str	r3, [sp, #72]	; 0x48
  404752:	3a01      	subs	r2, #1
  404754:	4605      	mov	r5, r0
  404756:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  40475a:	9215      	str	r2, [sp, #84]	; 0x54
  40475c:	e56a      	b.n	404234 <_dtoa_r+0x82c>
  40475e:	2239      	movs	r2, #57	; 0x39
  404760:	46b3      	mov	fp, r6
  404762:	703a      	strb	r2, [r7, #0]
  404764:	9e06      	ldr	r6, [sp, #24]
  404766:	1c7d      	adds	r5, r7, #1
  404768:	e4c0      	b.n	4040ec <_dtoa_r+0x6e4>
  40476a:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  40476e:	2000      	movs	r0, #0
  404770:	4910      	ldr	r1, [pc, #64]	; (4047b4 <_dtoa_r+0xdac>)
  404772:	f7fc fe3d 	bl	4013f0 <__aeabi_dsub>
  404776:	4632      	mov	r2, r6
  404778:	463b      	mov	r3, r7
  40477a:	f7fd fa7d 	bl	401c78 <__aeabi_dcmpgt>
  40477e:	b908      	cbnz	r0, 404784 <_dtoa_r+0xd7c>
  404780:	e6ae      	b.n	4044e0 <_dtoa_r+0xad8>
  404782:	4615      	mov	r5, r2
  404784:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  404788:	2b30      	cmp	r3, #48	; 0x30
  40478a:	f105 32ff 	add.w	r2, r5, #4294967295
  40478e:	d0f8      	beq.n	404782 <_dtoa_r+0xd7a>
  404790:	e5d7      	b.n	404342 <_dtoa_r+0x93a>
  404792:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404796:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404798:	9302      	str	r3, [sp, #8]
  40479a:	f7ff bae8 	b.w	403d6e <_dtoa_r+0x366>
  40479e:	970c      	str	r7, [sp, #48]	; 0x30
  4047a0:	f7ff bba5 	b.w	403eee <_dtoa_r+0x4e6>
  4047a4:	401c0000 	.word	0x401c0000
  4047a8:	40140000 	.word	0x40140000
  4047ac:	00406d60 	.word	0x00406d60
  4047b0:	00406d38 	.word	0x00406d38
  4047b4:	3fe00000 	.word	0x3fe00000
  4047b8:	40240000 	.word	0x40240000
  4047bc:	2b39      	cmp	r3, #57	; 0x39
  4047be:	f8cd b018 	str.w	fp, [sp, #24]
  4047c2:	46d0      	mov	r8, sl
  4047c4:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  4047c8:	469a      	mov	sl, r3
  4047ca:	d0c8      	beq.n	40475e <_dtoa_r+0xd56>
  4047cc:	f1bb 0f00 	cmp.w	fp, #0
  4047d0:	f73f aebf 	bgt.w	404552 <_dtoa_r+0xb4a>
  4047d4:	e6bf      	b.n	404556 <_dtoa_r+0xb4e>
  4047d6:	f47f aebe 	bne.w	404556 <_dtoa_r+0xb4e>
  4047da:	f01a 0f01 	tst.w	sl, #1
  4047de:	f43f aeba 	beq.w	404556 <_dtoa_r+0xb4e>
  4047e2:	e6b2      	b.n	40454a <_dtoa_r+0xb42>
  4047e4:	f04f 0800 	mov.w	r8, #0
  4047e8:	4646      	mov	r6, r8
  4047ea:	e5e9      	b.n	4043c0 <_dtoa_r+0x9b8>
  4047ec:	4631      	mov	r1, r6
  4047ee:	2300      	movs	r3, #0
  4047f0:	220a      	movs	r2, #10
  4047f2:	4620      	mov	r0, r4
  4047f4:	f001 f8b4 	bl	405960 <__multadd>
  4047f8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4047fa:	2b00      	cmp	r3, #0
  4047fc:	4606      	mov	r6, r0
  4047fe:	dd0a      	ble.n	404816 <_dtoa_r+0xe0e>
  404800:	930a      	str	r3, [sp, #40]	; 0x28
  404802:	f7ff bbaa 	b.w	403f5a <_dtoa_r+0x552>
  404806:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404808:	2b02      	cmp	r3, #2
  40480a:	dc23      	bgt.n	404854 <_dtoa_r+0xe4c>
  40480c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40480e:	e43b      	b.n	404088 <_dtoa_r+0x680>
  404810:	f04f 0a02 	mov.w	sl, #2
  404814:	e4ed      	b.n	4041f2 <_dtoa_r+0x7ea>
  404816:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404818:	2b02      	cmp	r3, #2
  40481a:	dc1b      	bgt.n	404854 <_dtoa_r+0xe4c>
  40481c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40481e:	e7ef      	b.n	404800 <_dtoa_r+0xdf8>
  404820:	2500      	movs	r5, #0
  404822:	6465      	str	r5, [r4, #68]	; 0x44
  404824:	4629      	mov	r1, r5
  404826:	4620      	mov	r0, r4
  404828:	f001 f86a 	bl	405900 <_Balloc>
  40482c:	f04f 33ff 	mov.w	r3, #4294967295
  404830:	930a      	str	r3, [sp, #40]	; 0x28
  404832:	930f      	str	r3, [sp, #60]	; 0x3c
  404834:	2301      	movs	r3, #1
  404836:	9004      	str	r0, [sp, #16]
  404838:	9525      	str	r5, [sp, #148]	; 0x94
  40483a:	6420      	str	r0, [r4, #64]	; 0x40
  40483c:	930b      	str	r3, [sp, #44]	; 0x2c
  40483e:	f7ff b9dd 	b.w	403bfc <_dtoa_r+0x1f4>
  404842:	2501      	movs	r5, #1
  404844:	f7ff b9a5 	b.w	403b92 <_dtoa_r+0x18a>
  404848:	f43f ab69 	beq.w	403f1e <_dtoa_r+0x516>
  40484c:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  404850:	f7ff bbf9 	b.w	404046 <_dtoa_r+0x63e>
  404854:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404856:	930a      	str	r3, [sp, #40]	; 0x28
  404858:	e5e5      	b.n	404426 <_dtoa_r+0xa1e>
  40485a:	bf00      	nop

0040485c <__sflush_r>:
  40485c:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
  404860:	b29a      	uxth	r2, r3
  404862:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404866:	460d      	mov	r5, r1
  404868:	0711      	lsls	r1, r2, #28
  40486a:	4680      	mov	r8, r0
  40486c:	d43a      	bmi.n	4048e4 <__sflush_r+0x88>
  40486e:	686a      	ldr	r2, [r5, #4]
  404870:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  404874:	2a00      	cmp	r2, #0
  404876:	81ab      	strh	r3, [r5, #12]
  404878:	dd6f      	ble.n	40495a <__sflush_r+0xfe>
  40487a:	6aac      	ldr	r4, [r5, #40]	; 0x28
  40487c:	2c00      	cmp	r4, #0
  40487e:	d049      	beq.n	404914 <__sflush_r+0xb8>
  404880:	2200      	movs	r2, #0
  404882:	b29b      	uxth	r3, r3
  404884:	f8d8 6000 	ldr.w	r6, [r8]
  404888:	f8c8 2000 	str.w	r2, [r8]
  40488c:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
  404890:	d067      	beq.n	404962 <__sflush_r+0x106>
  404892:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  404894:	075f      	lsls	r7, r3, #29
  404896:	d505      	bpl.n	4048a4 <__sflush_r+0x48>
  404898:	6869      	ldr	r1, [r5, #4]
  40489a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  40489c:	1a52      	subs	r2, r2, r1
  40489e:	b10b      	cbz	r3, 4048a4 <__sflush_r+0x48>
  4048a0:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  4048a2:	1ad2      	subs	r2, r2, r3
  4048a4:	2300      	movs	r3, #0
  4048a6:	69e9      	ldr	r1, [r5, #28]
  4048a8:	4640      	mov	r0, r8
  4048aa:	47a0      	blx	r4
  4048ac:	1c44      	adds	r4, r0, #1
  4048ae:	d03c      	beq.n	40492a <__sflush_r+0xce>
  4048b0:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  4048b4:	692a      	ldr	r2, [r5, #16]
  4048b6:	602a      	str	r2, [r5, #0]
  4048b8:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  4048bc:	2200      	movs	r2, #0
  4048be:	81ab      	strh	r3, [r5, #12]
  4048c0:	04db      	lsls	r3, r3, #19
  4048c2:	606a      	str	r2, [r5, #4]
  4048c4:	d447      	bmi.n	404956 <__sflush_r+0xfa>
  4048c6:	6b29      	ldr	r1, [r5, #48]	; 0x30
  4048c8:	f8c8 6000 	str.w	r6, [r8]
  4048cc:	b311      	cbz	r1, 404914 <__sflush_r+0xb8>
  4048ce:	f105 0340 	add.w	r3, r5, #64	; 0x40
  4048d2:	4299      	cmp	r1, r3
  4048d4:	d002      	beq.n	4048dc <__sflush_r+0x80>
  4048d6:	4640      	mov	r0, r8
  4048d8:	f000 f95a 	bl	404b90 <_free_r>
  4048dc:	2000      	movs	r0, #0
  4048de:	6328      	str	r0, [r5, #48]	; 0x30
  4048e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4048e4:	692e      	ldr	r6, [r5, #16]
  4048e6:	b1ae      	cbz	r6, 404914 <__sflush_r+0xb8>
  4048e8:	682c      	ldr	r4, [r5, #0]
  4048ea:	602e      	str	r6, [r5, #0]
  4048ec:	0791      	lsls	r1, r2, #30
  4048ee:	bf0c      	ite	eq
  4048f0:	696b      	ldreq	r3, [r5, #20]
  4048f2:	2300      	movne	r3, #0
  4048f4:	1ba4      	subs	r4, r4, r6
  4048f6:	60ab      	str	r3, [r5, #8]
  4048f8:	e00a      	b.n	404910 <__sflush_r+0xb4>
  4048fa:	4623      	mov	r3, r4
  4048fc:	4632      	mov	r2, r6
  4048fe:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  404900:	69e9      	ldr	r1, [r5, #28]
  404902:	4640      	mov	r0, r8
  404904:	47b8      	blx	r7
  404906:	2800      	cmp	r0, #0
  404908:	eba4 0400 	sub.w	r4, r4, r0
  40490c:	4406      	add	r6, r0
  40490e:	dd04      	ble.n	40491a <__sflush_r+0xbe>
  404910:	2c00      	cmp	r4, #0
  404912:	dcf2      	bgt.n	4048fa <__sflush_r+0x9e>
  404914:	2000      	movs	r0, #0
  404916:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40491a:	89ab      	ldrh	r3, [r5, #12]
  40491c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404920:	81ab      	strh	r3, [r5, #12]
  404922:	f04f 30ff 	mov.w	r0, #4294967295
  404926:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40492a:	f8d8 4000 	ldr.w	r4, [r8]
  40492e:	2c1d      	cmp	r4, #29
  404930:	d8f3      	bhi.n	40491a <__sflush_r+0xbe>
  404932:	4b19      	ldr	r3, [pc, #100]	; (404998 <__sflush_r+0x13c>)
  404934:	40e3      	lsrs	r3, r4
  404936:	43db      	mvns	r3, r3
  404938:	f013 0301 	ands.w	r3, r3, #1
  40493c:	d1ed      	bne.n	40491a <__sflush_r+0xbe>
  40493e:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
  404942:	606b      	str	r3, [r5, #4]
  404944:	f422 6300 	bic.w	r3, r2, #2048	; 0x800
  404948:	6929      	ldr	r1, [r5, #16]
  40494a:	81ab      	strh	r3, [r5, #12]
  40494c:	04da      	lsls	r2, r3, #19
  40494e:	6029      	str	r1, [r5, #0]
  404950:	d5b9      	bpl.n	4048c6 <__sflush_r+0x6a>
  404952:	2c00      	cmp	r4, #0
  404954:	d1b7      	bne.n	4048c6 <__sflush_r+0x6a>
  404956:	6528      	str	r0, [r5, #80]	; 0x50
  404958:	e7b5      	b.n	4048c6 <__sflush_r+0x6a>
  40495a:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  40495c:	2a00      	cmp	r2, #0
  40495e:	dc8c      	bgt.n	40487a <__sflush_r+0x1e>
  404960:	e7d8      	b.n	404914 <__sflush_r+0xb8>
  404962:	2301      	movs	r3, #1
  404964:	69e9      	ldr	r1, [r5, #28]
  404966:	4640      	mov	r0, r8
  404968:	47a0      	blx	r4
  40496a:	1c43      	adds	r3, r0, #1
  40496c:	4602      	mov	r2, r0
  40496e:	d002      	beq.n	404976 <__sflush_r+0x11a>
  404970:	89ab      	ldrh	r3, [r5, #12]
  404972:	6aac      	ldr	r4, [r5, #40]	; 0x28
  404974:	e78e      	b.n	404894 <__sflush_r+0x38>
  404976:	f8d8 3000 	ldr.w	r3, [r8]
  40497a:	2b00      	cmp	r3, #0
  40497c:	d0f8      	beq.n	404970 <__sflush_r+0x114>
  40497e:	2b1d      	cmp	r3, #29
  404980:	d001      	beq.n	404986 <__sflush_r+0x12a>
  404982:	2b16      	cmp	r3, #22
  404984:	d102      	bne.n	40498c <__sflush_r+0x130>
  404986:	f8c8 6000 	str.w	r6, [r8]
  40498a:	e7c3      	b.n	404914 <__sflush_r+0xb8>
  40498c:	89ab      	ldrh	r3, [r5, #12]
  40498e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404992:	81ab      	strh	r3, [r5, #12]
  404994:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404998:	20400001 	.word	0x20400001

0040499c <_fflush_r>:
  40499c:	b538      	push	{r3, r4, r5, lr}
  40499e:	460d      	mov	r5, r1
  4049a0:	4604      	mov	r4, r0
  4049a2:	b108      	cbz	r0, 4049a8 <_fflush_r+0xc>
  4049a4:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4049a6:	b1bb      	cbz	r3, 4049d8 <_fflush_r+0x3c>
  4049a8:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
  4049ac:	b188      	cbz	r0, 4049d2 <_fflush_r+0x36>
  4049ae:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  4049b0:	07db      	lsls	r3, r3, #31
  4049b2:	d401      	bmi.n	4049b8 <_fflush_r+0x1c>
  4049b4:	0581      	lsls	r1, r0, #22
  4049b6:	d517      	bpl.n	4049e8 <_fflush_r+0x4c>
  4049b8:	4620      	mov	r0, r4
  4049ba:	4629      	mov	r1, r5
  4049bc:	f7ff ff4e 	bl	40485c <__sflush_r>
  4049c0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  4049c2:	07da      	lsls	r2, r3, #31
  4049c4:	4604      	mov	r4, r0
  4049c6:	d402      	bmi.n	4049ce <_fflush_r+0x32>
  4049c8:	89ab      	ldrh	r3, [r5, #12]
  4049ca:	059b      	lsls	r3, r3, #22
  4049cc:	d507      	bpl.n	4049de <_fflush_r+0x42>
  4049ce:	4620      	mov	r0, r4
  4049d0:	bd38      	pop	{r3, r4, r5, pc}
  4049d2:	4604      	mov	r4, r0
  4049d4:	4620      	mov	r0, r4
  4049d6:	bd38      	pop	{r3, r4, r5, pc}
  4049d8:	f000 f838 	bl	404a4c <__sinit>
  4049dc:	e7e4      	b.n	4049a8 <_fflush_r+0xc>
  4049de:	6da8      	ldr	r0, [r5, #88]	; 0x58
  4049e0:	f000 fb80 	bl	4050e4 <__retarget_lock_release_recursive>
  4049e4:	4620      	mov	r0, r4
  4049e6:	bd38      	pop	{r3, r4, r5, pc}
  4049e8:	6da8      	ldr	r0, [r5, #88]	; 0x58
  4049ea:	f000 fb79 	bl	4050e0 <__retarget_lock_acquire_recursive>
  4049ee:	e7e3      	b.n	4049b8 <_fflush_r+0x1c>

004049f0 <_cleanup_r>:
  4049f0:	4901      	ldr	r1, [pc, #4]	; (4049f8 <_cleanup_r+0x8>)
  4049f2:	f000 bb2b 	b.w	40504c <_fwalk_reent>
  4049f6:	bf00      	nop
  4049f8:	004065c1 	.word	0x004065c1

004049fc <std.isra.0>:
  4049fc:	b510      	push	{r4, lr}
  4049fe:	2300      	movs	r3, #0
  404a00:	4604      	mov	r4, r0
  404a02:	8181      	strh	r1, [r0, #12]
  404a04:	81c2      	strh	r2, [r0, #14]
  404a06:	6003      	str	r3, [r0, #0]
  404a08:	6043      	str	r3, [r0, #4]
  404a0a:	6083      	str	r3, [r0, #8]
  404a0c:	6643      	str	r3, [r0, #100]	; 0x64
  404a0e:	6103      	str	r3, [r0, #16]
  404a10:	6143      	str	r3, [r0, #20]
  404a12:	6183      	str	r3, [r0, #24]
  404a14:	4619      	mov	r1, r3
  404a16:	2208      	movs	r2, #8
  404a18:	305c      	adds	r0, #92	; 0x5c
  404a1a:	f7fd f9f9 	bl	401e10 <memset>
  404a1e:	4807      	ldr	r0, [pc, #28]	; (404a3c <std.isra.0+0x40>)
  404a20:	4907      	ldr	r1, [pc, #28]	; (404a40 <std.isra.0+0x44>)
  404a22:	4a08      	ldr	r2, [pc, #32]	; (404a44 <std.isra.0+0x48>)
  404a24:	4b08      	ldr	r3, [pc, #32]	; (404a48 <std.isra.0+0x4c>)
  404a26:	6220      	str	r0, [r4, #32]
  404a28:	61e4      	str	r4, [r4, #28]
  404a2a:	6261      	str	r1, [r4, #36]	; 0x24
  404a2c:	62a2      	str	r2, [r4, #40]	; 0x28
  404a2e:	62e3      	str	r3, [r4, #44]	; 0x2c
  404a30:	f104 0058 	add.w	r0, r4, #88	; 0x58
  404a34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  404a38:	f000 bb4e 	b.w	4050d8 <__retarget_lock_init_recursive>
  404a3c:	00406265 	.word	0x00406265
  404a40:	00406289 	.word	0x00406289
  404a44:	004062c5 	.word	0x004062c5
  404a48:	004062e5 	.word	0x004062e5

00404a4c <__sinit>:
  404a4c:	b510      	push	{r4, lr}
  404a4e:	4604      	mov	r4, r0
  404a50:	4812      	ldr	r0, [pc, #72]	; (404a9c <__sinit+0x50>)
  404a52:	f000 fb45 	bl	4050e0 <__retarget_lock_acquire_recursive>
  404a56:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  404a58:	b9d2      	cbnz	r2, 404a90 <__sinit+0x44>
  404a5a:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
  404a5e:	4810      	ldr	r0, [pc, #64]	; (404aa0 <__sinit+0x54>)
  404a60:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
  404a64:	2103      	movs	r1, #3
  404a66:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
  404a6a:	63e0      	str	r0, [r4, #60]	; 0x3c
  404a6c:	f8c4 12e4 	str.w	r1, [r4, #740]	; 0x2e4
  404a70:	6860      	ldr	r0, [r4, #4]
  404a72:	2104      	movs	r1, #4
  404a74:	f7ff ffc2 	bl	4049fc <std.isra.0>
  404a78:	2201      	movs	r2, #1
  404a7a:	2109      	movs	r1, #9
  404a7c:	68a0      	ldr	r0, [r4, #8]
  404a7e:	f7ff ffbd 	bl	4049fc <std.isra.0>
  404a82:	2202      	movs	r2, #2
  404a84:	2112      	movs	r1, #18
  404a86:	68e0      	ldr	r0, [r4, #12]
  404a88:	f7ff ffb8 	bl	4049fc <std.isra.0>
  404a8c:	2301      	movs	r3, #1
  404a8e:	63a3      	str	r3, [r4, #56]	; 0x38
  404a90:	4802      	ldr	r0, [pc, #8]	; (404a9c <__sinit+0x50>)
  404a92:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  404a96:	f000 bb25 	b.w	4050e4 <__retarget_lock_release_recursive>
  404a9a:	bf00      	nop
  404a9c:	20400b30 	.word	0x20400b30
  404aa0:	004049f1 	.word	0x004049f1

00404aa4 <__sfp_lock_acquire>:
  404aa4:	4801      	ldr	r0, [pc, #4]	; (404aac <__sfp_lock_acquire+0x8>)
  404aa6:	f000 bb1b 	b.w	4050e0 <__retarget_lock_acquire_recursive>
  404aaa:	bf00      	nop
  404aac:	20400b44 	.word	0x20400b44

00404ab0 <__sfp_lock_release>:
  404ab0:	4801      	ldr	r0, [pc, #4]	; (404ab8 <__sfp_lock_release+0x8>)
  404ab2:	f000 bb17 	b.w	4050e4 <__retarget_lock_release_recursive>
  404ab6:	bf00      	nop
  404ab8:	20400b44 	.word	0x20400b44

00404abc <__libc_fini_array>:
  404abc:	b538      	push	{r3, r4, r5, lr}
  404abe:	4c0a      	ldr	r4, [pc, #40]	; (404ae8 <__libc_fini_array+0x2c>)
  404ac0:	4d0a      	ldr	r5, [pc, #40]	; (404aec <__libc_fini_array+0x30>)
  404ac2:	1b64      	subs	r4, r4, r5
  404ac4:	10a4      	asrs	r4, r4, #2
  404ac6:	d00a      	beq.n	404ade <__libc_fini_array+0x22>
  404ac8:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  404acc:	3b01      	subs	r3, #1
  404ace:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  404ad2:	3c01      	subs	r4, #1
  404ad4:	f855 3904 	ldr.w	r3, [r5], #-4
  404ad8:	4798      	blx	r3
  404ada:	2c00      	cmp	r4, #0
  404adc:	d1f9      	bne.n	404ad2 <__libc_fini_array+0x16>
  404ade:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  404ae2:	f002 ba33 	b.w	406f4c <_fini>
  404ae6:	bf00      	nop
  404ae8:	00406f5c 	.word	0x00406f5c
  404aec:	00406f58 	.word	0x00406f58

00404af0 <_malloc_trim_r>:
  404af0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  404af2:	4f24      	ldr	r7, [pc, #144]	; (404b84 <_malloc_trim_r+0x94>)
  404af4:	460c      	mov	r4, r1
  404af6:	4606      	mov	r6, r0
  404af8:	f000 fef6 	bl	4058e8 <__malloc_lock>
  404afc:	68bb      	ldr	r3, [r7, #8]
  404afe:	685d      	ldr	r5, [r3, #4]
  404b00:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  404b04:	310f      	adds	r1, #15
  404b06:	f025 0503 	bic.w	r5, r5, #3
  404b0a:	4429      	add	r1, r5
  404b0c:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  404b10:	f021 010f 	bic.w	r1, r1, #15
  404b14:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  404b18:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  404b1c:	db07      	blt.n	404b2e <_malloc_trim_r+0x3e>
  404b1e:	2100      	movs	r1, #0
  404b20:	4630      	mov	r0, r6
  404b22:	f001 fb8d 	bl	406240 <_sbrk_r>
  404b26:	68bb      	ldr	r3, [r7, #8]
  404b28:	442b      	add	r3, r5
  404b2a:	4298      	cmp	r0, r3
  404b2c:	d004      	beq.n	404b38 <_malloc_trim_r+0x48>
  404b2e:	4630      	mov	r0, r6
  404b30:	f000 fee0 	bl	4058f4 <__malloc_unlock>
  404b34:	2000      	movs	r0, #0
  404b36:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404b38:	4261      	negs	r1, r4
  404b3a:	4630      	mov	r0, r6
  404b3c:	f001 fb80 	bl	406240 <_sbrk_r>
  404b40:	3001      	adds	r0, #1
  404b42:	d00d      	beq.n	404b60 <_malloc_trim_r+0x70>
  404b44:	4b10      	ldr	r3, [pc, #64]	; (404b88 <_malloc_trim_r+0x98>)
  404b46:	68ba      	ldr	r2, [r7, #8]
  404b48:	6819      	ldr	r1, [r3, #0]
  404b4a:	1b2d      	subs	r5, r5, r4
  404b4c:	f045 0501 	orr.w	r5, r5, #1
  404b50:	4630      	mov	r0, r6
  404b52:	1b09      	subs	r1, r1, r4
  404b54:	6055      	str	r5, [r2, #4]
  404b56:	6019      	str	r1, [r3, #0]
  404b58:	f000 fecc 	bl	4058f4 <__malloc_unlock>
  404b5c:	2001      	movs	r0, #1
  404b5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404b60:	2100      	movs	r1, #0
  404b62:	4630      	mov	r0, r6
  404b64:	f001 fb6c 	bl	406240 <_sbrk_r>
  404b68:	68ba      	ldr	r2, [r7, #8]
  404b6a:	1a83      	subs	r3, r0, r2
  404b6c:	2b0f      	cmp	r3, #15
  404b6e:	ddde      	ble.n	404b2e <_malloc_trim_r+0x3e>
  404b70:	4c06      	ldr	r4, [pc, #24]	; (404b8c <_malloc_trim_r+0x9c>)
  404b72:	4905      	ldr	r1, [pc, #20]	; (404b88 <_malloc_trim_r+0x98>)
  404b74:	6824      	ldr	r4, [r4, #0]
  404b76:	f043 0301 	orr.w	r3, r3, #1
  404b7a:	1b00      	subs	r0, r0, r4
  404b7c:	6053      	str	r3, [r2, #4]
  404b7e:	6008      	str	r0, [r1, #0]
  404b80:	e7d5      	b.n	404b2e <_malloc_trim_r+0x3e>
  404b82:	bf00      	nop
  404b84:	204005b0 	.word	0x204005b0
  404b88:	20400ae0 	.word	0x20400ae0
  404b8c:	204009b8 	.word	0x204009b8

00404b90 <_free_r>:
  404b90:	2900      	cmp	r1, #0
  404b92:	d044      	beq.n	404c1e <_free_r+0x8e>
  404b94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404b98:	460d      	mov	r5, r1
  404b9a:	4680      	mov	r8, r0
  404b9c:	f000 fea4 	bl	4058e8 <__malloc_lock>
  404ba0:	f855 7c04 	ldr.w	r7, [r5, #-4]
  404ba4:	4969      	ldr	r1, [pc, #420]	; (404d4c <_free_r+0x1bc>)
  404ba6:	f027 0301 	bic.w	r3, r7, #1
  404baa:	f1a5 0408 	sub.w	r4, r5, #8
  404bae:	18e2      	adds	r2, r4, r3
  404bb0:	688e      	ldr	r6, [r1, #8]
  404bb2:	6850      	ldr	r0, [r2, #4]
  404bb4:	42b2      	cmp	r2, r6
  404bb6:	f020 0003 	bic.w	r0, r0, #3
  404bba:	d05e      	beq.n	404c7a <_free_r+0xea>
  404bbc:	07fe      	lsls	r6, r7, #31
  404bbe:	6050      	str	r0, [r2, #4]
  404bc0:	d40b      	bmi.n	404bda <_free_r+0x4a>
  404bc2:	f855 7c08 	ldr.w	r7, [r5, #-8]
  404bc6:	1be4      	subs	r4, r4, r7
  404bc8:	f101 0e08 	add.w	lr, r1, #8
  404bcc:	68a5      	ldr	r5, [r4, #8]
  404bce:	4575      	cmp	r5, lr
  404bd0:	443b      	add	r3, r7
  404bd2:	d06d      	beq.n	404cb0 <_free_r+0x120>
  404bd4:	68e7      	ldr	r7, [r4, #12]
  404bd6:	60ef      	str	r7, [r5, #12]
  404bd8:	60bd      	str	r5, [r7, #8]
  404bda:	1815      	adds	r5, r2, r0
  404bdc:	686d      	ldr	r5, [r5, #4]
  404bde:	07ed      	lsls	r5, r5, #31
  404be0:	d53e      	bpl.n	404c60 <_free_r+0xd0>
  404be2:	f043 0201 	orr.w	r2, r3, #1
  404be6:	6062      	str	r2, [r4, #4]
  404be8:	50e3      	str	r3, [r4, r3]
  404bea:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  404bee:	d217      	bcs.n	404c20 <_free_r+0x90>
  404bf0:	08db      	lsrs	r3, r3, #3
  404bf2:	1c58      	adds	r0, r3, #1
  404bf4:	109a      	asrs	r2, r3, #2
  404bf6:	684d      	ldr	r5, [r1, #4]
  404bf8:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  404bfc:	60a7      	str	r7, [r4, #8]
  404bfe:	2301      	movs	r3, #1
  404c00:	4093      	lsls	r3, r2
  404c02:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  404c06:	432b      	orrs	r3, r5
  404c08:	3a08      	subs	r2, #8
  404c0a:	60e2      	str	r2, [r4, #12]
  404c0c:	604b      	str	r3, [r1, #4]
  404c0e:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  404c12:	60fc      	str	r4, [r7, #12]
  404c14:	4640      	mov	r0, r8
  404c16:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  404c1a:	f000 be6b 	b.w	4058f4 <__malloc_unlock>
  404c1e:	4770      	bx	lr
  404c20:	0a5a      	lsrs	r2, r3, #9
  404c22:	2a04      	cmp	r2, #4
  404c24:	d852      	bhi.n	404ccc <_free_r+0x13c>
  404c26:	099a      	lsrs	r2, r3, #6
  404c28:	f102 0739 	add.w	r7, r2, #57	; 0x39
  404c2c:	00ff      	lsls	r7, r7, #3
  404c2e:	f102 0538 	add.w	r5, r2, #56	; 0x38
  404c32:	19c8      	adds	r0, r1, r7
  404c34:	59ca      	ldr	r2, [r1, r7]
  404c36:	3808      	subs	r0, #8
  404c38:	4290      	cmp	r0, r2
  404c3a:	d04f      	beq.n	404cdc <_free_r+0x14c>
  404c3c:	6851      	ldr	r1, [r2, #4]
  404c3e:	f021 0103 	bic.w	r1, r1, #3
  404c42:	428b      	cmp	r3, r1
  404c44:	d232      	bcs.n	404cac <_free_r+0x11c>
  404c46:	6892      	ldr	r2, [r2, #8]
  404c48:	4290      	cmp	r0, r2
  404c4a:	d1f7      	bne.n	404c3c <_free_r+0xac>
  404c4c:	68c3      	ldr	r3, [r0, #12]
  404c4e:	60a0      	str	r0, [r4, #8]
  404c50:	60e3      	str	r3, [r4, #12]
  404c52:	609c      	str	r4, [r3, #8]
  404c54:	60c4      	str	r4, [r0, #12]
  404c56:	4640      	mov	r0, r8
  404c58:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  404c5c:	f000 be4a 	b.w	4058f4 <__malloc_unlock>
  404c60:	6895      	ldr	r5, [r2, #8]
  404c62:	4f3b      	ldr	r7, [pc, #236]	; (404d50 <_free_r+0x1c0>)
  404c64:	42bd      	cmp	r5, r7
  404c66:	4403      	add	r3, r0
  404c68:	d040      	beq.n	404cec <_free_r+0x15c>
  404c6a:	68d0      	ldr	r0, [r2, #12]
  404c6c:	60e8      	str	r0, [r5, #12]
  404c6e:	f043 0201 	orr.w	r2, r3, #1
  404c72:	6085      	str	r5, [r0, #8]
  404c74:	6062      	str	r2, [r4, #4]
  404c76:	50e3      	str	r3, [r4, r3]
  404c78:	e7b7      	b.n	404bea <_free_r+0x5a>
  404c7a:	07ff      	lsls	r7, r7, #31
  404c7c:	4403      	add	r3, r0
  404c7e:	d407      	bmi.n	404c90 <_free_r+0x100>
  404c80:	f855 2c08 	ldr.w	r2, [r5, #-8]
  404c84:	1aa4      	subs	r4, r4, r2
  404c86:	4413      	add	r3, r2
  404c88:	68a0      	ldr	r0, [r4, #8]
  404c8a:	68e2      	ldr	r2, [r4, #12]
  404c8c:	60c2      	str	r2, [r0, #12]
  404c8e:	6090      	str	r0, [r2, #8]
  404c90:	4a30      	ldr	r2, [pc, #192]	; (404d54 <_free_r+0x1c4>)
  404c92:	6812      	ldr	r2, [r2, #0]
  404c94:	f043 0001 	orr.w	r0, r3, #1
  404c98:	4293      	cmp	r3, r2
  404c9a:	6060      	str	r0, [r4, #4]
  404c9c:	608c      	str	r4, [r1, #8]
  404c9e:	d3b9      	bcc.n	404c14 <_free_r+0x84>
  404ca0:	4b2d      	ldr	r3, [pc, #180]	; (404d58 <_free_r+0x1c8>)
  404ca2:	4640      	mov	r0, r8
  404ca4:	6819      	ldr	r1, [r3, #0]
  404ca6:	f7ff ff23 	bl	404af0 <_malloc_trim_r>
  404caa:	e7b3      	b.n	404c14 <_free_r+0x84>
  404cac:	4610      	mov	r0, r2
  404cae:	e7cd      	b.n	404c4c <_free_r+0xbc>
  404cb0:	1811      	adds	r1, r2, r0
  404cb2:	6849      	ldr	r1, [r1, #4]
  404cb4:	07c9      	lsls	r1, r1, #31
  404cb6:	d444      	bmi.n	404d42 <_free_r+0x1b2>
  404cb8:	6891      	ldr	r1, [r2, #8]
  404cba:	68d2      	ldr	r2, [r2, #12]
  404cbc:	60ca      	str	r2, [r1, #12]
  404cbe:	4403      	add	r3, r0
  404cc0:	f043 0001 	orr.w	r0, r3, #1
  404cc4:	6091      	str	r1, [r2, #8]
  404cc6:	6060      	str	r0, [r4, #4]
  404cc8:	50e3      	str	r3, [r4, r3]
  404cca:	e7a3      	b.n	404c14 <_free_r+0x84>
  404ccc:	2a14      	cmp	r2, #20
  404cce:	d816      	bhi.n	404cfe <_free_r+0x16e>
  404cd0:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  404cd4:	00ff      	lsls	r7, r7, #3
  404cd6:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  404cda:	e7aa      	b.n	404c32 <_free_r+0xa2>
  404cdc:	10aa      	asrs	r2, r5, #2
  404cde:	2301      	movs	r3, #1
  404ce0:	684d      	ldr	r5, [r1, #4]
  404ce2:	4093      	lsls	r3, r2
  404ce4:	432b      	orrs	r3, r5
  404ce6:	604b      	str	r3, [r1, #4]
  404ce8:	4603      	mov	r3, r0
  404cea:	e7b0      	b.n	404c4e <_free_r+0xbe>
  404cec:	f043 0201 	orr.w	r2, r3, #1
  404cf0:	614c      	str	r4, [r1, #20]
  404cf2:	610c      	str	r4, [r1, #16]
  404cf4:	60e5      	str	r5, [r4, #12]
  404cf6:	60a5      	str	r5, [r4, #8]
  404cf8:	6062      	str	r2, [r4, #4]
  404cfa:	50e3      	str	r3, [r4, r3]
  404cfc:	e78a      	b.n	404c14 <_free_r+0x84>
  404cfe:	2a54      	cmp	r2, #84	; 0x54
  404d00:	d806      	bhi.n	404d10 <_free_r+0x180>
  404d02:	0b1a      	lsrs	r2, r3, #12
  404d04:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  404d08:	00ff      	lsls	r7, r7, #3
  404d0a:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  404d0e:	e790      	b.n	404c32 <_free_r+0xa2>
  404d10:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  404d14:	d806      	bhi.n	404d24 <_free_r+0x194>
  404d16:	0bda      	lsrs	r2, r3, #15
  404d18:	f102 0778 	add.w	r7, r2, #120	; 0x78
  404d1c:	00ff      	lsls	r7, r7, #3
  404d1e:	f102 0577 	add.w	r5, r2, #119	; 0x77
  404d22:	e786      	b.n	404c32 <_free_r+0xa2>
  404d24:	f240 5054 	movw	r0, #1364	; 0x554
  404d28:	4282      	cmp	r2, r0
  404d2a:	d806      	bhi.n	404d3a <_free_r+0x1aa>
  404d2c:	0c9a      	lsrs	r2, r3, #18
  404d2e:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  404d32:	00ff      	lsls	r7, r7, #3
  404d34:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  404d38:	e77b      	b.n	404c32 <_free_r+0xa2>
  404d3a:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  404d3e:	257e      	movs	r5, #126	; 0x7e
  404d40:	e777      	b.n	404c32 <_free_r+0xa2>
  404d42:	f043 0101 	orr.w	r1, r3, #1
  404d46:	6061      	str	r1, [r4, #4]
  404d48:	6013      	str	r3, [r2, #0]
  404d4a:	e763      	b.n	404c14 <_free_r+0x84>
  404d4c:	204005b0 	.word	0x204005b0
  404d50:	204005b8 	.word	0x204005b8
  404d54:	204009bc 	.word	0x204009bc
  404d58:	20400b10 	.word	0x20400b10

00404d5c <__sfvwrite_r>:
  404d5c:	6893      	ldr	r3, [r2, #8]
  404d5e:	2b00      	cmp	r3, #0
  404d60:	d073      	beq.n	404e4a <__sfvwrite_r+0xee>
  404d62:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404d66:	898b      	ldrh	r3, [r1, #12]
  404d68:	b083      	sub	sp, #12
  404d6a:	460c      	mov	r4, r1
  404d6c:	0719      	lsls	r1, r3, #28
  404d6e:	9000      	str	r0, [sp, #0]
  404d70:	4616      	mov	r6, r2
  404d72:	d526      	bpl.n	404dc2 <__sfvwrite_r+0x66>
  404d74:	6922      	ldr	r2, [r4, #16]
  404d76:	b322      	cbz	r2, 404dc2 <__sfvwrite_r+0x66>
  404d78:	f013 0002 	ands.w	r0, r3, #2
  404d7c:	6835      	ldr	r5, [r6, #0]
  404d7e:	d02c      	beq.n	404dda <__sfvwrite_r+0x7e>
  404d80:	f04f 0900 	mov.w	r9, #0
  404d84:	4fb0      	ldr	r7, [pc, #704]	; (405048 <__sfvwrite_r+0x2ec>)
  404d86:	46c8      	mov	r8, r9
  404d88:	46b2      	mov	sl, r6
  404d8a:	45b8      	cmp	r8, r7
  404d8c:	4643      	mov	r3, r8
  404d8e:	464a      	mov	r2, r9
  404d90:	bf28      	it	cs
  404d92:	463b      	movcs	r3, r7
  404d94:	9800      	ldr	r0, [sp, #0]
  404d96:	f1b8 0f00 	cmp.w	r8, #0
  404d9a:	d050      	beq.n	404e3e <__sfvwrite_r+0xe2>
  404d9c:	69e1      	ldr	r1, [r4, #28]
  404d9e:	6a66      	ldr	r6, [r4, #36]	; 0x24
  404da0:	47b0      	blx	r6
  404da2:	2800      	cmp	r0, #0
  404da4:	dd58      	ble.n	404e58 <__sfvwrite_r+0xfc>
  404da6:	f8da 3008 	ldr.w	r3, [sl, #8]
  404daa:	1a1b      	subs	r3, r3, r0
  404dac:	4481      	add	r9, r0
  404dae:	eba8 0800 	sub.w	r8, r8, r0
  404db2:	f8ca 3008 	str.w	r3, [sl, #8]
  404db6:	2b00      	cmp	r3, #0
  404db8:	d1e7      	bne.n	404d8a <__sfvwrite_r+0x2e>
  404dba:	2000      	movs	r0, #0
  404dbc:	b003      	add	sp, #12
  404dbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404dc2:	4621      	mov	r1, r4
  404dc4:	9800      	ldr	r0, [sp, #0]
  404dc6:	f7fe fd17 	bl	4037f8 <__swsetup_r>
  404dca:	2800      	cmp	r0, #0
  404dcc:	f040 8133 	bne.w	405036 <__sfvwrite_r+0x2da>
  404dd0:	89a3      	ldrh	r3, [r4, #12]
  404dd2:	6835      	ldr	r5, [r6, #0]
  404dd4:	f013 0002 	ands.w	r0, r3, #2
  404dd8:	d1d2      	bne.n	404d80 <__sfvwrite_r+0x24>
  404dda:	f013 0901 	ands.w	r9, r3, #1
  404dde:	d145      	bne.n	404e6c <__sfvwrite_r+0x110>
  404de0:	464f      	mov	r7, r9
  404de2:	9601      	str	r6, [sp, #4]
  404de4:	b337      	cbz	r7, 404e34 <__sfvwrite_r+0xd8>
  404de6:	059a      	lsls	r2, r3, #22
  404de8:	f8d4 8008 	ldr.w	r8, [r4, #8]
  404dec:	f140 8083 	bpl.w	404ef6 <__sfvwrite_r+0x19a>
  404df0:	4547      	cmp	r7, r8
  404df2:	46c3      	mov	fp, r8
  404df4:	f0c0 80ab 	bcc.w	404f4e <__sfvwrite_r+0x1f2>
  404df8:	f413 6f90 	tst.w	r3, #1152	; 0x480
  404dfc:	f040 80ac 	bne.w	404f58 <__sfvwrite_r+0x1fc>
  404e00:	6820      	ldr	r0, [r4, #0]
  404e02:	46ba      	mov	sl, r7
  404e04:	465a      	mov	r2, fp
  404e06:	4649      	mov	r1, r9
  404e08:	f000 fd0a 	bl	405820 <memmove>
  404e0c:	68a2      	ldr	r2, [r4, #8]
  404e0e:	6823      	ldr	r3, [r4, #0]
  404e10:	eba2 0208 	sub.w	r2, r2, r8
  404e14:	445b      	add	r3, fp
  404e16:	60a2      	str	r2, [r4, #8]
  404e18:	6023      	str	r3, [r4, #0]
  404e1a:	9a01      	ldr	r2, [sp, #4]
  404e1c:	6893      	ldr	r3, [r2, #8]
  404e1e:	eba3 030a 	sub.w	r3, r3, sl
  404e22:	44d1      	add	r9, sl
  404e24:	eba7 070a 	sub.w	r7, r7, sl
  404e28:	6093      	str	r3, [r2, #8]
  404e2a:	2b00      	cmp	r3, #0
  404e2c:	d0c5      	beq.n	404dba <__sfvwrite_r+0x5e>
  404e2e:	89a3      	ldrh	r3, [r4, #12]
  404e30:	2f00      	cmp	r7, #0
  404e32:	d1d8      	bne.n	404de6 <__sfvwrite_r+0x8a>
  404e34:	f8d5 9000 	ldr.w	r9, [r5]
  404e38:	686f      	ldr	r7, [r5, #4]
  404e3a:	3508      	adds	r5, #8
  404e3c:	e7d2      	b.n	404de4 <__sfvwrite_r+0x88>
  404e3e:	f8d5 9000 	ldr.w	r9, [r5]
  404e42:	f8d5 8004 	ldr.w	r8, [r5, #4]
  404e46:	3508      	adds	r5, #8
  404e48:	e79f      	b.n	404d8a <__sfvwrite_r+0x2e>
  404e4a:	2000      	movs	r0, #0
  404e4c:	4770      	bx	lr
  404e4e:	4621      	mov	r1, r4
  404e50:	9800      	ldr	r0, [sp, #0]
  404e52:	f7ff fda3 	bl	40499c <_fflush_r>
  404e56:	b370      	cbz	r0, 404eb6 <__sfvwrite_r+0x15a>
  404e58:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404e5c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404e60:	f04f 30ff 	mov.w	r0, #4294967295
  404e64:	81a3      	strh	r3, [r4, #12]
  404e66:	b003      	add	sp, #12
  404e68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404e6c:	4681      	mov	r9, r0
  404e6e:	4633      	mov	r3, r6
  404e70:	464e      	mov	r6, r9
  404e72:	46a8      	mov	r8, r5
  404e74:	469a      	mov	sl, r3
  404e76:	464d      	mov	r5, r9
  404e78:	b34e      	cbz	r6, 404ece <__sfvwrite_r+0x172>
  404e7a:	b380      	cbz	r0, 404ede <__sfvwrite_r+0x182>
  404e7c:	6820      	ldr	r0, [r4, #0]
  404e7e:	6923      	ldr	r3, [r4, #16]
  404e80:	6962      	ldr	r2, [r4, #20]
  404e82:	45b1      	cmp	r9, r6
  404e84:	46cb      	mov	fp, r9
  404e86:	bf28      	it	cs
  404e88:	46b3      	movcs	fp, r6
  404e8a:	4298      	cmp	r0, r3
  404e8c:	465f      	mov	r7, fp
  404e8e:	d904      	bls.n	404e9a <__sfvwrite_r+0x13e>
  404e90:	68a3      	ldr	r3, [r4, #8]
  404e92:	4413      	add	r3, r2
  404e94:	459b      	cmp	fp, r3
  404e96:	f300 80a6 	bgt.w	404fe6 <__sfvwrite_r+0x28a>
  404e9a:	4593      	cmp	fp, r2
  404e9c:	db4b      	blt.n	404f36 <__sfvwrite_r+0x1da>
  404e9e:	4613      	mov	r3, r2
  404ea0:	6a67      	ldr	r7, [r4, #36]	; 0x24
  404ea2:	69e1      	ldr	r1, [r4, #28]
  404ea4:	9800      	ldr	r0, [sp, #0]
  404ea6:	462a      	mov	r2, r5
  404ea8:	47b8      	blx	r7
  404eaa:	1e07      	subs	r7, r0, #0
  404eac:	ddd4      	ble.n	404e58 <__sfvwrite_r+0xfc>
  404eae:	ebb9 0907 	subs.w	r9, r9, r7
  404eb2:	d0cc      	beq.n	404e4e <__sfvwrite_r+0xf2>
  404eb4:	2001      	movs	r0, #1
  404eb6:	f8da 3008 	ldr.w	r3, [sl, #8]
  404eba:	1bdb      	subs	r3, r3, r7
  404ebc:	443d      	add	r5, r7
  404ebe:	1bf6      	subs	r6, r6, r7
  404ec0:	f8ca 3008 	str.w	r3, [sl, #8]
  404ec4:	2b00      	cmp	r3, #0
  404ec6:	f43f af78 	beq.w	404dba <__sfvwrite_r+0x5e>
  404eca:	2e00      	cmp	r6, #0
  404ecc:	d1d5      	bne.n	404e7a <__sfvwrite_r+0x11e>
  404ece:	f108 0308 	add.w	r3, r8, #8
  404ed2:	e913 0060 	ldmdb	r3, {r5, r6}
  404ed6:	4698      	mov	r8, r3
  404ed8:	3308      	adds	r3, #8
  404eda:	2e00      	cmp	r6, #0
  404edc:	d0f9      	beq.n	404ed2 <__sfvwrite_r+0x176>
  404ede:	4632      	mov	r2, r6
  404ee0:	210a      	movs	r1, #10
  404ee2:	4628      	mov	r0, r5
  404ee4:	f000 fc4c 	bl	405780 <memchr>
  404ee8:	2800      	cmp	r0, #0
  404eea:	f000 80a1 	beq.w	405030 <__sfvwrite_r+0x2d4>
  404eee:	3001      	adds	r0, #1
  404ef0:	eba0 0905 	sub.w	r9, r0, r5
  404ef4:	e7c2      	b.n	404e7c <__sfvwrite_r+0x120>
  404ef6:	6820      	ldr	r0, [r4, #0]
  404ef8:	6923      	ldr	r3, [r4, #16]
  404efa:	4298      	cmp	r0, r3
  404efc:	d802      	bhi.n	404f04 <__sfvwrite_r+0x1a8>
  404efe:	6963      	ldr	r3, [r4, #20]
  404f00:	429f      	cmp	r7, r3
  404f02:	d25d      	bcs.n	404fc0 <__sfvwrite_r+0x264>
  404f04:	45b8      	cmp	r8, r7
  404f06:	bf28      	it	cs
  404f08:	46b8      	movcs	r8, r7
  404f0a:	4642      	mov	r2, r8
  404f0c:	4649      	mov	r1, r9
  404f0e:	f000 fc87 	bl	405820 <memmove>
  404f12:	68a3      	ldr	r3, [r4, #8]
  404f14:	6822      	ldr	r2, [r4, #0]
  404f16:	eba3 0308 	sub.w	r3, r3, r8
  404f1a:	4442      	add	r2, r8
  404f1c:	60a3      	str	r3, [r4, #8]
  404f1e:	6022      	str	r2, [r4, #0]
  404f20:	b10b      	cbz	r3, 404f26 <__sfvwrite_r+0x1ca>
  404f22:	46c2      	mov	sl, r8
  404f24:	e779      	b.n	404e1a <__sfvwrite_r+0xbe>
  404f26:	4621      	mov	r1, r4
  404f28:	9800      	ldr	r0, [sp, #0]
  404f2a:	f7ff fd37 	bl	40499c <_fflush_r>
  404f2e:	2800      	cmp	r0, #0
  404f30:	d192      	bne.n	404e58 <__sfvwrite_r+0xfc>
  404f32:	46c2      	mov	sl, r8
  404f34:	e771      	b.n	404e1a <__sfvwrite_r+0xbe>
  404f36:	465a      	mov	r2, fp
  404f38:	4629      	mov	r1, r5
  404f3a:	f000 fc71 	bl	405820 <memmove>
  404f3e:	68a2      	ldr	r2, [r4, #8]
  404f40:	6823      	ldr	r3, [r4, #0]
  404f42:	eba2 020b 	sub.w	r2, r2, fp
  404f46:	445b      	add	r3, fp
  404f48:	60a2      	str	r2, [r4, #8]
  404f4a:	6023      	str	r3, [r4, #0]
  404f4c:	e7af      	b.n	404eae <__sfvwrite_r+0x152>
  404f4e:	6820      	ldr	r0, [r4, #0]
  404f50:	46b8      	mov	r8, r7
  404f52:	46ba      	mov	sl, r7
  404f54:	46bb      	mov	fp, r7
  404f56:	e755      	b.n	404e04 <__sfvwrite_r+0xa8>
  404f58:	6962      	ldr	r2, [r4, #20]
  404f5a:	6820      	ldr	r0, [r4, #0]
  404f5c:	6921      	ldr	r1, [r4, #16]
  404f5e:	eb02 0842 	add.w	r8, r2, r2, lsl #1
  404f62:	eba0 0a01 	sub.w	sl, r0, r1
  404f66:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
  404f6a:	f10a 0001 	add.w	r0, sl, #1
  404f6e:	ea4f 0868 	mov.w	r8, r8, asr #1
  404f72:	4438      	add	r0, r7
  404f74:	4540      	cmp	r0, r8
  404f76:	4642      	mov	r2, r8
  404f78:	bf84      	itt	hi
  404f7a:	4680      	movhi	r8, r0
  404f7c:	4642      	movhi	r2, r8
  404f7e:	055b      	lsls	r3, r3, #21
  404f80:	d544      	bpl.n	40500c <__sfvwrite_r+0x2b0>
  404f82:	4611      	mov	r1, r2
  404f84:	9800      	ldr	r0, [sp, #0]
  404f86:	f000 f92f 	bl	4051e8 <_malloc_r>
  404f8a:	4683      	mov	fp, r0
  404f8c:	2800      	cmp	r0, #0
  404f8e:	d055      	beq.n	40503c <__sfvwrite_r+0x2e0>
  404f90:	4652      	mov	r2, sl
  404f92:	6921      	ldr	r1, [r4, #16]
  404f94:	f7fc fea2 	bl	401cdc <memcpy>
  404f98:	89a3      	ldrh	r3, [r4, #12]
  404f9a:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
  404f9e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  404fa2:	81a3      	strh	r3, [r4, #12]
  404fa4:	eb0b 000a 	add.w	r0, fp, sl
  404fa8:	eba8 030a 	sub.w	r3, r8, sl
  404fac:	f8c4 b010 	str.w	fp, [r4, #16]
  404fb0:	f8c4 8014 	str.w	r8, [r4, #20]
  404fb4:	6020      	str	r0, [r4, #0]
  404fb6:	60a3      	str	r3, [r4, #8]
  404fb8:	46b8      	mov	r8, r7
  404fba:	46ba      	mov	sl, r7
  404fbc:	46bb      	mov	fp, r7
  404fbe:	e721      	b.n	404e04 <__sfvwrite_r+0xa8>
  404fc0:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
  404fc4:	42b9      	cmp	r1, r7
  404fc6:	bf28      	it	cs
  404fc8:	4639      	movcs	r1, r7
  404fca:	464a      	mov	r2, r9
  404fcc:	fb91 f1f3 	sdiv	r1, r1, r3
  404fd0:	9800      	ldr	r0, [sp, #0]
  404fd2:	6a66      	ldr	r6, [r4, #36]	; 0x24
  404fd4:	fb03 f301 	mul.w	r3, r3, r1
  404fd8:	69e1      	ldr	r1, [r4, #28]
  404fda:	47b0      	blx	r6
  404fdc:	f1b0 0a00 	subs.w	sl, r0, #0
  404fe0:	f73f af1b 	bgt.w	404e1a <__sfvwrite_r+0xbe>
  404fe4:	e738      	b.n	404e58 <__sfvwrite_r+0xfc>
  404fe6:	461a      	mov	r2, r3
  404fe8:	4629      	mov	r1, r5
  404fea:	9301      	str	r3, [sp, #4]
  404fec:	f000 fc18 	bl	405820 <memmove>
  404ff0:	6822      	ldr	r2, [r4, #0]
  404ff2:	9b01      	ldr	r3, [sp, #4]
  404ff4:	9800      	ldr	r0, [sp, #0]
  404ff6:	441a      	add	r2, r3
  404ff8:	6022      	str	r2, [r4, #0]
  404ffa:	4621      	mov	r1, r4
  404ffc:	f7ff fcce 	bl	40499c <_fflush_r>
  405000:	9b01      	ldr	r3, [sp, #4]
  405002:	2800      	cmp	r0, #0
  405004:	f47f af28 	bne.w	404e58 <__sfvwrite_r+0xfc>
  405008:	461f      	mov	r7, r3
  40500a:	e750      	b.n	404eae <__sfvwrite_r+0x152>
  40500c:	9800      	ldr	r0, [sp, #0]
  40500e:	f000 ff71 	bl	405ef4 <_realloc_r>
  405012:	4683      	mov	fp, r0
  405014:	2800      	cmp	r0, #0
  405016:	d1c5      	bne.n	404fa4 <__sfvwrite_r+0x248>
  405018:	9d00      	ldr	r5, [sp, #0]
  40501a:	6921      	ldr	r1, [r4, #16]
  40501c:	4628      	mov	r0, r5
  40501e:	f7ff fdb7 	bl	404b90 <_free_r>
  405022:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  405026:	220c      	movs	r2, #12
  405028:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  40502c:	602a      	str	r2, [r5, #0]
  40502e:	e715      	b.n	404e5c <__sfvwrite_r+0x100>
  405030:	f106 0901 	add.w	r9, r6, #1
  405034:	e722      	b.n	404e7c <__sfvwrite_r+0x120>
  405036:	f04f 30ff 	mov.w	r0, #4294967295
  40503a:	e6bf      	b.n	404dbc <__sfvwrite_r+0x60>
  40503c:	9a00      	ldr	r2, [sp, #0]
  40503e:	230c      	movs	r3, #12
  405040:	6013      	str	r3, [r2, #0]
  405042:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  405046:	e709      	b.n	404e5c <__sfvwrite_r+0x100>
  405048:	7ffffc00 	.word	0x7ffffc00

0040504c <_fwalk_reent>:
  40504c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  405050:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  405054:	d01f      	beq.n	405096 <_fwalk_reent+0x4a>
  405056:	4688      	mov	r8, r1
  405058:	4606      	mov	r6, r0
  40505a:	f04f 0900 	mov.w	r9, #0
  40505e:	687d      	ldr	r5, [r7, #4]
  405060:	68bc      	ldr	r4, [r7, #8]
  405062:	3d01      	subs	r5, #1
  405064:	d411      	bmi.n	40508a <_fwalk_reent+0x3e>
  405066:	89a3      	ldrh	r3, [r4, #12]
  405068:	2b01      	cmp	r3, #1
  40506a:	f105 35ff 	add.w	r5, r5, #4294967295
  40506e:	d908      	bls.n	405082 <_fwalk_reent+0x36>
  405070:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  405074:	3301      	adds	r3, #1
  405076:	4621      	mov	r1, r4
  405078:	4630      	mov	r0, r6
  40507a:	d002      	beq.n	405082 <_fwalk_reent+0x36>
  40507c:	47c0      	blx	r8
  40507e:	ea49 0900 	orr.w	r9, r9, r0
  405082:	1c6b      	adds	r3, r5, #1
  405084:	f104 0468 	add.w	r4, r4, #104	; 0x68
  405088:	d1ed      	bne.n	405066 <_fwalk_reent+0x1a>
  40508a:	683f      	ldr	r7, [r7, #0]
  40508c:	2f00      	cmp	r7, #0
  40508e:	d1e6      	bne.n	40505e <_fwalk_reent+0x12>
  405090:	4648      	mov	r0, r9
  405092:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405096:	46b9      	mov	r9, r7
  405098:	4648      	mov	r0, r9
  40509a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40509e:	bf00      	nop

004050a0 <__locale_mb_cur_max>:
  4050a0:	4b04      	ldr	r3, [pc, #16]	; (4050b4 <__locale_mb_cur_max+0x14>)
  4050a2:	4a05      	ldr	r2, [pc, #20]	; (4050b8 <__locale_mb_cur_max+0x18>)
  4050a4:	681b      	ldr	r3, [r3, #0]
  4050a6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  4050a8:	2b00      	cmp	r3, #0
  4050aa:	bf08      	it	eq
  4050ac:	4613      	moveq	r3, r2
  4050ae:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
  4050b2:	4770      	bx	lr
  4050b4:	20400010 	.word	0x20400010
  4050b8:	20400444 	.word	0x20400444

004050bc <_localeconv_r>:
  4050bc:	4a04      	ldr	r2, [pc, #16]	; (4050d0 <_localeconv_r+0x14>)
  4050be:	4b05      	ldr	r3, [pc, #20]	; (4050d4 <_localeconv_r+0x18>)
  4050c0:	6812      	ldr	r2, [r2, #0]
  4050c2:	6b50      	ldr	r0, [r2, #52]	; 0x34
  4050c4:	2800      	cmp	r0, #0
  4050c6:	bf08      	it	eq
  4050c8:	4618      	moveq	r0, r3
  4050ca:	30f0      	adds	r0, #240	; 0xf0
  4050cc:	4770      	bx	lr
  4050ce:	bf00      	nop
  4050d0:	20400010 	.word	0x20400010
  4050d4:	20400444 	.word	0x20400444

004050d8 <__retarget_lock_init_recursive>:
  4050d8:	4770      	bx	lr
  4050da:	bf00      	nop

004050dc <__retarget_lock_close_recursive>:
  4050dc:	4770      	bx	lr
  4050de:	bf00      	nop

004050e0 <__retarget_lock_acquire_recursive>:
  4050e0:	4770      	bx	lr
  4050e2:	bf00      	nop

004050e4 <__retarget_lock_release_recursive>:
  4050e4:	4770      	bx	lr
  4050e6:	bf00      	nop

004050e8 <__swhatbuf_r>:
  4050e8:	b570      	push	{r4, r5, r6, lr}
  4050ea:	460c      	mov	r4, r1
  4050ec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4050f0:	2900      	cmp	r1, #0
  4050f2:	b090      	sub	sp, #64	; 0x40
  4050f4:	4615      	mov	r5, r2
  4050f6:	461e      	mov	r6, r3
  4050f8:	db14      	blt.n	405124 <__swhatbuf_r+0x3c>
  4050fa:	aa01      	add	r2, sp, #4
  4050fc:	f001 fb46 	bl	40678c <_fstat_r>
  405100:	2800      	cmp	r0, #0
  405102:	db0f      	blt.n	405124 <__swhatbuf_r+0x3c>
  405104:	9a02      	ldr	r2, [sp, #8]
  405106:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
  40510a:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
  40510e:	fab2 f282 	clz	r2, r2
  405112:	0952      	lsrs	r2, r2, #5
  405114:	f44f 6380 	mov.w	r3, #1024	; 0x400
  405118:	f44f 6000 	mov.w	r0, #2048	; 0x800
  40511c:	6032      	str	r2, [r6, #0]
  40511e:	602b      	str	r3, [r5, #0]
  405120:	b010      	add	sp, #64	; 0x40
  405122:	bd70      	pop	{r4, r5, r6, pc}
  405124:	89a2      	ldrh	r2, [r4, #12]
  405126:	2300      	movs	r3, #0
  405128:	f012 0080 	ands.w	r0, r2, #128	; 0x80
  40512c:	6033      	str	r3, [r6, #0]
  40512e:	d004      	beq.n	40513a <__swhatbuf_r+0x52>
  405130:	2240      	movs	r2, #64	; 0x40
  405132:	4618      	mov	r0, r3
  405134:	602a      	str	r2, [r5, #0]
  405136:	b010      	add	sp, #64	; 0x40
  405138:	bd70      	pop	{r4, r5, r6, pc}
  40513a:	f44f 6380 	mov.w	r3, #1024	; 0x400
  40513e:	602b      	str	r3, [r5, #0]
  405140:	b010      	add	sp, #64	; 0x40
  405142:	bd70      	pop	{r4, r5, r6, pc}

00405144 <__smakebuf_r>:
  405144:	898a      	ldrh	r2, [r1, #12]
  405146:	0792      	lsls	r2, r2, #30
  405148:	460b      	mov	r3, r1
  40514a:	d506      	bpl.n	40515a <__smakebuf_r+0x16>
  40514c:	f101 0243 	add.w	r2, r1, #67	; 0x43
  405150:	2101      	movs	r1, #1
  405152:	601a      	str	r2, [r3, #0]
  405154:	611a      	str	r2, [r3, #16]
  405156:	6159      	str	r1, [r3, #20]
  405158:	4770      	bx	lr
  40515a:	b5f0      	push	{r4, r5, r6, r7, lr}
  40515c:	b083      	sub	sp, #12
  40515e:	ab01      	add	r3, sp, #4
  405160:	466a      	mov	r2, sp
  405162:	460c      	mov	r4, r1
  405164:	4606      	mov	r6, r0
  405166:	f7ff ffbf 	bl	4050e8 <__swhatbuf_r>
  40516a:	9900      	ldr	r1, [sp, #0]
  40516c:	4605      	mov	r5, r0
  40516e:	4630      	mov	r0, r6
  405170:	f000 f83a 	bl	4051e8 <_malloc_r>
  405174:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  405178:	b1d8      	cbz	r0, 4051b2 <__smakebuf_r+0x6e>
  40517a:	9a01      	ldr	r2, [sp, #4]
  40517c:	4f15      	ldr	r7, [pc, #84]	; (4051d4 <__smakebuf_r+0x90>)
  40517e:	9900      	ldr	r1, [sp, #0]
  405180:	63f7      	str	r7, [r6, #60]	; 0x3c
  405182:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  405186:	81a3      	strh	r3, [r4, #12]
  405188:	6020      	str	r0, [r4, #0]
  40518a:	6120      	str	r0, [r4, #16]
  40518c:	6161      	str	r1, [r4, #20]
  40518e:	b91a      	cbnz	r2, 405198 <__smakebuf_r+0x54>
  405190:	432b      	orrs	r3, r5
  405192:	81a3      	strh	r3, [r4, #12]
  405194:	b003      	add	sp, #12
  405196:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405198:	4630      	mov	r0, r6
  40519a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  40519e:	f001 fb09 	bl	4067b4 <_isatty_r>
  4051a2:	b1a0      	cbz	r0, 4051ce <__smakebuf_r+0x8a>
  4051a4:	89a3      	ldrh	r3, [r4, #12]
  4051a6:	f023 0303 	bic.w	r3, r3, #3
  4051aa:	f043 0301 	orr.w	r3, r3, #1
  4051ae:	b21b      	sxth	r3, r3
  4051b0:	e7ee      	b.n	405190 <__smakebuf_r+0x4c>
  4051b2:	059a      	lsls	r2, r3, #22
  4051b4:	d4ee      	bmi.n	405194 <__smakebuf_r+0x50>
  4051b6:	f023 0303 	bic.w	r3, r3, #3
  4051ba:	f104 0243 	add.w	r2, r4, #67	; 0x43
  4051be:	f043 0302 	orr.w	r3, r3, #2
  4051c2:	2101      	movs	r1, #1
  4051c4:	81a3      	strh	r3, [r4, #12]
  4051c6:	6022      	str	r2, [r4, #0]
  4051c8:	6122      	str	r2, [r4, #16]
  4051ca:	6161      	str	r1, [r4, #20]
  4051cc:	e7e2      	b.n	405194 <__smakebuf_r+0x50>
  4051ce:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4051d2:	e7dd      	b.n	405190 <__smakebuf_r+0x4c>
  4051d4:	004049f1 	.word	0x004049f1

004051d8 <malloc>:
  4051d8:	4b02      	ldr	r3, [pc, #8]	; (4051e4 <malloc+0xc>)
  4051da:	4601      	mov	r1, r0
  4051dc:	6818      	ldr	r0, [r3, #0]
  4051de:	f000 b803 	b.w	4051e8 <_malloc_r>
  4051e2:	bf00      	nop
  4051e4:	20400010 	.word	0x20400010

004051e8 <_malloc_r>:
  4051e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4051ec:	f101 060b 	add.w	r6, r1, #11
  4051f0:	2e16      	cmp	r6, #22
  4051f2:	b083      	sub	sp, #12
  4051f4:	4605      	mov	r5, r0
  4051f6:	f240 809e 	bls.w	405336 <_malloc_r+0x14e>
  4051fa:	f036 0607 	bics.w	r6, r6, #7
  4051fe:	f100 80bd 	bmi.w	40537c <_malloc_r+0x194>
  405202:	42b1      	cmp	r1, r6
  405204:	f200 80ba 	bhi.w	40537c <_malloc_r+0x194>
  405208:	f000 fb6e 	bl	4058e8 <__malloc_lock>
  40520c:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  405210:	f0c0 8293 	bcc.w	40573a <_malloc_r+0x552>
  405214:	0a73      	lsrs	r3, r6, #9
  405216:	f000 80b8 	beq.w	40538a <_malloc_r+0x1a2>
  40521a:	2b04      	cmp	r3, #4
  40521c:	f200 8179 	bhi.w	405512 <_malloc_r+0x32a>
  405220:	09b3      	lsrs	r3, r6, #6
  405222:	f103 0039 	add.w	r0, r3, #57	; 0x39
  405226:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  40522a:	00c3      	lsls	r3, r0, #3
  40522c:	4fbf      	ldr	r7, [pc, #764]	; (40552c <_malloc_r+0x344>)
  40522e:	443b      	add	r3, r7
  405230:	f1a3 0108 	sub.w	r1, r3, #8
  405234:	685c      	ldr	r4, [r3, #4]
  405236:	42a1      	cmp	r1, r4
  405238:	d106      	bne.n	405248 <_malloc_r+0x60>
  40523a:	e00c      	b.n	405256 <_malloc_r+0x6e>
  40523c:	2a00      	cmp	r2, #0
  40523e:	f280 80aa 	bge.w	405396 <_malloc_r+0x1ae>
  405242:	68e4      	ldr	r4, [r4, #12]
  405244:	42a1      	cmp	r1, r4
  405246:	d006      	beq.n	405256 <_malloc_r+0x6e>
  405248:	6863      	ldr	r3, [r4, #4]
  40524a:	f023 0303 	bic.w	r3, r3, #3
  40524e:	1b9a      	subs	r2, r3, r6
  405250:	2a0f      	cmp	r2, #15
  405252:	ddf3      	ble.n	40523c <_malloc_r+0x54>
  405254:	4670      	mov	r0, lr
  405256:	693c      	ldr	r4, [r7, #16]
  405258:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 405540 <_malloc_r+0x358>
  40525c:	4574      	cmp	r4, lr
  40525e:	f000 81ab 	beq.w	4055b8 <_malloc_r+0x3d0>
  405262:	6863      	ldr	r3, [r4, #4]
  405264:	f023 0303 	bic.w	r3, r3, #3
  405268:	1b9a      	subs	r2, r3, r6
  40526a:	2a0f      	cmp	r2, #15
  40526c:	f300 8190 	bgt.w	405590 <_malloc_r+0x3a8>
  405270:	2a00      	cmp	r2, #0
  405272:	f8c7 e014 	str.w	lr, [r7, #20]
  405276:	f8c7 e010 	str.w	lr, [r7, #16]
  40527a:	f280 809d 	bge.w	4053b8 <_malloc_r+0x1d0>
  40527e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  405282:	f080 8161 	bcs.w	405548 <_malloc_r+0x360>
  405286:	08db      	lsrs	r3, r3, #3
  405288:	f103 0c01 	add.w	ip, r3, #1
  40528c:	1099      	asrs	r1, r3, #2
  40528e:	687a      	ldr	r2, [r7, #4]
  405290:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  405294:	f8c4 8008 	str.w	r8, [r4, #8]
  405298:	2301      	movs	r3, #1
  40529a:	408b      	lsls	r3, r1
  40529c:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  4052a0:	4313      	orrs	r3, r2
  4052a2:	3908      	subs	r1, #8
  4052a4:	60e1      	str	r1, [r4, #12]
  4052a6:	607b      	str	r3, [r7, #4]
  4052a8:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  4052ac:	f8c8 400c 	str.w	r4, [r8, #12]
  4052b0:	1082      	asrs	r2, r0, #2
  4052b2:	2401      	movs	r4, #1
  4052b4:	4094      	lsls	r4, r2
  4052b6:	429c      	cmp	r4, r3
  4052b8:	f200 808b 	bhi.w	4053d2 <_malloc_r+0x1ea>
  4052bc:	421c      	tst	r4, r3
  4052be:	d106      	bne.n	4052ce <_malloc_r+0xe6>
  4052c0:	f020 0003 	bic.w	r0, r0, #3
  4052c4:	0064      	lsls	r4, r4, #1
  4052c6:	421c      	tst	r4, r3
  4052c8:	f100 0004 	add.w	r0, r0, #4
  4052cc:	d0fa      	beq.n	4052c4 <_malloc_r+0xdc>
  4052ce:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  4052d2:	46cc      	mov	ip, r9
  4052d4:	4680      	mov	r8, r0
  4052d6:	f8dc 300c 	ldr.w	r3, [ip, #12]
  4052da:	459c      	cmp	ip, r3
  4052dc:	d107      	bne.n	4052ee <_malloc_r+0x106>
  4052de:	e16d      	b.n	4055bc <_malloc_r+0x3d4>
  4052e0:	2a00      	cmp	r2, #0
  4052e2:	f280 817b 	bge.w	4055dc <_malloc_r+0x3f4>
  4052e6:	68db      	ldr	r3, [r3, #12]
  4052e8:	459c      	cmp	ip, r3
  4052ea:	f000 8167 	beq.w	4055bc <_malloc_r+0x3d4>
  4052ee:	6859      	ldr	r1, [r3, #4]
  4052f0:	f021 0103 	bic.w	r1, r1, #3
  4052f4:	1b8a      	subs	r2, r1, r6
  4052f6:	2a0f      	cmp	r2, #15
  4052f8:	ddf2      	ble.n	4052e0 <_malloc_r+0xf8>
  4052fa:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  4052fe:	f8d3 8008 	ldr.w	r8, [r3, #8]
  405302:	9300      	str	r3, [sp, #0]
  405304:	199c      	adds	r4, r3, r6
  405306:	4628      	mov	r0, r5
  405308:	f046 0601 	orr.w	r6, r6, #1
  40530c:	f042 0501 	orr.w	r5, r2, #1
  405310:	605e      	str	r6, [r3, #4]
  405312:	f8c8 c00c 	str.w	ip, [r8, #12]
  405316:	f8cc 8008 	str.w	r8, [ip, #8]
  40531a:	617c      	str	r4, [r7, #20]
  40531c:	613c      	str	r4, [r7, #16]
  40531e:	f8c4 e00c 	str.w	lr, [r4, #12]
  405322:	f8c4 e008 	str.w	lr, [r4, #8]
  405326:	6065      	str	r5, [r4, #4]
  405328:	505a      	str	r2, [r3, r1]
  40532a:	f000 fae3 	bl	4058f4 <__malloc_unlock>
  40532e:	9b00      	ldr	r3, [sp, #0]
  405330:	f103 0408 	add.w	r4, r3, #8
  405334:	e01e      	b.n	405374 <_malloc_r+0x18c>
  405336:	2910      	cmp	r1, #16
  405338:	d820      	bhi.n	40537c <_malloc_r+0x194>
  40533a:	f000 fad5 	bl	4058e8 <__malloc_lock>
  40533e:	2610      	movs	r6, #16
  405340:	2318      	movs	r3, #24
  405342:	2002      	movs	r0, #2
  405344:	4f79      	ldr	r7, [pc, #484]	; (40552c <_malloc_r+0x344>)
  405346:	443b      	add	r3, r7
  405348:	f1a3 0208 	sub.w	r2, r3, #8
  40534c:	685c      	ldr	r4, [r3, #4]
  40534e:	4294      	cmp	r4, r2
  405350:	f000 813d 	beq.w	4055ce <_malloc_r+0x3e6>
  405354:	6863      	ldr	r3, [r4, #4]
  405356:	68e1      	ldr	r1, [r4, #12]
  405358:	68a6      	ldr	r6, [r4, #8]
  40535a:	f023 0303 	bic.w	r3, r3, #3
  40535e:	4423      	add	r3, r4
  405360:	4628      	mov	r0, r5
  405362:	685a      	ldr	r2, [r3, #4]
  405364:	60f1      	str	r1, [r6, #12]
  405366:	f042 0201 	orr.w	r2, r2, #1
  40536a:	608e      	str	r6, [r1, #8]
  40536c:	605a      	str	r2, [r3, #4]
  40536e:	f000 fac1 	bl	4058f4 <__malloc_unlock>
  405372:	3408      	adds	r4, #8
  405374:	4620      	mov	r0, r4
  405376:	b003      	add	sp, #12
  405378:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40537c:	2400      	movs	r4, #0
  40537e:	230c      	movs	r3, #12
  405380:	4620      	mov	r0, r4
  405382:	602b      	str	r3, [r5, #0]
  405384:	b003      	add	sp, #12
  405386:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40538a:	2040      	movs	r0, #64	; 0x40
  40538c:	f44f 7300 	mov.w	r3, #512	; 0x200
  405390:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  405394:	e74a      	b.n	40522c <_malloc_r+0x44>
  405396:	4423      	add	r3, r4
  405398:	68e1      	ldr	r1, [r4, #12]
  40539a:	685a      	ldr	r2, [r3, #4]
  40539c:	68a6      	ldr	r6, [r4, #8]
  40539e:	f042 0201 	orr.w	r2, r2, #1
  4053a2:	60f1      	str	r1, [r6, #12]
  4053a4:	4628      	mov	r0, r5
  4053a6:	608e      	str	r6, [r1, #8]
  4053a8:	605a      	str	r2, [r3, #4]
  4053aa:	f000 faa3 	bl	4058f4 <__malloc_unlock>
  4053ae:	3408      	adds	r4, #8
  4053b0:	4620      	mov	r0, r4
  4053b2:	b003      	add	sp, #12
  4053b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4053b8:	4423      	add	r3, r4
  4053ba:	4628      	mov	r0, r5
  4053bc:	685a      	ldr	r2, [r3, #4]
  4053be:	f042 0201 	orr.w	r2, r2, #1
  4053c2:	605a      	str	r2, [r3, #4]
  4053c4:	f000 fa96 	bl	4058f4 <__malloc_unlock>
  4053c8:	3408      	adds	r4, #8
  4053ca:	4620      	mov	r0, r4
  4053cc:	b003      	add	sp, #12
  4053ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4053d2:	68bc      	ldr	r4, [r7, #8]
  4053d4:	6863      	ldr	r3, [r4, #4]
  4053d6:	f023 0803 	bic.w	r8, r3, #3
  4053da:	45b0      	cmp	r8, r6
  4053dc:	d304      	bcc.n	4053e8 <_malloc_r+0x200>
  4053de:	eba8 0306 	sub.w	r3, r8, r6
  4053e2:	2b0f      	cmp	r3, #15
  4053e4:	f300 8085 	bgt.w	4054f2 <_malloc_r+0x30a>
  4053e8:	f8df 9158 	ldr.w	r9, [pc, #344]	; 405544 <_malloc_r+0x35c>
  4053ec:	4b50      	ldr	r3, [pc, #320]	; (405530 <_malloc_r+0x348>)
  4053ee:	f8d9 2000 	ldr.w	r2, [r9]
  4053f2:	681b      	ldr	r3, [r3, #0]
  4053f4:	3201      	adds	r2, #1
  4053f6:	4433      	add	r3, r6
  4053f8:	eb04 0a08 	add.w	sl, r4, r8
  4053fc:	f000 8155 	beq.w	4056aa <_malloc_r+0x4c2>
  405400:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  405404:	330f      	adds	r3, #15
  405406:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  40540a:	f02b 0b0f 	bic.w	fp, fp, #15
  40540e:	4659      	mov	r1, fp
  405410:	4628      	mov	r0, r5
  405412:	f000 ff15 	bl	406240 <_sbrk_r>
  405416:	1c41      	adds	r1, r0, #1
  405418:	4602      	mov	r2, r0
  40541a:	f000 80fc 	beq.w	405616 <_malloc_r+0x42e>
  40541e:	4582      	cmp	sl, r0
  405420:	f200 80f7 	bhi.w	405612 <_malloc_r+0x42a>
  405424:	4b43      	ldr	r3, [pc, #268]	; (405534 <_malloc_r+0x34c>)
  405426:	6819      	ldr	r1, [r3, #0]
  405428:	4459      	add	r1, fp
  40542a:	6019      	str	r1, [r3, #0]
  40542c:	f000 814d 	beq.w	4056ca <_malloc_r+0x4e2>
  405430:	f8d9 0000 	ldr.w	r0, [r9]
  405434:	3001      	adds	r0, #1
  405436:	bf1b      	ittet	ne
  405438:	eba2 0a0a 	subne.w	sl, r2, sl
  40543c:	4451      	addne	r1, sl
  40543e:	f8c9 2000 	streq.w	r2, [r9]
  405442:	6019      	strne	r1, [r3, #0]
  405444:	f012 0107 	ands.w	r1, r2, #7
  405448:	f000 8115 	beq.w	405676 <_malloc_r+0x48e>
  40544c:	f1c1 0008 	rsb	r0, r1, #8
  405450:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  405454:	4402      	add	r2, r0
  405456:	3108      	adds	r1, #8
  405458:	eb02 090b 	add.w	r9, r2, fp
  40545c:	f3c9 090b 	ubfx	r9, r9, #0, #12
  405460:	eba1 0909 	sub.w	r9, r1, r9
  405464:	4649      	mov	r1, r9
  405466:	4628      	mov	r0, r5
  405468:	9301      	str	r3, [sp, #4]
  40546a:	9200      	str	r2, [sp, #0]
  40546c:	f000 fee8 	bl	406240 <_sbrk_r>
  405470:	1c43      	adds	r3, r0, #1
  405472:	e89d 000c 	ldmia.w	sp, {r2, r3}
  405476:	f000 8143 	beq.w	405700 <_malloc_r+0x518>
  40547a:	1a80      	subs	r0, r0, r2
  40547c:	4448      	add	r0, r9
  40547e:	f040 0001 	orr.w	r0, r0, #1
  405482:	6819      	ldr	r1, [r3, #0]
  405484:	60ba      	str	r2, [r7, #8]
  405486:	4449      	add	r1, r9
  405488:	42bc      	cmp	r4, r7
  40548a:	6050      	str	r0, [r2, #4]
  40548c:	6019      	str	r1, [r3, #0]
  40548e:	d017      	beq.n	4054c0 <_malloc_r+0x2d8>
  405490:	f1b8 0f0f 	cmp.w	r8, #15
  405494:	f240 80fb 	bls.w	40568e <_malloc_r+0x4a6>
  405498:	6860      	ldr	r0, [r4, #4]
  40549a:	f1a8 020c 	sub.w	r2, r8, #12
  40549e:	f022 0207 	bic.w	r2, r2, #7
  4054a2:	eb04 0e02 	add.w	lr, r4, r2
  4054a6:	f000 0001 	and.w	r0, r0, #1
  4054aa:	f04f 0c05 	mov.w	ip, #5
  4054ae:	4310      	orrs	r0, r2
  4054b0:	2a0f      	cmp	r2, #15
  4054b2:	6060      	str	r0, [r4, #4]
  4054b4:	f8ce c004 	str.w	ip, [lr, #4]
  4054b8:	f8ce c008 	str.w	ip, [lr, #8]
  4054bc:	f200 8117 	bhi.w	4056ee <_malloc_r+0x506>
  4054c0:	4b1d      	ldr	r3, [pc, #116]	; (405538 <_malloc_r+0x350>)
  4054c2:	68bc      	ldr	r4, [r7, #8]
  4054c4:	681a      	ldr	r2, [r3, #0]
  4054c6:	4291      	cmp	r1, r2
  4054c8:	bf88      	it	hi
  4054ca:	6019      	strhi	r1, [r3, #0]
  4054cc:	4b1b      	ldr	r3, [pc, #108]	; (40553c <_malloc_r+0x354>)
  4054ce:	681a      	ldr	r2, [r3, #0]
  4054d0:	4291      	cmp	r1, r2
  4054d2:	6862      	ldr	r2, [r4, #4]
  4054d4:	bf88      	it	hi
  4054d6:	6019      	strhi	r1, [r3, #0]
  4054d8:	f022 0203 	bic.w	r2, r2, #3
  4054dc:	4296      	cmp	r6, r2
  4054de:	eba2 0306 	sub.w	r3, r2, r6
  4054e2:	d801      	bhi.n	4054e8 <_malloc_r+0x300>
  4054e4:	2b0f      	cmp	r3, #15
  4054e6:	dc04      	bgt.n	4054f2 <_malloc_r+0x30a>
  4054e8:	4628      	mov	r0, r5
  4054ea:	f000 fa03 	bl	4058f4 <__malloc_unlock>
  4054ee:	2400      	movs	r4, #0
  4054f0:	e740      	b.n	405374 <_malloc_r+0x18c>
  4054f2:	19a2      	adds	r2, r4, r6
  4054f4:	f043 0301 	orr.w	r3, r3, #1
  4054f8:	f046 0601 	orr.w	r6, r6, #1
  4054fc:	6066      	str	r6, [r4, #4]
  4054fe:	4628      	mov	r0, r5
  405500:	60ba      	str	r2, [r7, #8]
  405502:	6053      	str	r3, [r2, #4]
  405504:	f000 f9f6 	bl	4058f4 <__malloc_unlock>
  405508:	3408      	adds	r4, #8
  40550a:	4620      	mov	r0, r4
  40550c:	b003      	add	sp, #12
  40550e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405512:	2b14      	cmp	r3, #20
  405514:	d971      	bls.n	4055fa <_malloc_r+0x412>
  405516:	2b54      	cmp	r3, #84	; 0x54
  405518:	f200 80a3 	bhi.w	405662 <_malloc_r+0x47a>
  40551c:	0b33      	lsrs	r3, r6, #12
  40551e:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  405522:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  405526:	00c3      	lsls	r3, r0, #3
  405528:	e680      	b.n	40522c <_malloc_r+0x44>
  40552a:	bf00      	nop
  40552c:	204005b0 	.word	0x204005b0
  405530:	20400b10 	.word	0x20400b10
  405534:	20400ae0 	.word	0x20400ae0
  405538:	20400b08 	.word	0x20400b08
  40553c:	20400b0c 	.word	0x20400b0c
  405540:	204005b8 	.word	0x204005b8
  405544:	204009b8 	.word	0x204009b8
  405548:	0a5a      	lsrs	r2, r3, #9
  40554a:	2a04      	cmp	r2, #4
  40554c:	d95b      	bls.n	405606 <_malloc_r+0x41e>
  40554e:	2a14      	cmp	r2, #20
  405550:	f200 80ae 	bhi.w	4056b0 <_malloc_r+0x4c8>
  405554:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  405558:	00c9      	lsls	r1, r1, #3
  40555a:	325b      	adds	r2, #91	; 0x5b
  40555c:	eb07 0c01 	add.w	ip, r7, r1
  405560:	5879      	ldr	r1, [r7, r1]
  405562:	f1ac 0c08 	sub.w	ip, ip, #8
  405566:	458c      	cmp	ip, r1
  405568:	f000 8088 	beq.w	40567c <_malloc_r+0x494>
  40556c:	684a      	ldr	r2, [r1, #4]
  40556e:	f022 0203 	bic.w	r2, r2, #3
  405572:	4293      	cmp	r3, r2
  405574:	d273      	bcs.n	40565e <_malloc_r+0x476>
  405576:	6889      	ldr	r1, [r1, #8]
  405578:	458c      	cmp	ip, r1
  40557a:	d1f7      	bne.n	40556c <_malloc_r+0x384>
  40557c:	f8dc 200c 	ldr.w	r2, [ip, #12]
  405580:	687b      	ldr	r3, [r7, #4]
  405582:	60e2      	str	r2, [r4, #12]
  405584:	f8c4 c008 	str.w	ip, [r4, #8]
  405588:	6094      	str	r4, [r2, #8]
  40558a:	f8cc 400c 	str.w	r4, [ip, #12]
  40558e:	e68f      	b.n	4052b0 <_malloc_r+0xc8>
  405590:	19a1      	adds	r1, r4, r6
  405592:	f046 0c01 	orr.w	ip, r6, #1
  405596:	f042 0601 	orr.w	r6, r2, #1
  40559a:	f8c4 c004 	str.w	ip, [r4, #4]
  40559e:	4628      	mov	r0, r5
  4055a0:	6179      	str	r1, [r7, #20]
  4055a2:	6139      	str	r1, [r7, #16]
  4055a4:	f8c1 e00c 	str.w	lr, [r1, #12]
  4055a8:	f8c1 e008 	str.w	lr, [r1, #8]
  4055ac:	604e      	str	r6, [r1, #4]
  4055ae:	50e2      	str	r2, [r4, r3]
  4055b0:	f000 f9a0 	bl	4058f4 <__malloc_unlock>
  4055b4:	3408      	adds	r4, #8
  4055b6:	e6dd      	b.n	405374 <_malloc_r+0x18c>
  4055b8:	687b      	ldr	r3, [r7, #4]
  4055ba:	e679      	b.n	4052b0 <_malloc_r+0xc8>
  4055bc:	f108 0801 	add.w	r8, r8, #1
  4055c0:	f018 0f03 	tst.w	r8, #3
  4055c4:	f10c 0c08 	add.w	ip, ip, #8
  4055c8:	f47f ae85 	bne.w	4052d6 <_malloc_r+0xee>
  4055cc:	e02d      	b.n	40562a <_malloc_r+0x442>
  4055ce:	68dc      	ldr	r4, [r3, #12]
  4055d0:	42a3      	cmp	r3, r4
  4055d2:	bf08      	it	eq
  4055d4:	3002      	addeq	r0, #2
  4055d6:	f43f ae3e 	beq.w	405256 <_malloc_r+0x6e>
  4055da:	e6bb      	b.n	405354 <_malloc_r+0x16c>
  4055dc:	4419      	add	r1, r3
  4055de:	461c      	mov	r4, r3
  4055e0:	684a      	ldr	r2, [r1, #4]
  4055e2:	68db      	ldr	r3, [r3, #12]
  4055e4:	f854 6f08 	ldr.w	r6, [r4, #8]!
  4055e8:	f042 0201 	orr.w	r2, r2, #1
  4055ec:	604a      	str	r2, [r1, #4]
  4055ee:	4628      	mov	r0, r5
  4055f0:	60f3      	str	r3, [r6, #12]
  4055f2:	609e      	str	r6, [r3, #8]
  4055f4:	f000 f97e 	bl	4058f4 <__malloc_unlock>
  4055f8:	e6bc      	b.n	405374 <_malloc_r+0x18c>
  4055fa:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  4055fe:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  405602:	00c3      	lsls	r3, r0, #3
  405604:	e612      	b.n	40522c <_malloc_r+0x44>
  405606:	099a      	lsrs	r2, r3, #6
  405608:	f102 0139 	add.w	r1, r2, #57	; 0x39
  40560c:	00c9      	lsls	r1, r1, #3
  40560e:	3238      	adds	r2, #56	; 0x38
  405610:	e7a4      	b.n	40555c <_malloc_r+0x374>
  405612:	42bc      	cmp	r4, r7
  405614:	d054      	beq.n	4056c0 <_malloc_r+0x4d8>
  405616:	68bc      	ldr	r4, [r7, #8]
  405618:	6862      	ldr	r2, [r4, #4]
  40561a:	f022 0203 	bic.w	r2, r2, #3
  40561e:	e75d      	b.n	4054dc <_malloc_r+0x2f4>
  405620:	f859 3908 	ldr.w	r3, [r9], #-8
  405624:	4599      	cmp	r9, r3
  405626:	f040 8086 	bne.w	405736 <_malloc_r+0x54e>
  40562a:	f010 0f03 	tst.w	r0, #3
  40562e:	f100 30ff 	add.w	r0, r0, #4294967295
  405632:	d1f5      	bne.n	405620 <_malloc_r+0x438>
  405634:	687b      	ldr	r3, [r7, #4]
  405636:	ea23 0304 	bic.w	r3, r3, r4
  40563a:	607b      	str	r3, [r7, #4]
  40563c:	0064      	lsls	r4, r4, #1
  40563e:	429c      	cmp	r4, r3
  405640:	f63f aec7 	bhi.w	4053d2 <_malloc_r+0x1ea>
  405644:	2c00      	cmp	r4, #0
  405646:	f43f aec4 	beq.w	4053d2 <_malloc_r+0x1ea>
  40564a:	421c      	tst	r4, r3
  40564c:	4640      	mov	r0, r8
  40564e:	f47f ae3e 	bne.w	4052ce <_malloc_r+0xe6>
  405652:	0064      	lsls	r4, r4, #1
  405654:	421c      	tst	r4, r3
  405656:	f100 0004 	add.w	r0, r0, #4
  40565a:	d0fa      	beq.n	405652 <_malloc_r+0x46a>
  40565c:	e637      	b.n	4052ce <_malloc_r+0xe6>
  40565e:	468c      	mov	ip, r1
  405660:	e78c      	b.n	40557c <_malloc_r+0x394>
  405662:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  405666:	d815      	bhi.n	405694 <_malloc_r+0x4ac>
  405668:	0bf3      	lsrs	r3, r6, #15
  40566a:	f103 0078 	add.w	r0, r3, #120	; 0x78
  40566e:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  405672:	00c3      	lsls	r3, r0, #3
  405674:	e5da      	b.n	40522c <_malloc_r+0x44>
  405676:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  40567a:	e6ed      	b.n	405458 <_malloc_r+0x270>
  40567c:	687b      	ldr	r3, [r7, #4]
  40567e:	1092      	asrs	r2, r2, #2
  405680:	2101      	movs	r1, #1
  405682:	fa01 f202 	lsl.w	r2, r1, r2
  405686:	4313      	orrs	r3, r2
  405688:	607b      	str	r3, [r7, #4]
  40568a:	4662      	mov	r2, ip
  40568c:	e779      	b.n	405582 <_malloc_r+0x39a>
  40568e:	2301      	movs	r3, #1
  405690:	6053      	str	r3, [r2, #4]
  405692:	e729      	b.n	4054e8 <_malloc_r+0x300>
  405694:	f240 5254 	movw	r2, #1364	; 0x554
  405698:	4293      	cmp	r3, r2
  40569a:	d822      	bhi.n	4056e2 <_malloc_r+0x4fa>
  40569c:	0cb3      	lsrs	r3, r6, #18
  40569e:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  4056a2:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  4056a6:	00c3      	lsls	r3, r0, #3
  4056a8:	e5c0      	b.n	40522c <_malloc_r+0x44>
  4056aa:	f103 0b10 	add.w	fp, r3, #16
  4056ae:	e6ae      	b.n	40540e <_malloc_r+0x226>
  4056b0:	2a54      	cmp	r2, #84	; 0x54
  4056b2:	d829      	bhi.n	405708 <_malloc_r+0x520>
  4056b4:	0b1a      	lsrs	r2, r3, #12
  4056b6:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  4056ba:	00c9      	lsls	r1, r1, #3
  4056bc:	326e      	adds	r2, #110	; 0x6e
  4056be:	e74d      	b.n	40555c <_malloc_r+0x374>
  4056c0:	4b20      	ldr	r3, [pc, #128]	; (405744 <_malloc_r+0x55c>)
  4056c2:	6819      	ldr	r1, [r3, #0]
  4056c4:	4459      	add	r1, fp
  4056c6:	6019      	str	r1, [r3, #0]
  4056c8:	e6b2      	b.n	405430 <_malloc_r+0x248>
  4056ca:	f3ca 000b 	ubfx	r0, sl, #0, #12
  4056ce:	2800      	cmp	r0, #0
  4056d0:	f47f aeae 	bne.w	405430 <_malloc_r+0x248>
  4056d4:	eb08 030b 	add.w	r3, r8, fp
  4056d8:	68ba      	ldr	r2, [r7, #8]
  4056da:	f043 0301 	orr.w	r3, r3, #1
  4056de:	6053      	str	r3, [r2, #4]
  4056e0:	e6ee      	b.n	4054c0 <_malloc_r+0x2d8>
  4056e2:	207f      	movs	r0, #127	; 0x7f
  4056e4:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  4056e8:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  4056ec:	e59e      	b.n	40522c <_malloc_r+0x44>
  4056ee:	f104 0108 	add.w	r1, r4, #8
  4056f2:	4628      	mov	r0, r5
  4056f4:	9300      	str	r3, [sp, #0]
  4056f6:	f7ff fa4b 	bl	404b90 <_free_r>
  4056fa:	9b00      	ldr	r3, [sp, #0]
  4056fc:	6819      	ldr	r1, [r3, #0]
  4056fe:	e6df      	b.n	4054c0 <_malloc_r+0x2d8>
  405700:	2001      	movs	r0, #1
  405702:	f04f 0900 	mov.w	r9, #0
  405706:	e6bc      	b.n	405482 <_malloc_r+0x29a>
  405708:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  40570c:	d805      	bhi.n	40571a <_malloc_r+0x532>
  40570e:	0bda      	lsrs	r2, r3, #15
  405710:	f102 0178 	add.w	r1, r2, #120	; 0x78
  405714:	00c9      	lsls	r1, r1, #3
  405716:	3277      	adds	r2, #119	; 0x77
  405718:	e720      	b.n	40555c <_malloc_r+0x374>
  40571a:	f240 5154 	movw	r1, #1364	; 0x554
  40571e:	428a      	cmp	r2, r1
  405720:	d805      	bhi.n	40572e <_malloc_r+0x546>
  405722:	0c9a      	lsrs	r2, r3, #18
  405724:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  405728:	00c9      	lsls	r1, r1, #3
  40572a:	327c      	adds	r2, #124	; 0x7c
  40572c:	e716      	b.n	40555c <_malloc_r+0x374>
  40572e:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  405732:	227e      	movs	r2, #126	; 0x7e
  405734:	e712      	b.n	40555c <_malloc_r+0x374>
  405736:	687b      	ldr	r3, [r7, #4]
  405738:	e780      	b.n	40563c <_malloc_r+0x454>
  40573a:	08f0      	lsrs	r0, r6, #3
  40573c:	f106 0308 	add.w	r3, r6, #8
  405740:	e600      	b.n	405344 <_malloc_r+0x15c>
  405742:	bf00      	nop
  405744:	20400ae0 	.word	0x20400ae0

00405748 <__ascii_mbtowc>:
  405748:	b082      	sub	sp, #8
  40574a:	b149      	cbz	r1, 405760 <__ascii_mbtowc+0x18>
  40574c:	b15a      	cbz	r2, 405766 <__ascii_mbtowc+0x1e>
  40574e:	b16b      	cbz	r3, 40576c <__ascii_mbtowc+0x24>
  405750:	7813      	ldrb	r3, [r2, #0]
  405752:	600b      	str	r3, [r1, #0]
  405754:	7812      	ldrb	r2, [r2, #0]
  405756:	1c10      	adds	r0, r2, #0
  405758:	bf18      	it	ne
  40575a:	2001      	movne	r0, #1
  40575c:	b002      	add	sp, #8
  40575e:	4770      	bx	lr
  405760:	a901      	add	r1, sp, #4
  405762:	2a00      	cmp	r2, #0
  405764:	d1f3      	bne.n	40574e <__ascii_mbtowc+0x6>
  405766:	4610      	mov	r0, r2
  405768:	b002      	add	sp, #8
  40576a:	4770      	bx	lr
  40576c:	f06f 0001 	mvn.w	r0, #1
  405770:	e7f4      	b.n	40575c <__ascii_mbtowc+0x14>
  405772:	bf00      	nop
	...

00405780 <memchr>:
  405780:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  405784:	2a10      	cmp	r2, #16
  405786:	db2b      	blt.n	4057e0 <memchr+0x60>
  405788:	f010 0f07 	tst.w	r0, #7
  40578c:	d008      	beq.n	4057a0 <memchr+0x20>
  40578e:	f810 3b01 	ldrb.w	r3, [r0], #1
  405792:	3a01      	subs	r2, #1
  405794:	428b      	cmp	r3, r1
  405796:	d02d      	beq.n	4057f4 <memchr+0x74>
  405798:	f010 0f07 	tst.w	r0, #7
  40579c:	b342      	cbz	r2, 4057f0 <memchr+0x70>
  40579e:	d1f6      	bne.n	40578e <memchr+0xe>
  4057a0:	b4f0      	push	{r4, r5, r6, r7}
  4057a2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  4057a6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  4057aa:	f022 0407 	bic.w	r4, r2, #7
  4057ae:	f07f 0700 	mvns.w	r7, #0
  4057b2:	2300      	movs	r3, #0
  4057b4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  4057b8:	3c08      	subs	r4, #8
  4057ba:	ea85 0501 	eor.w	r5, r5, r1
  4057be:	ea86 0601 	eor.w	r6, r6, r1
  4057c2:	fa85 f547 	uadd8	r5, r5, r7
  4057c6:	faa3 f587 	sel	r5, r3, r7
  4057ca:	fa86 f647 	uadd8	r6, r6, r7
  4057ce:	faa5 f687 	sel	r6, r5, r7
  4057d2:	b98e      	cbnz	r6, 4057f8 <memchr+0x78>
  4057d4:	d1ee      	bne.n	4057b4 <memchr+0x34>
  4057d6:	bcf0      	pop	{r4, r5, r6, r7}
  4057d8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  4057dc:	f002 0207 	and.w	r2, r2, #7
  4057e0:	b132      	cbz	r2, 4057f0 <memchr+0x70>
  4057e2:	f810 3b01 	ldrb.w	r3, [r0], #1
  4057e6:	3a01      	subs	r2, #1
  4057e8:	ea83 0301 	eor.w	r3, r3, r1
  4057ec:	b113      	cbz	r3, 4057f4 <memchr+0x74>
  4057ee:	d1f8      	bne.n	4057e2 <memchr+0x62>
  4057f0:	2000      	movs	r0, #0
  4057f2:	4770      	bx	lr
  4057f4:	3801      	subs	r0, #1
  4057f6:	4770      	bx	lr
  4057f8:	2d00      	cmp	r5, #0
  4057fa:	bf06      	itte	eq
  4057fc:	4635      	moveq	r5, r6
  4057fe:	3803      	subeq	r0, #3
  405800:	3807      	subne	r0, #7
  405802:	f015 0f01 	tst.w	r5, #1
  405806:	d107      	bne.n	405818 <memchr+0x98>
  405808:	3001      	adds	r0, #1
  40580a:	f415 7f80 	tst.w	r5, #256	; 0x100
  40580e:	bf02      	ittt	eq
  405810:	3001      	addeq	r0, #1
  405812:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  405816:	3001      	addeq	r0, #1
  405818:	bcf0      	pop	{r4, r5, r6, r7}
  40581a:	3801      	subs	r0, #1
  40581c:	4770      	bx	lr
  40581e:	bf00      	nop

00405820 <memmove>:
  405820:	4288      	cmp	r0, r1
  405822:	b5f0      	push	{r4, r5, r6, r7, lr}
  405824:	d90d      	bls.n	405842 <memmove+0x22>
  405826:	188b      	adds	r3, r1, r2
  405828:	4298      	cmp	r0, r3
  40582a:	d20a      	bcs.n	405842 <memmove+0x22>
  40582c:	1884      	adds	r4, r0, r2
  40582e:	2a00      	cmp	r2, #0
  405830:	d051      	beq.n	4058d6 <memmove+0xb6>
  405832:	4622      	mov	r2, r4
  405834:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  405838:	f802 4d01 	strb.w	r4, [r2, #-1]!
  40583c:	4299      	cmp	r1, r3
  40583e:	d1f9      	bne.n	405834 <memmove+0x14>
  405840:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405842:	2a0f      	cmp	r2, #15
  405844:	d948      	bls.n	4058d8 <memmove+0xb8>
  405846:	ea41 0300 	orr.w	r3, r1, r0
  40584a:	079b      	lsls	r3, r3, #30
  40584c:	d146      	bne.n	4058dc <memmove+0xbc>
  40584e:	f100 0410 	add.w	r4, r0, #16
  405852:	f101 0310 	add.w	r3, r1, #16
  405856:	4615      	mov	r5, r2
  405858:	f853 6c10 	ldr.w	r6, [r3, #-16]
  40585c:	f844 6c10 	str.w	r6, [r4, #-16]
  405860:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  405864:	f844 6c0c 	str.w	r6, [r4, #-12]
  405868:	f853 6c08 	ldr.w	r6, [r3, #-8]
  40586c:	f844 6c08 	str.w	r6, [r4, #-8]
  405870:	3d10      	subs	r5, #16
  405872:	f853 6c04 	ldr.w	r6, [r3, #-4]
  405876:	f844 6c04 	str.w	r6, [r4, #-4]
  40587a:	2d0f      	cmp	r5, #15
  40587c:	f103 0310 	add.w	r3, r3, #16
  405880:	f104 0410 	add.w	r4, r4, #16
  405884:	d8e8      	bhi.n	405858 <memmove+0x38>
  405886:	f1a2 0310 	sub.w	r3, r2, #16
  40588a:	f023 030f 	bic.w	r3, r3, #15
  40588e:	f002 0e0f 	and.w	lr, r2, #15
  405892:	3310      	adds	r3, #16
  405894:	f1be 0f03 	cmp.w	lr, #3
  405898:	4419      	add	r1, r3
  40589a:	4403      	add	r3, r0
  40589c:	d921      	bls.n	4058e2 <memmove+0xc2>
  40589e:	1f1e      	subs	r6, r3, #4
  4058a0:	460d      	mov	r5, r1
  4058a2:	4674      	mov	r4, lr
  4058a4:	3c04      	subs	r4, #4
  4058a6:	f855 7b04 	ldr.w	r7, [r5], #4
  4058aa:	f846 7f04 	str.w	r7, [r6, #4]!
  4058ae:	2c03      	cmp	r4, #3
  4058b0:	d8f8      	bhi.n	4058a4 <memmove+0x84>
  4058b2:	f1ae 0404 	sub.w	r4, lr, #4
  4058b6:	f024 0403 	bic.w	r4, r4, #3
  4058ba:	3404      	adds	r4, #4
  4058bc:	4421      	add	r1, r4
  4058be:	4423      	add	r3, r4
  4058c0:	f002 0203 	and.w	r2, r2, #3
  4058c4:	b162      	cbz	r2, 4058e0 <memmove+0xc0>
  4058c6:	3b01      	subs	r3, #1
  4058c8:	440a      	add	r2, r1
  4058ca:	f811 4b01 	ldrb.w	r4, [r1], #1
  4058ce:	f803 4f01 	strb.w	r4, [r3, #1]!
  4058d2:	428a      	cmp	r2, r1
  4058d4:	d1f9      	bne.n	4058ca <memmove+0xaa>
  4058d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4058d8:	4603      	mov	r3, r0
  4058da:	e7f3      	b.n	4058c4 <memmove+0xa4>
  4058dc:	4603      	mov	r3, r0
  4058de:	e7f2      	b.n	4058c6 <memmove+0xa6>
  4058e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4058e2:	4672      	mov	r2, lr
  4058e4:	e7ee      	b.n	4058c4 <memmove+0xa4>
  4058e6:	bf00      	nop

004058e8 <__malloc_lock>:
  4058e8:	4801      	ldr	r0, [pc, #4]	; (4058f0 <__malloc_lock+0x8>)
  4058ea:	f7ff bbf9 	b.w	4050e0 <__retarget_lock_acquire_recursive>
  4058ee:	bf00      	nop
  4058f0:	20400b34 	.word	0x20400b34

004058f4 <__malloc_unlock>:
  4058f4:	4801      	ldr	r0, [pc, #4]	; (4058fc <__malloc_unlock+0x8>)
  4058f6:	f7ff bbf5 	b.w	4050e4 <__retarget_lock_release_recursive>
  4058fa:	bf00      	nop
  4058fc:	20400b34 	.word	0x20400b34

00405900 <_Balloc>:
  405900:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  405902:	b570      	push	{r4, r5, r6, lr}
  405904:	4605      	mov	r5, r0
  405906:	460c      	mov	r4, r1
  405908:	b14b      	cbz	r3, 40591e <_Balloc+0x1e>
  40590a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  40590e:	b180      	cbz	r0, 405932 <_Balloc+0x32>
  405910:	6802      	ldr	r2, [r0, #0]
  405912:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  405916:	2300      	movs	r3, #0
  405918:	6103      	str	r3, [r0, #16]
  40591a:	60c3      	str	r3, [r0, #12]
  40591c:	bd70      	pop	{r4, r5, r6, pc}
  40591e:	2221      	movs	r2, #33	; 0x21
  405920:	2104      	movs	r1, #4
  405922:	f000 fe0b 	bl	40653c <_calloc_r>
  405926:	64e8      	str	r0, [r5, #76]	; 0x4c
  405928:	4603      	mov	r3, r0
  40592a:	2800      	cmp	r0, #0
  40592c:	d1ed      	bne.n	40590a <_Balloc+0xa>
  40592e:	2000      	movs	r0, #0
  405930:	bd70      	pop	{r4, r5, r6, pc}
  405932:	2101      	movs	r1, #1
  405934:	fa01 f604 	lsl.w	r6, r1, r4
  405938:	1d72      	adds	r2, r6, #5
  40593a:	4628      	mov	r0, r5
  40593c:	0092      	lsls	r2, r2, #2
  40593e:	f000 fdfd 	bl	40653c <_calloc_r>
  405942:	2800      	cmp	r0, #0
  405944:	d0f3      	beq.n	40592e <_Balloc+0x2e>
  405946:	6044      	str	r4, [r0, #4]
  405948:	6086      	str	r6, [r0, #8]
  40594a:	e7e4      	b.n	405916 <_Balloc+0x16>

0040594c <_Bfree>:
  40594c:	b131      	cbz	r1, 40595c <_Bfree+0x10>
  40594e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  405950:	684a      	ldr	r2, [r1, #4]
  405952:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  405956:	6008      	str	r0, [r1, #0]
  405958:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  40595c:	4770      	bx	lr
  40595e:	bf00      	nop

00405960 <__multadd>:
  405960:	b5f0      	push	{r4, r5, r6, r7, lr}
  405962:	690c      	ldr	r4, [r1, #16]
  405964:	b083      	sub	sp, #12
  405966:	460d      	mov	r5, r1
  405968:	4606      	mov	r6, r0
  40596a:	f101 0e14 	add.w	lr, r1, #20
  40596e:	2700      	movs	r7, #0
  405970:	f8de 0000 	ldr.w	r0, [lr]
  405974:	b281      	uxth	r1, r0
  405976:	fb02 3301 	mla	r3, r2, r1, r3
  40597a:	0c01      	lsrs	r1, r0, #16
  40597c:	0c18      	lsrs	r0, r3, #16
  40597e:	fb02 0101 	mla	r1, r2, r1, r0
  405982:	b29b      	uxth	r3, r3
  405984:	3701      	adds	r7, #1
  405986:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  40598a:	42bc      	cmp	r4, r7
  40598c:	f84e 3b04 	str.w	r3, [lr], #4
  405990:	ea4f 4311 	mov.w	r3, r1, lsr #16
  405994:	dcec      	bgt.n	405970 <__multadd+0x10>
  405996:	b13b      	cbz	r3, 4059a8 <__multadd+0x48>
  405998:	68aa      	ldr	r2, [r5, #8]
  40599a:	4294      	cmp	r4, r2
  40599c:	da07      	bge.n	4059ae <__multadd+0x4e>
  40599e:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  4059a2:	3401      	adds	r4, #1
  4059a4:	6153      	str	r3, [r2, #20]
  4059a6:	612c      	str	r4, [r5, #16]
  4059a8:	4628      	mov	r0, r5
  4059aa:	b003      	add	sp, #12
  4059ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4059ae:	6869      	ldr	r1, [r5, #4]
  4059b0:	9301      	str	r3, [sp, #4]
  4059b2:	3101      	adds	r1, #1
  4059b4:	4630      	mov	r0, r6
  4059b6:	f7ff ffa3 	bl	405900 <_Balloc>
  4059ba:	692a      	ldr	r2, [r5, #16]
  4059bc:	3202      	adds	r2, #2
  4059be:	f105 010c 	add.w	r1, r5, #12
  4059c2:	4607      	mov	r7, r0
  4059c4:	0092      	lsls	r2, r2, #2
  4059c6:	300c      	adds	r0, #12
  4059c8:	f7fc f988 	bl	401cdc <memcpy>
  4059cc:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  4059ce:	6869      	ldr	r1, [r5, #4]
  4059d0:	9b01      	ldr	r3, [sp, #4]
  4059d2:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  4059d6:	6028      	str	r0, [r5, #0]
  4059d8:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  4059dc:	463d      	mov	r5, r7
  4059de:	e7de      	b.n	40599e <__multadd+0x3e>

004059e0 <__hi0bits>:
  4059e0:	0c02      	lsrs	r2, r0, #16
  4059e2:	0412      	lsls	r2, r2, #16
  4059e4:	4603      	mov	r3, r0
  4059e6:	b9b2      	cbnz	r2, 405a16 <__hi0bits+0x36>
  4059e8:	0403      	lsls	r3, r0, #16
  4059ea:	2010      	movs	r0, #16
  4059ec:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  4059f0:	bf04      	itt	eq
  4059f2:	021b      	lsleq	r3, r3, #8
  4059f4:	3008      	addeq	r0, #8
  4059f6:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  4059fa:	bf04      	itt	eq
  4059fc:	011b      	lsleq	r3, r3, #4
  4059fe:	3004      	addeq	r0, #4
  405a00:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  405a04:	bf04      	itt	eq
  405a06:	009b      	lsleq	r3, r3, #2
  405a08:	3002      	addeq	r0, #2
  405a0a:	2b00      	cmp	r3, #0
  405a0c:	db02      	blt.n	405a14 <__hi0bits+0x34>
  405a0e:	005b      	lsls	r3, r3, #1
  405a10:	d403      	bmi.n	405a1a <__hi0bits+0x3a>
  405a12:	2020      	movs	r0, #32
  405a14:	4770      	bx	lr
  405a16:	2000      	movs	r0, #0
  405a18:	e7e8      	b.n	4059ec <__hi0bits+0xc>
  405a1a:	3001      	adds	r0, #1
  405a1c:	4770      	bx	lr
  405a1e:	bf00      	nop

00405a20 <__lo0bits>:
  405a20:	6803      	ldr	r3, [r0, #0]
  405a22:	f013 0207 	ands.w	r2, r3, #7
  405a26:	4601      	mov	r1, r0
  405a28:	d007      	beq.n	405a3a <__lo0bits+0x1a>
  405a2a:	07da      	lsls	r2, r3, #31
  405a2c:	d421      	bmi.n	405a72 <__lo0bits+0x52>
  405a2e:	0798      	lsls	r0, r3, #30
  405a30:	d421      	bmi.n	405a76 <__lo0bits+0x56>
  405a32:	089b      	lsrs	r3, r3, #2
  405a34:	600b      	str	r3, [r1, #0]
  405a36:	2002      	movs	r0, #2
  405a38:	4770      	bx	lr
  405a3a:	b298      	uxth	r0, r3
  405a3c:	b198      	cbz	r0, 405a66 <__lo0bits+0x46>
  405a3e:	4610      	mov	r0, r2
  405a40:	f013 0fff 	tst.w	r3, #255	; 0xff
  405a44:	bf04      	itt	eq
  405a46:	0a1b      	lsreq	r3, r3, #8
  405a48:	3008      	addeq	r0, #8
  405a4a:	071a      	lsls	r2, r3, #28
  405a4c:	bf04      	itt	eq
  405a4e:	091b      	lsreq	r3, r3, #4
  405a50:	3004      	addeq	r0, #4
  405a52:	079a      	lsls	r2, r3, #30
  405a54:	bf04      	itt	eq
  405a56:	089b      	lsreq	r3, r3, #2
  405a58:	3002      	addeq	r0, #2
  405a5a:	07da      	lsls	r2, r3, #31
  405a5c:	d407      	bmi.n	405a6e <__lo0bits+0x4e>
  405a5e:	085b      	lsrs	r3, r3, #1
  405a60:	d104      	bne.n	405a6c <__lo0bits+0x4c>
  405a62:	2020      	movs	r0, #32
  405a64:	4770      	bx	lr
  405a66:	0c1b      	lsrs	r3, r3, #16
  405a68:	2010      	movs	r0, #16
  405a6a:	e7e9      	b.n	405a40 <__lo0bits+0x20>
  405a6c:	3001      	adds	r0, #1
  405a6e:	600b      	str	r3, [r1, #0]
  405a70:	4770      	bx	lr
  405a72:	2000      	movs	r0, #0
  405a74:	4770      	bx	lr
  405a76:	085b      	lsrs	r3, r3, #1
  405a78:	600b      	str	r3, [r1, #0]
  405a7a:	2001      	movs	r0, #1
  405a7c:	4770      	bx	lr
  405a7e:	bf00      	nop

00405a80 <__i2b>:
  405a80:	b510      	push	{r4, lr}
  405a82:	460c      	mov	r4, r1
  405a84:	2101      	movs	r1, #1
  405a86:	f7ff ff3b 	bl	405900 <_Balloc>
  405a8a:	2201      	movs	r2, #1
  405a8c:	6144      	str	r4, [r0, #20]
  405a8e:	6102      	str	r2, [r0, #16]
  405a90:	bd10      	pop	{r4, pc}
  405a92:	bf00      	nop

00405a94 <__multiply>:
  405a94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405a98:	690c      	ldr	r4, [r1, #16]
  405a9a:	6915      	ldr	r5, [r2, #16]
  405a9c:	42ac      	cmp	r4, r5
  405a9e:	b083      	sub	sp, #12
  405aa0:	468b      	mov	fp, r1
  405aa2:	4616      	mov	r6, r2
  405aa4:	da04      	bge.n	405ab0 <__multiply+0x1c>
  405aa6:	4622      	mov	r2, r4
  405aa8:	46b3      	mov	fp, r6
  405aaa:	462c      	mov	r4, r5
  405aac:	460e      	mov	r6, r1
  405aae:	4615      	mov	r5, r2
  405ab0:	f8db 3008 	ldr.w	r3, [fp, #8]
  405ab4:	f8db 1004 	ldr.w	r1, [fp, #4]
  405ab8:	eb04 0805 	add.w	r8, r4, r5
  405abc:	4598      	cmp	r8, r3
  405abe:	bfc8      	it	gt
  405ac0:	3101      	addgt	r1, #1
  405ac2:	f7ff ff1d 	bl	405900 <_Balloc>
  405ac6:	f100 0914 	add.w	r9, r0, #20
  405aca:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  405ace:	45d1      	cmp	r9, sl
  405ad0:	9000      	str	r0, [sp, #0]
  405ad2:	d205      	bcs.n	405ae0 <__multiply+0x4c>
  405ad4:	464b      	mov	r3, r9
  405ad6:	2100      	movs	r1, #0
  405ad8:	f843 1b04 	str.w	r1, [r3], #4
  405adc:	459a      	cmp	sl, r3
  405ade:	d8fb      	bhi.n	405ad8 <__multiply+0x44>
  405ae0:	f106 0c14 	add.w	ip, r6, #20
  405ae4:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  405ae8:	f10b 0b14 	add.w	fp, fp, #20
  405aec:	459c      	cmp	ip, r3
  405aee:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  405af2:	d24c      	bcs.n	405b8e <__multiply+0xfa>
  405af4:	f8cd a004 	str.w	sl, [sp, #4]
  405af8:	469a      	mov	sl, r3
  405afa:	f8dc 5000 	ldr.w	r5, [ip]
  405afe:	b2af      	uxth	r7, r5
  405b00:	b1ef      	cbz	r7, 405b3e <__multiply+0xaa>
  405b02:	2100      	movs	r1, #0
  405b04:	464d      	mov	r5, r9
  405b06:	465e      	mov	r6, fp
  405b08:	460c      	mov	r4, r1
  405b0a:	f856 2b04 	ldr.w	r2, [r6], #4
  405b0e:	6828      	ldr	r0, [r5, #0]
  405b10:	b293      	uxth	r3, r2
  405b12:	b281      	uxth	r1, r0
  405b14:	fb07 1303 	mla	r3, r7, r3, r1
  405b18:	0c12      	lsrs	r2, r2, #16
  405b1a:	0c01      	lsrs	r1, r0, #16
  405b1c:	4423      	add	r3, r4
  405b1e:	fb07 1102 	mla	r1, r7, r2, r1
  405b22:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  405b26:	b29b      	uxth	r3, r3
  405b28:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  405b2c:	45b6      	cmp	lr, r6
  405b2e:	f845 3b04 	str.w	r3, [r5], #4
  405b32:	ea4f 4411 	mov.w	r4, r1, lsr #16
  405b36:	d8e8      	bhi.n	405b0a <__multiply+0x76>
  405b38:	602c      	str	r4, [r5, #0]
  405b3a:	f8dc 5000 	ldr.w	r5, [ip]
  405b3e:	0c2d      	lsrs	r5, r5, #16
  405b40:	d01d      	beq.n	405b7e <__multiply+0xea>
  405b42:	f8d9 3000 	ldr.w	r3, [r9]
  405b46:	4648      	mov	r0, r9
  405b48:	461c      	mov	r4, r3
  405b4a:	4659      	mov	r1, fp
  405b4c:	2200      	movs	r2, #0
  405b4e:	880e      	ldrh	r6, [r1, #0]
  405b50:	0c24      	lsrs	r4, r4, #16
  405b52:	fb05 4406 	mla	r4, r5, r6, r4
  405b56:	4422      	add	r2, r4
  405b58:	b29b      	uxth	r3, r3
  405b5a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  405b5e:	f840 3b04 	str.w	r3, [r0], #4
  405b62:	f851 3b04 	ldr.w	r3, [r1], #4
  405b66:	6804      	ldr	r4, [r0, #0]
  405b68:	0c1b      	lsrs	r3, r3, #16
  405b6a:	b2a6      	uxth	r6, r4
  405b6c:	fb05 6303 	mla	r3, r5, r3, r6
  405b70:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  405b74:	458e      	cmp	lr, r1
  405b76:	ea4f 4213 	mov.w	r2, r3, lsr #16
  405b7a:	d8e8      	bhi.n	405b4e <__multiply+0xba>
  405b7c:	6003      	str	r3, [r0, #0]
  405b7e:	f10c 0c04 	add.w	ip, ip, #4
  405b82:	45e2      	cmp	sl, ip
  405b84:	f109 0904 	add.w	r9, r9, #4
  405b88:	d8b7      	bhi.n	405afa <__multiply+0x66>
  405b8a:	f8dd a004 	ldr.w	sl, [sp, #4]
  405b8e:	f1b8 0f00 	cmp.w	r8, #0
  405b92:	dd0b      	ble.n	405bac <__multiply+0x118>
  405b94:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  405b98:	f1aa 0a04 	sub.w	sl, sl, #4
  405b9c:	b11b      	cbz	r3, 405ba6 <__multiply+0x112>
  405b9e:	e005      	b.n	405bac <__multiply+0x118>
  405ba0:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  405ba4:	b913      	cbnz	r3, 405bac <__multiply+0x118>
  405ba6:	f1b8 0801 	subs.w	r8, r8, #1
  405baa:	d1f9      	bne.n	405ba0 <__multiply+0x10c>
  405bac:	9800      	ldr	r0, [sp, #0]
  405bae:	f8c0 8010 	str.w	r8, [r0, #16]
  405bb2:	b003      	add	sp, #12
  405bb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00405bb8 <__pow5mult>:
  405bb8:	f012 0303 	ands.w	r3, r2, #3
  405bbc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405bc0:	4614      	mov	r4, r2
  405bc2:	4607      	mov	r7, r0
  405bc4:	d12e      	bne.n	405c24 <__pow5mult+0x6c>
  405bc6:	460d      	mov	r5, r1
  405bc8:	10a4      	asrs	r4, r4, #2
  405bca:	d01c      	beq.n	405c06 <__pow5mult+0x4e>
  405bcc:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  405bce:	b396      	cbz	r6, 405c36 <__pow5mult+0x7e>
  405bd0:	07e3      	lsls	r3, r4, #31
  405bd2:	f04f 0800 	mov.w	r8, #0
  405bd6:	d406      	bmi.n	405be6 <__pow5mult+0x2e>
  405bd8:	1064      	asrs	r4, r4, #1
  405bda:	d014      	beq.n	405c06 <__pow5mult+0x4e>
  405bdc:	6830      	ldr	r0, [r6, #0]
  405bde:	b1a8      	cbz	r0, 405c0c <__pow5mult+0x54>
  405be0:	4606      	mov	r6, r0
  405be2:	07e3      	lsls	r3, r4, #31
  405be4:	d5f8      	bpl.n	405bd8 <__pow5mult+0x20>
  405be6:	4632      	mov	r2, r6
  405be8:	4629      	mov	r1, r5
  405bea:	4638      	mov	r0, r7
  405bec:	f7ff ff52 	bl	405a94 <__multiply>
  405bf0:	b1b5      	cbz	r5, 405c20 <__pow5mult+0x68>
  405bf2:	686a      	ldr	r2, [r5, #4]
  405bf4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  405bf6:	1064      	asrs	r4, r4, #1
  405bf8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  405bfc:	6029      	str	r1, [r5, #0]
  405bfe:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  405c02:	4605      	mov	r5, r0
  405c04:	d1ea      	bne.n	405bdc <__pow5mult+0x24>
  405c06:	4628      	mov	r0, r5
  405c08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405c0c:	4632      	mov	r2, r6
  405c0e:	4631      	mov	r1, r6
  405c10:	4638      	mov	r0, r7
  405c12:	f7ff ff3f 	bl	405a94 <__multiply>
  405c16:	6030      	str	r0, [r6, #0]
  405c18:	f8c0 8000 	str.w	r8, [r0]
  405c1c:	4606      	mov	r6, r0
  405c1e:	e7e0      	b.n	405be2 <__pow5mult+0x2a>
  405c20:	4605      	mov	r5, r0
  405c22:	e7d9      	b.n	405bd8 <__pow5mult+0x20>
  405c24:	1e5a      	subs	r2, r3, #1
  405c26:	4d0b      	ldr	r5, [pc, #44]	; (405c54 <__pow5mult+0x9c>)
  405c28:	2300      	movs	r3, #0
  405c2a:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  405c2e:	f7ff fe97 	bl	405960 <__multadd>
  405c32:	4605      	mov	r5, r0
  405c34:	e7c8      	b.n	405bc8 <__pow5mult+0x10>
  405c36:	2101      	movs	r1, #1
  405c38:	4638      	mov	r0, r7
  405c3a:	f7ff fe61 	bl	405900 <_Balloc>
  405c3e:	f240 2171 	movw	r1, #625	; 0x271
  405c42:	2201      	movs	r2, #1
  405c44:	2300      	movs	r3, #0
  405c46:	6141      	str	r1, [r0, #20]
  405c48:	6102      	str	r2, [r0, #16]
  405c4a:	4606      	mov	r6, r0
  405c4c:	64b8      	str	r0, [r7, #72]	; 0x48
  405c4e:	6003      	str	r3, [r0, #0]
  405c50:	e7be      	b.n	405bd0 <__pow5mult+0x18>
  405c52:	bf00      	nop
  405c54:	00406e28 	.word	0x00406e28

00405c58 <__lshift>:
  405c58:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  405c5c:	4691      	mov	r9, r2
  405c5e:	690a      	ldr	r2, [r1, #16]
  405c60:	688b      	ldr	r3, [r1, #8]
  405c62:	ea4f 1469 	mov.w	r4, r9, asr #5
  405c66:	eb04 0802 	add.w	r8, r4, r2
  405c6a:	f108 0501 	add.w	r5, r8, #1
  405c6e:	429d      	cmp	r5, r3
  405c70:	460e      	mov	r6, r1
  405c72:	4607      	mov	r7, r0
  405c74:	6849      	ldr	r1, [r1, #4]
  405c76:	dd04      	ble.n	405c82 <__lshift+0x2a>
  405c78:	005b      	lsls	r3, r3, #1
  405c7a:	429d      	cmp	r5, r3
  405c7c:	f101 0101 	add.w	r1, r1, #1
  405c80:	dcfa      	bgt.n	405c78 <__lshift+0x20>
  405c82:	4638      	mov	r0, r7
  405c84:	f7ff fe3c 	bl	405900 <_Balloc>
  405c88:	2c00      	cmp	r4, #0
  405c8a:	f100 0314 	add.w	r3, r0, #20
  405c8e:	dd06      	ble.n	405c9e <__lshift+0x46>
  405c90:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  405c94:	2100      	movs	r1, #0
  405c96:	f843 1b04 	str.w	r1, [r3], #4
  405c9a:	429a      	cmp	r2, r3
  405c9c:	d1fb      	bne.n	405c96 <__lshift+0x3e>
  405c9e:	6934      	ldr	r4, [r6, #16]
  405ca0:	f106 0114 	add.w	r1, r6, #20
  405ca4:	f019 091f 	ands.w	r9, r9, #31
  405ca8:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  405cac:	d01d      	beq.n	405cea <__lshift+0x92>
  405cae:	f1c9 0c20 	rsb	ip, r9, #32
  405cb2:	2200      	movs	r2, #0
  405cb4:	680c      	ldr	r4, [r1, #0]
  405cb6:	fa04 f409 	lsl.w	r4, r4, r9
  405cba:	4314      	orrs	r4, r2
  405cbc:	f843 4b04 	str.w	r4, [r3], #4
  405cc0:	f851 2b04 	ldr.w	r2, [r1], #4
  405cc4:	458e      	cmp	lr, r1
  405cc6:	fa22 f20c 	lsr.w	r2, r2, ip
  405cca:	d8f3      	bhi.n	405cb4 <__lshift+0x5c>
  405ccc:	601a      	str	r2, [r3, #0]
  405cce:	b10a      	cbz	r2, 405cd4 <__lshift+0x7c>
  405cd0:	f108 0502 	add.w	r5, r8, #2
  405cd4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  405cd6:	6872      	ldr	r2, [r6, #4]
  405cd8:	3d01      	subs	r5, #1
  405cda:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  405cde:	6105      	str	r5, [r0, #16]
  405ce0:	6031      	str	r1, [r6, #0]
  405ce2:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  405ce6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405cea:	3b04      	subs	r3, #4
  405cec:	f851 2b04 	ldr.w	r2, [r1], #4
  405cf0:	f843 2f04 	str.w	r2, [r3, #4]!
  405cf4:	458e      	cmp	lr, r1
  405cf6:	d8f9      	bhi.n	405cec <__lshift+0x94>
  405cf8:	e7ec      	b.n	405cd4 <__lshift+0x7c>
  405cfa:	bf00      	nop

00405cfc <__mcmp>:
  405cfc:	b430      	push	{r4, r5}
  405cfe:	690b      	ldr	r3, [r1, #16]
  405d00:	4605      	mov	r5, r0
  405d02:	6900      	ldr	r0, [r0, #16]
  405d04:	1ac0      	subs	r0, r0, r3
  405d06:	d10f      	bne.n	405d28 <__mcmp+0x2c>
  405d08:	009b      	lsls	r3, r3, #2
  405d0a:	3514      	adds	r5, #20
  405d0c:	3114      	adds	r1, #20
  405d0e:	4419      	add	r1, r3
  405d10:	442b      	add	r3, r5
  405d12:	e001      	b.n	405d18 <__mcmp+0x1c>
  405d14:	429d      	cmp	r5, r3
  405d16:	d207      	bcs.n	405d28 <__mcmp+0x2c>
  405d18:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  405d1c:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  405d20:	4294      	cmp	r4, r2
  405d22:	d0f7      	beq.n	405d14 <__mcmp+0x18>
  405d24:	d302      	bcc.n	405d2c <__mcmp+0x30>
  405d26:	2001      	movs	r0, #1
  405d28:	bc30      	pop	{r4, r5}
  405d2a:	4770      	bx	lr
  405d2c:	f04f 30ff 	mov.w	r0, #4294967295
  405d30:	e7fa      	b.n	405d28 <__mcmp+0x2c>
  405d32:	bf00      	nop

00405d34 <__mdiff>:
  405d34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405d38:	690f      	ldr	r7, [r1, #16]
  405d3a:	460e      	mov	r6, r1
  405d3c:	6911      	ldr	r1, [r2, #16]
  405d3e:	1a7f      	subs	r7, r7, r1
  405d40:	2f00      	cmp	r7, #0
  405d42:	4690      	mov	r8, r2
  405d44:	d117      	bne.n	405d76 <__mdiff+0x42>
  405d46:	0089      	lsls	r1, r1, #2
  405d48:	f106 0514 	add.w	r5, r6, #20
  405d4c:	f102 0e14 	add.w	lr, r2, #20
  405d50:	186b      	adds	r3, r5, r1
  405d52:	4471      	add	r1, lr
  405d54:	e001      	b.n	405d5a <__mdiff+0x26>
  405d56:	429d      	cmp	r5, r3
  405d58:	d25c      	bcs.n	405e14 <__mdiff+0xe0>
  405d5a:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  405d5e:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  405d62:	42a2      	cmp	r2, r4
  405d64:	d0f7      	beq.n	405d56 <__mdiff+0x22>
  405d66:	d25e      	bcs.n	405e26 <__mdiff+0xf2>
  405d68:	4633      	mov	r3, r6
  405d6a:	462c      	mov	r4, r5
  405d6c:	4646      	mov	r6, r8
  405d6e:	4675      	mov	r5, lr
  405d70:	4698      	mov	r8, r3
  405d72:	2701      	movs	r7, #1
  405d74:	e005      	b.n	405d82 <__mdiff+0x4e>
  405d76:	db58      	blt.n	405e2a <__mdiff+0xf6>
  405d78:	f106 0514 	add.w	r5, r6, #20
  405d7c:	f108 0414 	add.w	r4, r8, #20
  405d80:	2700      	movs	r7, #0
  405d82:	6871      	ldr	r1, [r6, #4]
  405d84:	f7ff fdbc 	bl	405900 <_Balloc>
  405d88:	f8d8 3010 	ldr.w	r3, [r8, #16]
  405d8c:	6936      	ldr	r6, [r6, #16]
  405d8e:	60c7      	str	r7, [r0, #12]
  405d90:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  405d94:	46a6      	mov	lr, r4
  405d96:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  405d9a:	f100 0414 	add.w	r4, r0, #20
  405d9e:	2300      	movs	r3, #0
  405da0:	f85e 1b04 	ldr.w	r1, [lr], #4
  405da4:	f855 8b04 	ldr.w	r8, [r5], #4
  405da8:	b28a      	uxth	r2, r1
  405daa:	fa13 f388 	uxtah	r3, r3, r8
  405dae:	0c09      	lsrs	r1, r1, #16
  405db0:	1a9a      	subs	r2, r3, r2
  405db2:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  405db6:	eb03 4322 	add.w	r3, r3, r2, asr #16
  405dba:	b292      	uxth	r2, r2
  405dbc:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  405dc0:	45f4      	cmp	ip, lr
  405dc2:	f844 2b04 	str.w	r2, [r4], #4
  405dc6:	ea4f 4323 	mov.w	r3, r3, asr #16
  405dca:	d8e9      	bhi.n	405da0 <__mdiff+0x6c>
  405dcc:	42af      	cmp	r7, r5
  405dce:	d917      	bls.n	405e00 <__mdiff+0xcc>
  405dd0:	46a4      	mov	ip, r4
  405dd2:	46ae      	mov	lr, r5
  405dd4:	f85e 2b04 	ldr.w	r2, [lr], #4
  405dd8:	fa13 f382 	uxtah	r3, r3, r2
  405ddc:	1419      	asrs	r1, r3, #16
  405dde:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  405de2:	b29b      	uxth	r3, r3
  405de4:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  405de8:	4577      	cmp	r7, lr
  405dea:	f84c 2b04 	str.w	r2, [ip], #4
  405dee:	ea4f 4321 	mov.w	r3, r1, asr #16
  405df2:	d8ef      	bhi.n	405dd4 <__mdiff+0xa0>
  405df4:	43ed      	mvns	r5, r5
  405df6:	442f      	add	r7, r5
  405df8:	f027 0703 	bic.w	r7, r7, #3
  405dfc:	3704      	adds	r7, #4
  405dfe:	443c      	add	r4, r7
  405e00:	3c04      	subs	r4, #4
  405e02:	b922      	cbnz	r2, 405e0e <__mdiff+0xda>
  405e04:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  405e08:	3e01      	subs	r6, #1
  405e0a:	2b00      	cmp	r3, #0
  405e0c:	d0fa      	beq.n	405e04 <__mdiff+0xd0>
  405e0e:	6106      	str	r6, [r0, #16]
  405e10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405e14:	2100      	movs	r1, #0
  405e16:	f7ff fd73 	bl	405900 <_Balloc>
  405e1a:	2201      	movs	r2, #1
  405e1c:	2300      	movs	r3, #0
  405e1e:	6102      	str	r2, [r0, #16]
  405e20:	6143      	str	r3, [r0, #20]
  405e22:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405e26:	4674      	mov	r4, lr
  405e28:	e7ab      	b.n	405d82 <__mdiff+0x4e>
  405e2a:	4633      	mov	r3, r6
  405e2c:	f106 0414 	add.w	r4, r6, #20
  405e30:	f102 0514 	add.w	r5, r2, #20
  405e34:	4616      	mov	r6, r2
  405e36:	2701      	movs	r7, #1
  405e38:	4698      	mov	r8, r3
  405e3a:	e7a2      	b.n	405d82 <__mdiff+0x4e>

00405e3c <__d2b>:
  405e3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405e40:	b082      	sub	sp, #8
  405e42:	2101      	movs	r1, #1
  405e44:	461c      	mov	r4, r3
  405e46:	f3c3 570a 	ubfx	r7, r3, #20, #11
  405e4a:	4615      	mov	r5, r2
  405e4c:	9e08      	ldr	r6, [sp, #32]
  405e4e:	f7ff fd57 	bl	405900 <_Balloc>
  405e52:	f3c4 0413 	ubfx	r4, r4, #0, #20
  405e56:	4680      	mov	r8, r0
  405e58:	b10f      	cbz	r7, 405e5e <__d2b+0x22>
  405e5a:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  405e5e:	9401      	str	r4, [sp, #4]
  405e60:	b31d      	cbz	r5, 405eaa <__d2b+0x6e>
  405e62:	a802      	add	r0, sp, #8
  405e64:	f840 5d08 	str.w	r5, [r0, #-8]!
  405e68:	f7ff fdda 	bl	405a20 <__lo0bits>
  405e6c:	2800      	cmp	r0, #0
  405e6e:	d134      	bne.n	405eda <__d2b+0x9e>
  405e70:	e89d 000c 	ldmia.w	sp, {r2, r3}
  405e74:	f8c8 2014 	str.w	r2, [r8, #20]
  405e78:	2b00      	cmp	r3, #0
  405e7a:	bf0c      	ite	eq
  405e7c:	2101      	moveq	r1, #1
  405e7e:	2102      	movne	r1, #2
  405e80:	f8c8 3018 	str.w	r3, [r8, #24]
  405e84:	f8c8 1010 	str.w	r1, [r8, #16]
  405e88:	b9df      	cbnz	r7, 405ec2 <__d2b+0x86>
  405e8a:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  405e8e:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  405e92:	6030      	str	r0, [r6, #0]
  405e94:	6918      	ldr	r0, [r3, #16]
  405e96:	f7ff fda3 	bl	4059e0 <__hi0bits>
  405e9a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  405e9c:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  405ea0:	6018      	str	r0, [r3, #0]
  405ea2:	4640      	mov	r0, r8
  405ea4:	b002      	add	sp, #8
  405ea6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405eaa:	a801      	add	r0, sp, #4
  405eac:	f7ff fdb8 	bl	405a20 <__lo0bits>
  405eb0:	9b01      	ldr	r3, [sp, #4]
  405eb2:	f8c8 3014 	str.w	r3, [r8, #20]
  405eb6:	2101      	movs	r1, #1
  405eb8:	3020      	adds	r0, #32
  405eba:	f8c8 1010 	str.w	r1, [r8, #16]
  405ebe:	2f00      	cmp	r7, #0
  405ec0:	d0e3      	beq.n	405e8a <__d2b+0x4e>
  405ec2:	9b09      	ldr	r3, [sp, #36]	; 0x24
  405ec4:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  405ec8:	4407      	add	r7, r0
  405eca:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  405ece:	6037      	str	r7, [r6, #0]
  405ed0:	6018      	str	r0, [r3, #0]
  405ed2:	4640      	mov	r0, r8
  405ed4:	b002      	add	sp, #8
  405ed6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405eda:	e89d 000a 	ldmia.w	sp, {r1, r3}
  405ede:	f1c0 0220 	rsb	r2, r0, #32
  405ee2:	fa03 f202 	lsl.w	r2, r3, r2
  405ee6:	430a      	orrs	r2, r1
  405ee8:	40c3      	lsrs	r3, r0
  405eea:	9301      	str	r3, [sp, #4]
  405eec:	f8c8 2014 	str.w	r2, [r8, #20]
  405ef0:	e7c2      	b.n	405e78 <__d2b+0x3c>
  405ef2:	bf00      	nop

00405ef4 <_realloc_r>:
  405ef4:	2900      	cmp	r1, #0
  405ef6:	f000 8095 	beq.w	406024 <_realloc_r+0x130>
  405efa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405efe:	460d      	mov	r5, r1
  405f00:	4616      	mov	r6, r2
  405f02:	b083      	sub	sp, #12
  405f04:	4680      	mov	r8, r0
  405f06:	f106 070b 	add.w	r7, r6, #11
  405f0a:	f7ff fced 	bl	4058e8 <__malloc_lock>
  405f0e:	f855 ec04 	ldr.w	lr, [r5, #-4]
  405f12:	2f16      	cmp	r7, #22
  405f14:	f02e 0403 	bic.w	r4, lr, #3
  405f18:	f1a5 0908 	sub.w	r9, r5, #8
  405f1c:	d83c      	bhi.n	405f98 <_realloc_r+0xa4>
  405f1e:	2210      	movs	r2, #16
  405f20:	4617      	mov	r7, r2
  405f22:	42be      	cmp	r6, r7
  405f24:	d83d      	bhi.n	405fa2 <_realloc_r+0xae>
  405f26:	4294      	cmp	r4, r2
  405f28:	da43      	bge.n	405fb2 <_realloc_r+0xbe>
  405f2a:	4bc4      	ldr	r3, [pc, #784]	; (40623c <_realloc_r+0x348>)
  405f2c:	6899      	ldr	r1, [r3, #8]
  405f2e:	eb09 0004 	add.w	r0, r9, r4
  405f32:	4288      	cmp	r0, r1
  405f34:	f000 80b4 	beq.w	4060a0 <_realloc_r+0x1ac>
  405f38:	6843      	ldr	r3, [r0, #4]
  405f3a:	f023 0101 	bic.w	r1, r3, #1
  405f3e:	4401      	add	r1, r0
  405f40:	6849      	ldr	r1, [r1, #4]
  405f42:	07c9      	lsls	r1, r1, #31
  405f44:	d54c      	bpl.n	405fe0 <_realloc_r+0xec>
  405f46:	f01e 0f01 	tst.w	lr, #1
  405f4a:	f000 809b 	beq.w	406084 <_realloc_r+0x190>
  405f4e:	4631      	mov	r1, r6
  405f50:	4640      	mov	r0, r8
  405f52:	f7ff f949 	bl	4051e8 <_malloc_r>
  405f56:	4606      	mov	r6, r0
  405f58:	2800      	cmp	r0, #0
  405f5a:	d03a      	beq.n	405fd2 <_realloc_r+0xde>
  405f5c:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405f60:	f023 0301 	bic.w	r3, r3, #1
  405f64:	444b      	add	r3, r9
  405f66:	f1a0 0208 	sub.w	r2, r0, #8
  405f6a:	429a      	cmp	r2, r3
  405f6c:	f000 8121 	beq.w	4061b2 <_realloc_r+0x2be>
  405f70:	1f22      	subs	r2, r4, #4
  405f72:	2a24      	cmp	r2, #36	; 0x24
  405f74:	f200 8107 	bhi.w	406186 <_realloc_r+0x292>
  405f78:	2a13      	cmp	r2, #19
  405f7a:	f200 80db 	bhi.w	406134 <_realloc_r+0x240>
  405f7e:	4603      	mov	r3, r0
  405f80:	462a      	mov	r2, r5
  405f82:	6811      	ldr	r1, [r2, #0]
  405f84:	6019      	str	r1, [r3, #0]
  405f86:	6851      	ldr	r1, [r2, #4]
  405f88:	6059      	str	r1, [r3, #4]
  405f8a:	6892      	ldr	r2, [r2, #8]
  405f8c:	609a      	str	r2, [r3, #8]
  405f8e:	4629      	mov	r1, r5
  405f90:	4640      	mov	r0, r8
  405f92:	f7fe fdfd 	bl	404b90 <_free_r>
  405f96:	e01c      	b.n	405fd2 <_realloc_r+0xde>
  405f98:	f027 0707 	bic.w	r7, r7, #7
  405f9c:	2f00      	cmp	r7, #0
  405f9e:	463a      	mov	r2, r7
  405fa0:	dabf      	bge.n	405f22 <_realloc_r+0x2e>
  405fa2:	2600      	movs	r6, #0
  405fa4:	230c      	movs	r3, #12
  405fa6:	4630      	mov	r0, r6
  405fa8:	f8c8 3000 	str.w	r3, [r8]
  405fac:	b003      	add	sp, #12
  405fae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405fb2:	462e      	mov	r6, r5
  405fb4:	1be3      	subs	r3, r4, r7
  405fb6:	2b0f      	cmp	r3, #15
  405fb8:	d81e      	bhi.n	405ff8 <_realloc_r+0x104>
  405fba:	f8d9 3004 	ldr.w	r3, [r9, #4]
  405fbe:	f003 0301 	and.w	r3, r3, #1
  405fc2:	4323      	orrs	r3, r4
  405fc4:	444c      	add	r4, r9
  405fc6:	f8c9 3004 	str.w	r3, [r9, #4]
  405fca:	6863      	ldr	r3, [r4, #4]
  405fcc:	f043 0301 	orr.w	r3, r3, #1
  405fd0:	6063      	str	r3, [r4, #4]
  405fd2:	4640      	mov	r0, r8
  405fd4:	f7ff fc8e 	bl	4058f4 <__malloc_unlock>
  405fd8:	4630      	mov	r0, r6
  405fda:	b003      	add	sp, #12
  405fdc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405fe0:	f023 0303 	bic.w	r3, r3, #3
  405fe4:	18e1      	adds	r1, r4, r3
  405fe6:	4291      	cmp	r1, r2
  405fe8:	db1f      	blt.n	40602a <_realloc_r+0x136>
  405fea:	68c3      	ldr	r3, [r0, #12]
  405fec:	6882      	ldr	r2, [r0, #8]
  405fee:	462e      	mov	r6, r5
  405ff0:	60d3      	str	r3, [r2, #12]
  405ff2:	460c      	mov	r4, r1
  405ff4:	609a      	str	r2, [r3, #8]
  405ff6:	e7dd      	b.n	405fb4 <_realloc_r+0xc0>
  405ff8:	f8d9 2004 	ldr.w	r2, [r9, #4]
  405ffc:	eb09 0107 	add.w	r1, r9, r7
  406000:	f002 0201 	and.w	r2, r2, #1
  406004:	444c      	add	r4, r9
  406006:	f043 0301 	orr.w	r3, r3, #1
  40600a:	4317      	orrs	r7, r2
  40600c:	f8c9 7004 	str.w	r7, [r9, #4]
  406010:	604b      	str	r3, [r1, #4]
  406012:	6863      	ldr	r3, [r4, #4]
  406014:	f043 0301 	orr.w	r3, r3, #1
  406018:	3108      	adds	r1, #8
  40601a:	6063      	str	r3, [r4, #4]
  40601c:	4640      	mov	r0, r8
  40601e:	f7fe fdb7 	bl	404b90 <_free_r>
  406022:	e7d6      	b.n	405fd2 <_realloc_r+0xde>
  406024:	4611      	mov	r1, r2
  406026:	f7ff b8df 	b.w	4051e8 <_malloc_r>
  40602a:	f01e 0f01 	tst.w	lr, #1
  40602e:	d18e      	bne.n	405f4e <_realloc_r+0x5a>
  406030:	f855 1c08 	ldr.w	r1, [r5, #-8]
  406034:	eba9 0a01 	sub.w	sl, r9, r1
  406038:	f8da 1004 	ldr.w	r1, [sl, #4]
  40603c:	f021 0103 	bic.w	r1, r1, #3
  406040:	440b      	add	r3, r1
  406042:	4423      	add	r3, r4
  406044:	4293      	cmp	r3, r2
  406046:	db25      	blt.n	406094 <_realloc_r+0x1a0>
  406048:	68c2      	ldr	r2, [r0, #12]
  40604a:	6881      	ldr	r1, [r0, #8]
  40604c:	4656      	mov	r6, sl
  40604e:	60ca      	str	r2, [r1, #12]
  406050:	6091      	str	r1, [r2, #8]
  406052:	f8da 100c 	ldr.w	r1, [sl, #12]
  406056:	f856 0f08 	ldr.w	r0, [r6, #8]!
  40605a:	1f22      	subs	r2, r4, #4
  40605c:	2a24      	cmp	r2, #36	; 0x24
  40605e:	60c1      	str	r1, [r0, #12]
  406060:	6088      	str	r0, [r1, #8]
  406062:	f200 8094 	bhi.w	40618e <_realloc_r+0x29a>
  406066:	2a13      	cmp	r2, #19
  406068:	d96f      	bls.n	40614a <_realloc_r+0x256>
  40606a:	6829      	ldr	r1, [r5, #0]
  40606c:	f8ca 1008 	str.w	r1, [sl, #8]
  406070:	6869      	ldr	r1, [r5, #4]
  406072:	f8ca 100c 	str.w	r1, [sl, #12]
  406076:	2a1b      	cmp	r2, #27
  406078:	f200 80a2 	bhi.w	4061c0 <_realloc_r+0x2cc>
  40607c:	3508      	adds	r5, #8
  40607e:	f10a 0210 	add.w	r2, sl, #16
  406082:	e063      	b.n	40614c <_realloc_r+0x258>
  406084:	f855 3c08 	ldr.w	r3, [r5, #-8]
  406088:	eba9 0a03 	sub.w	sl, r9, r3
  40608c:	f8da 1004 	ldr.w	r1, [sl, #4]
  406090:	f021 0103 	bic.w	r1, r1, #3
  406094:	1863      	adds	r3, r4, r1
  406096:	4293      	cmp	r3, r2
  406098:	f6ff af59 	blt.w	405f4e <_realloc_r+0x5a>
  40609c:	4656      	mov	r6, sl
  40609e:	e7d8      	b.n	406052 <_realloc_r+0x15e>
  4060a0:	6841      	ldr	r1, [r0, #4]
  4060a2:	f021 0b03 	bic.w	fp, r1, #3
  4060a6:	44a3      	add	fp, r4
  4060a8:	f107 0010 	add.w	r0, r7, #16
  4060ac:	4583      	cmp	fp, r0
  4060ae:	da56      	bge.n	40615e <_realloc_r+0x26a>
  4060b0:	f01e 0f01 	tst.w	lr, #1
  4060b4:	f47f af4b 	bne.w	405f4e <_realloc_r+0x5a>
  4060b8:	f855 1c08 	ldr.w	r1, [r5, #-8]
  4060bc:	eba9 0a01 	sub.w	sl, r9, r1
  4060c0:	f8da 1004 	ldr.w	r1, [sl, #4]
  4060c4:	f021 0103 	bic.w	r1, r1, #3
  4060c8:	448b      	add	fp, r1
  4060ca:	4558      	cmp	r0, fp
  4060cc:	dce2      	bgt.n	406094 <_realloc_r+0x1a0>
  4060ce:	4656      	mov	r6, sl
  4060d0:	f8da 100c 	ldr.w	r1, [sl, #12]
  4060d4:	f856 0f08 	ldr.w	r0, [r6, #8]!
  4060d8:	1f22      	subs	r2, r4, #4
  4060da:	2a24      	cmp	r2, #36	; 0x24
  4060dc:	60c1      	str	r1, [r0, #12]
  4060de:	6088      	str	r0, [r1, #8]
  4060e0:	f200 808f 	bhi.w	406202 <_realloc_r+0x30e>
  4060e4:	2a13      	cmp	r2, #19
  4060e6:	f240 808a 	bls.w	4061fe <_realloc_r+0x30a>
  4060ea:	6829      	ldr	r1, [r5, #0]
  4060ec:	f8ca 1008 	str.w	r1, [sl, #8]
  4060f0:	6869      	ldr	r1, [r5, #4]
  4060f2:	f8ca 100c 	str.w	r1, [sl, #12]
  4060f6:	2a1b      	cmp	r2, #27
  4060f8:	f200 808a 	bhi.w	406210 <_realloc_r+0x31c>
  4060fc:	3508      	adds	r5, #8
  4060fe:	f10a 0210 	add.w	r2, sl, #16
  406102:	6829      	ldr	r1, [r5, #0]
  406104:	6011      	str	r1, [r2, #0]
  406106:	6869      	ldr	r1, [r5, #4]
  406108:	6051      	str	r1, [r2, #4]
  40610a:	68a9      	ldr	r1, [r5, #8]
  40610c:	6091      	str	r1, [r2, #8]
  40610e:	eb0a 0107 	add.w	r1, sl, r7
  406112:	ebab 0207 	sub.w	r2, fp, r7
  406116:	f042 0201 	orr.w	r2, r2, #1
  40611a:	6099      	str	r1, [r3, #8]
  40611c:	604a      	str	r2, [r1, #4]
  40611e:	f8da 3004 	ldr.w	r3, [sl, #4]
  406122:	f003 0301 	and.w	r3, r3, #1
  406126:	431f      	orrs	r7, r3
  406128:	4640      	mov	r0, r8
  40612a:	f8ca 7004 	str.w	r7, [sl, #4]
  40612e:	f7ff fbe1 	bl	4058f4 <__malloc_unlock>
  406132:	e751      	b.n	405fd8 <_realloc_r+0xe4>
  406134:	682b      	ldr	r3, [r5, #0]
  406136:	6003      	str	r3, [r0, #0]
  406138:	686b      	ldr	r3, [r5, #4]
  40613a:	6043      	str	r3, [r0, #4]
  40613c:	2a1b      	cmp	r2, #27
  40613e:	d82d      	bhi.n	40619c <_realloc_r+0x2a8>
  406140:	f100 0308 	add.w	r3, r0, #8
  406144:	f105 0208 	add.w	r2, r5, #8
  406148:	e71b      	b.n	405f82 <_realloc_r+0x8e>
  40614a:	4632      	mov	r2, r6
  40614c:	6829      	ldr	r1, [r5, #0]
  40614e:	6011      	str	r1, [r2, #0]
  406150:	6869      	ldr	r1, [r5, #4]
  406152:	6051      	str	r1, [r2, #4]
  406154:	68a9      	ldr	r1, [r5, #8]
  406156:	6091      	str	r1, [r2, #8]
  406158:	461c      	mov	r4, r3
  40615a:	46d1      	mov	r9, sl
  40615c:	e72a      	b.n	405fb4 <_realloc_r+0xc0>
  40615e:	eb09 0107 	add.w	r1, r9, r7
  406162:	ebab 0b07 	sub.w	fp, fp, r7
  406166:	f04b 0201 	orr.w	r2, fp, #1
  40616a:	6099      	str	r1, [r3, #8]
  40616c:	604a      	str	r2, [r1, #4]
  40616e:	f855 3c04 	ldr.w	r3, [r5, #-4]
  406172:	f003 0301 	and.w	r3, r3, #1
  406176:	431f      	orrs	r7, r3
  406178:	4640      	mov	r0, r8
  40617a:	f845 7c04 	str.w	r7, [r5, #-4]
  40617e:	f7ff fbb9 	bl	4058f4 <__malloc_unlock>
  406182:	462e      	mov	r6, r5
  406184:	e728      	b.n	405fd8 <_realloc_r+0xe4>
  406186:	4629      	mov	r1, r5
  406188:	f7ff fb4a 	bl	405820 <memmove>
  40618c:	e6ff      	b.n	405f8e <_realloc_r+0x9a>
  40618e:	4629      	mov	r1, r5
  406190:	4630      	mov	r0, r6
  406192:	461c      	mov	r4, r3
  406194:	46d1      	mov	r9, sl
  406196:	f7ff fb43 	bl	405820 <memmove>
  40619a:	e70b      	b.n	405fb4 <_realloc_r+0xc0>
  40619c:	68ab      	ldr	r3, [r5, #8]
  40619e:	6083      	str	r3, [r0, #8]
  4061a0:	68eb      	ldr	r3, [r5, #12]
  4061a2:	60c3      	str	r3, [r0, #12]
  4061a4:	2a24      	cmp	r2, #36	; 0x24
  4061a6:	d017      	beq.n	4061d8 <_realloc_r+0x2e4>
  4061a8:	f100 0310 	add.w	r3, r0, #16
  4061ac:	f105 0210 	add.w	r2, r5, #16
  4061b0:	e6e7      	b.n	405f82 <_realloc_r+0x8e>
  4061b2:	f850 3c04 	ldr.w	r3, [r0, #-4]
  4061b6:	f023 0303 	bic.w	r3, r3, #3
  4061ba:	441c      	add	r4, r3
  4061bc:	462e      	mov	r6, r5
  4061be:	e6f9      	b.n	405fb4 <_realloc_r+0xc0>
  4061c0:	68a9      	ldr	r1, [r5, #8]
  4061c2:	f8ca 1010 	str.w	r1, [sl, #16]
  4061c6:	68e9      	ldr	r1, [r5, #12]
  4061c8:	f8ca 1014 	str.w	r1, [sl, #20]
  4061cc:	2a24      	cmp	r2, #36	; 0x24
  4061ce:	d00c      	beq.n	4061ea <_realloc_r+0x2f6>
  4061d0:	3510      	adds	r5, #16
  4061d2:	f10a 0218 	add.w	r2, sl, #24
  4061d6:	e7b9      	b.n	40614c <_realloc_r+0x258>
  4061d8:	692b      	ldr	r3, [r5, #16]
  4061da:	6103      	str	r3, [r0, #16]
  4061dc:	696b      	ldr	r3, [r5, #20]
  4061de:	6143      	str	r3, [r0, #20]
  4061e0:	f105 0218 	add.w	r2, r5, #24
  4061e4:	f100 0318 	add.w	r3, r0, #24
  4061e8:	e6cb      	b.n	405f82 <_realloc_r+0x8e>
  4061ea:	692a      	ldr	r2, [r5, #16]
  4061ec:	f8ca 2018 	str.w	r2, [sl, #24]
  4061f0:	696a      	ldr	r2, [r5, #20]
  4061f2:	f8ca 201c 	str.w	r2, [sl, #28]
  4061f6:	3518      	adds	r5, #24
  4061f8:	f10a 0220 	add.w	r2, sl, #32
  4061fc:	e7a6      	b.n	40614c <_realloc_r+0x258>
  4061fe:	4632      	mov	r2, r6
  406200:	e77f      	b.n	406102 <_realloc_r+0x20e>
  406202:	4629      	mov	r1, r5
  406204:	4630      	mov	r0, r6
  406206:	9301      	str	r3, [sp, #4]
  406208:	f7ff fb0a 	bl	405820 <memmove>
  40620c:	9b01      	ldr	r3, [sp, #4]
  40620e:	e77e      	b.n	40610e <_realloc_r+0x21a>
  406210:	68a9      	ldr	r1, [r5, #8]
  406212:	f8ca 1010 	str.w	r1, [sl, #16]
  406216:	68e9      	ldr	r1, [r5, #12]
  406218:	f8ca 1014 	str.w	r1, [sl, #20]
  40621c:	2a24      	cmp	r2, #36	; 0x24
  40621e:	d003      	beq.n	406228 <_realloc_r+0x334>
  406220:	3510      	adds	r5, #16
  406222:	f10a 0218 	add.w	r2, sl, #24
  406226:	e76c      	b.n	406102 <_realloc_r+0x20e>
  406228:	692a      	ldr	r2, [r5, #16]
  40622a:	f8ca 2018 	str.w	r2, [sl, #24]
  40622e:	696a      	ldr	r2, [r5, #20]
  406230:	f8ca 201c 	str.w	r2, [sl, #28]
  406234:	3518      	adds	r5, #24
  406236:	f10a 0220 	add.w	r2, sl, #32
  40623a:	e762      	b.n	406102 <_realloc_r+0x20e>
  40623c:	204005b0 	.word	0x204005b0

00406240 <_sbrk_r>:
  406240:	b538      	push	{r3, r4, r5, lr}
  406242:	4c07      	ldr	r4, [pc, #28]	; (406260 <_sbrk_r+0x20>)
  406244:	2300      	movs	r3, #0
  406246:	4605      	mov	r5, r0
  406248:	4608      	mov	r0, r1
  40624a:	6023      	str	r3, [r4, #0]
  40624c:	f7fa ff3e 	bl	4010cc <_sbrk>
  406250:	1c43      	adds	r3, r0, #1
  406252:	d000      	beq.n	406256 <_sbrk_r+0x16>
  406254:	bd38      	pop	{r3, r4, r5, pc}
  406256:	6823      	ldr	r3, [r4, #0]
  406258:	2b00      	cmp	r3, #0
  40625a:	d0fb      	beq.n	406254 <_sbrk_r+0x14>
  40625c:	602b      	str	r3, [r5, #0]
  40625e:	bd38      	pop	{r3, r4, r5, pc}
  406260:	20400b48 	.word	0x20400b48

00406264 <__sread>:
  406264:	b510      	push	{r4, lr}
  406266:	460c      	mov	r4, r1
  406268:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40626c:	f000 faca 	bl	406804 <_read_r>
  406270:	2800      	cmp	r0, #0
  406272:	db03      	blt.n	40627c <__sread+0x18>
  406274:	6d23      	ldr	r3, [r4, #80]	; 0x50
  406276:	4403      	add	r3, r0
  406278:	6523      	str	r3, [r4, #80]	; 0x50
  40627a:	bd10      	pop	{r4, pc}
  40627c:	89a3      	ldrh	r3, [r4, #12]
  40627e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  406282:	81a3      	strh	r3, [r4, #12]
  406284:	bd10      	pop	{r4, pc}
  406286:	bf00      	nop

00406288 <__swrite>:
  406288:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40628c:	4616      	mov	r6, r2
  40628e:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
  406292:	461f      	mov	r7, r3
  406294:	05d3      	lsls	r3, r2, #23
  406296:	460c      	mov	r4, r1
  406298:	4605      	mov	r5, r0
  40629a:	d507      	bpl.n	4062ac <__swrite+0x24>
  40629c:	2200      	movs	r2, #0
  40629e:	2302      	movs	r3, #2
  4062a0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4062a4:	f000 fa98 	bl	4067d8 <_lseek_r>
  4062a8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  4062ac:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  4062b0:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  4062b4:	81a2      	strh	r2, [r4, #12]
  4062b6:	463b      	mov	r3, r7
  4062b8:	4632      	mov	r2, r6
  4062ba:	4628      	mov	r0, r5
  4062bc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4062c0:	f000 b8c4 	b.w	40644c <_write_r>

004062c4 <__sseek>:
  4062c4:	b510      	push	{r4, lr}
  4062c6:	460c      	mov	r4, r1
  4062c8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4062cc:	f000 fa84 	bl	4067d8 <_lseek_r>
  4062d0:	89a3      	ldrh	r3, [r4, #12]
  4062d2:	1c42      	adds	r2, r0, #1
  4062d4:	bf0e      	itee	eq
  4062d6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  4062da:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  4062de:	6520      	strne	r0, [r4, #80]	; 0x50
  4062e0:	81a3      	strh	r3, [r4, #12]
  4062e2:	bd10      	pop	{r4, pc}

004062e4 <__sclose>:
  4062e4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4062e8:	f000 b958 	b.w	40659c <_close_r>

004062ec <__sprint_r.part.0>:
  4062ec:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4062f0:	6e4b      	ldr	r3, [r1, #100]	; 0x64
  4062f2:	049c      	lsls	r4, r3, #18
  4062f4:	4693      	mov	fp, r2
  4062f6:	d52f      	bpl.n	406358 <__sprint_r.part.0+0x6c>
  4062f8:	6893      	ldr	r3, [r2, #8]
  4062fa:	6812      	ldr	r2, [r2, #0]
  4062fc:	b353      	cbz	r3, 406354 <__sprint_r.part.0+0x68>
  4062fe:	460e      	mov	r6, r1
  406300:	4607      	mov	r7, r0
  406302:	f102 0908 	add.w	r9, r2, #8
  406306:	e919 0420 	ldmdb	r9, {r5, sl}
  40630a:	ea5f 089a 	movs.w	r8, sl, lsr #2
  40630e:	d017      	beq.n	406340 <__sprint_r.part.0+0x54>
  406310:	3d04      	subs	r5, #4
  406312:	2400      	movs	r4, #0
  406314:	e001      	b.n	40631a <__sprint_r.part.0+0x2e>
  406316:	45a0      	cmp	r8, r4
  406318:	d010      	beq.n	40633c <__sprint_r.part.0+0x50>
  40631a:	4632      	mov	r2, r6
  40631c:	f855 1f04 	ldr.w	r1, [r5, #4]!
  406320:	4638      	mov	r0, r7
  406322:	f000 f9ff 	bl	406724 <_fputwc_r>
  406326:	1c43      	adds	r3, r0, #1
  406328:	f104 0401 	add.w	r4, r4, #1
  40632c:	d1f3      	bne.n	406316 <__sprint_r.part.0+0x2a>
  40632e:	2300      	movs	r3, #0
  406330:	f8cb 3008 	str.w	r3, [fp, #8]
  406334:	f8cb 3004 	str.w	r3, [fp, #4]
  406338:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40633c:	f8db 3008 	ldr.w	r3, [fp, #8]
  406340:	f02a 0a03 	bic.w	sl, sl, #3
  406344:	eba3 030a 	sub.w	r3, r3, sl
  406348:	f8cb 3008 	str.w	r3, [fp, #8]
  40634c:	f109 0908 	add.w	r9, r9, #8
  406350:	2b00      	cmp	r3, #0
  406352:	d1d8      	bne.n	406306 <__sprint_r.part.0+0x1a>
  406354:	2000      	movs	r0, #0
  406356:	e7ea      	b.n	40632e <__sprint_r.part.0+0x42>
  406358:	f7fe fd00 	bl	404d5c <__sfvwrite_r>
  40635c:	2300      	movs	r3, #0
  40635e:	f8cb 3008 	str.w	r3, [fp, #8]
  406362:	f8cb 3004 	str.w	r3, [fp, #4]
  406366:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40636a:	bf00      	nop

0040636c <__sprint_r>:
  40636c:	6893      	ldr	r3, [r2, #8]
  40636e:	b10b      	cbz	r3, 406374 <__sprint_r+0x8>
  406370:	f7ff bfbc 	b.w	4062ec <__sprint_r.part.0>
  406374:	b410      	push	{r4}
  406376:	4618      	mov	r0, r3
  406378:	6053      	str	r3, [r2, #4]
  40637a:	bc10      	pop	{r4}
  40637c:	4770      	bx	lr
  40637e:	bf00      	nop

00406380 <__swbuf_r>:
  406380:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406382:	460d      	mov	r5, r1
  406384:	4614      	mov	r4, r2
  406386:	4606      	mov	r6, r0
  406388:	b110      	cbz	r0, 406390 <__swbuf_r+0x10>
  40638a:	6b83      	ldr	r3, [r0, #56]	; 0x38
  40638c:	2b00      	cmp	r3, #0
  40638e:	d04b      	beq.n	406428 <__swbuf_r+0xa8>
  406390:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  406394:	69a3      	ldr	r3, [r4, #24]
  406396:	60a3      	str	r3, [r4, #8]
  406398:	b291      	uxth	r1, r2
  40639a:	0708      	lsls	r0, r1, #28
  40639c:	d539      	bpl.n	406412 <__swbuf_r+0x92>
  40639e:	6923      	ldr	r3, [r4, #16]
  4063a0:	2b00      	cmp	r3, #0
  4063a2:	d036      	beq.n	406412 <__swbuf_r+0x92>
  4063a4:	b2ed      	uxtb	r5, r5
  4063a6:	0489      	lsls	r1, r1, #18
  4063a8:	462f      	mov	r7, r5
  4063aa:	d515      	bpl.n	4063d8 <__swbuf_r+0x58>
  4063ac:	6822      	ldr	r2, [r4, #0]
  4063ae:	6961      	ldr	r1, [r4, #20]
  4063b0:	1ad3      	subs	r3, r2, r3
  4063b2:	428b      	cmp	r3, r1
  4063b4:	da1c      	bge.n	4063f0 <__swbuf_r+0x70>
  4063b6:	3301      	adds	r3, #1
  4063b8:	68a1      	ldr	r1, [r4, #8]
  4063ba:	1c50      	adds	r0, r2, #1
  4063bc:	3901      	subs	r1, #1
  4063be:	60a1      	str	r1, [r4, #8]
  4063c0:	6020      	str	r0, [r4, #0]
  4063c2:	7015      	strb	r5, [r2, #0]
  4063c4:	6962      	ldr	r2, [r4, #20]
  4063c6:	429a      	cmp	r2, r3
  4063c8:	d01a      	beq.n	406400 <__swbuf_r+0x80>
  4063ca:	89a3      	ldrh	r3, [r4, #12]
  4063cc:	07db      	lsls	r3, r3, #31
  4063ce:	d501      	bpl.n	4063d4 <__swbuf_r+0x54>
  4063d0:	2d0a      	cmp	r5, #10
  4063d2:	d015      	beq.n	406400 <__swbuf_r+0x80>
  4063d4:	4638      	mov	r0, r7
  4063d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4063d8:	6e61      	ldr	r1, [r4, #100]	; 0x64
  4063da:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  4063de:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  4063e2:	81a2      	strh	r2, [r4, #12]
  4063e4:	6822      	ldr	r2, [r4, #0]
  4063e6:	6661      	str	r1, [r4, #100]	; 0x64
  4063e8:	6961      	ldr	r1, [r4, #20]
  4063ea:	1ad3      	subs	r3, r2, r3
  4063ec:	428b      	cmp	r3, r1
  4063ee:	dbe2      	blt.n	4063b6 <__swbuf_r+0x36>
  4063f0:	4621      	mov	r1, r4
  4063f2:	4630      	mov	r0, r6
  4063f4:	f7fe fad2 	bl	40499c <_fflush_r>
  4063f8:	b940      	cbnz	r0, 40640c <__swbuf_r+0x8c>
  4063fa:	6822      	ldr	r2, [r4, #0]
  4063fc:	2301      	movs	r3, #1
  4063fe:	e7db      	b.n	4063b8 <__swbuf_r+0x38>
  406400:	4621      	mov	r1, r4
  406402:	4630      	mov	r0, r6
  406404:	f7fe faca 	bl	40499c <_fflush_r>
  406408:	2800      	cmp	r0, #0
  40640a:	d0e3      	beq.n	4063d4 <__swbuf_r+0x54>
  40640c:	f04f 37ff 	mov.w	r7, #4294967295
  406410:	e7e0      	b.n	4063d4 <__swbuf_r+0x54>
  406412:	4621      	mov	r1, r4
  406414:	4630      	mov	r0, r6
  406416:	f7fd f9ef 	bl	4037f8 <__swsetup_r>
  40641a:	2800      	cmp	r0, #0
  40641c:	d1f6      	bne.n	40640c <__swbuf_r+0x8c>
  40641e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  406422:	6923      	ldr	r3, [r4, #16]
  406424:	b291      	uxth	r1, r2
  406426:	e7bd      	b.n	4063a4 <__swbuf_r+0x24>
  406428:	f7fe fb10 	bl	404a4c <__sinit>
  40642c:	e7b0      	b.n	406390 <__swbuf_r+0x10>
  40642e:	bf00      	nop

00406430 <__ascii_wctomb>:
  406430:	b121      	cbz	r1, 40643c <__ascii_wctomb+0xc>
  406432:	2aff      	cmp	r2, #255	; 0xff
  406434:	d804      	bhi.n	406440 <__ascii_wctomb+0x10>
  406436:	700a      	strb	r2, [r1, #0]
  406438:	2001      	movs	r0, #1
  40643a:	4770      	bx	lr
  40643c:	4608      	mov	r0, r1
  40643e:	4770      	bx	lr
  406440:	238a      	movs	r3, #138	; 0x8a
  406442:	6003      	str	r3, [r0, #0]
  406444:	f04f 30ff 	mov.w	r0, #4294967295
  406448:	4770      	bx	lr
  40644a:	bf00      	nop

0040644c <_write_r>:
  40644c:	b570      	push	{r4, r5, r6, lr}
  40644e:	460d      	mov	r5, r1
  406450:	4c08      	ldr	r4, [pc, #32]	; (406474 <_write_r+0x28>)
  406452:	4611      	mov	r1, r2
  406454:	4606      	mov	r6, r0
  406456:	461a      	mov	r2, r3
  406458:	4628      	mov	r0, r5
  40645a:	2300      	movs	r3, #0
  40645c:	6023      	str	r3, [r4, #0]
  40645e:	f7fa fa29 	bl	4008b4 <_write>
  406462:	1c43      	adds	r3, r0, #1
  406464:	d000      	beq.n	406468 <_write_r+0x1c>
  406466:	bd70      	pop	{r4, r5, r6, pc}
  406468:	6823      	ldr	r3, [r4, #0]
  40646a:	2b00      	cmp	r3, #0
  40646c:	d0fb      	beq.n	406466 <_write_r+0x1a>
  40646e:	6033      	str	r3, [r6, #0]
  406470:	bd70      	pop	{r4, r5, r6, pc}
  406472:	bf00      	nop
  406474:	20400b48 	.word	0x20400b48

00406478 <__register_exitproc>:
  406478:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40647c:	4d2c      	ldr	r5, [pc, #176]	; (406530 <__register_exitproc+0xb8>)
  40647e:	4606      	mov	r6, r0
  406480:	6828      	ldr	r0, [r5, #0]
  406482:	4698      	mov	r8, r3
  406484:	460f      	mov	r7, r1
  406486:	4691      	mov	r9, r2
  406488:	f7fe fe2a 	bl	4050e0 <__retarget_lock_acquire_recursive>
  40648c:	4b29      	ldr	r3, [pc, #164]	; (406534 <__register_exitproc+0xbc>)
  40648e:	681c      	ldr	r4, [r3, #0]
  406490:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  406494:	2b00      	cmp	r3, #0
  406496:	d03e      	beq.n	406516 <__register_exitproc+0x9e>
  406498:	685a      	ldr	r2, [r3, #4]
  40649a:	2a1f      	cmp	r2, #31
  40649c:	dc1c      	bgt.n	4064d8 <__register_exitproc+0x60>
  40649e:	f102 0e01 	add.w	lr, r2, #1
  4064a2:	b176      	cbz	r6, 4064c2 <__register_exitproc+0x4a>
  4064a4:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  4064a8:	2401      	movs	r4, #1
  4064aa:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  4064ae:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  4064b2:	4094      	lsls	r4, r2
  4064b4:	4320      	orrs	r0, r4
  4064b6:	2e02      	cmp	r6, #2
  4064b8:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  4064bc:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  4064c0:	d023      	beq.n	40650a <__register_exitproc+0x92>
  4064c2:	3202      	adds	r2, #2
  4064c4:	f8c3 e004 	str.w	lr, [r3, #4]
  4064c8:	6828      	ldr	r0, [r5, #0]
  4064ca:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  4064ce:	f7fe fe09 	bl	4050e4 <__retarget_lock_release_recursive>
  4064d2:	2000      	movs	r0, #0
  4064d4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4064d8:	4b17      	ldr	r3, [pc, #92]	; (406538 <__register_exitproc+0xc0>)
  4064da:	b30b      	cbz	r3, 406520 <__register_exitproc+0xa8>
  4064dc:	f44f 70c8 	mov.w	r0, #400	; 0x190
  4064e0:	f7fe fe7a 	bl	4051d8 <malloc>
  4064e4:	4603      	mov	r3, r0
  4064e6:	b1d8      	cbz	r0, 406520 <__register_exitproc+0xa8>
  4064e8:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  4064ec:	6002      	str	r2, [r0, #0]
  4064ee:	2100      	movs	r1, #0
  4064f0:	6041      	str	r1, [r0, #4]
  4064f2:	460a      	mov	r2, r1
  4064f4:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  4064f8:	f04f 0e01 	mov.w	lr, #1
  4064fc:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  406500:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  406504:	2e00      	cmp	r6, #0
  406506:	d0dc      	beq.n	4064c2 <__register_exitproc+0x4a>
  406508:	e7cc      	b.n	4064a4 <__register_exitproc+0x2c>
  40650a:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  40650e:	430c      	orrs	r4, r1
  406510:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  406514:	e7d5      	b.n	4064c2 <__register_exitproc+0x4a>
  406516:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  40651a:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  40651e:	e7bb      	b.n	406498 <__register_exitproc+0x20>
  406520:	6828      	ldr	r0, [r5, #0]
  406522:	f7fe fddf 	bl	4050e4 <__retarget_lock_release_recursive>
  406526:	f04f 30ff 	mov.w	r0, #4294967295
  40652a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40652e:	bf00      	nop
  406530:	20400440 	.word	0x20400440
  406534:	00406ca8 	.word	0x00406ca8
  406538:	004051d9 	.word	0x004051d9

0040653c <_calloc_r>:
  40653c:	b510      	push	{r4, lr}
  40653e:	fb02 f101 	mul.w	r1, r2, r1
  406542:	f7fe fe51 	bl	4051e8 <_malloc_r>
  406546:	4604      	mov	r4, r0
  406548:	b1d8      	cbz	r0, 406582 <_calloc_r+0x46>
  40654a:	f850 2c04 	ldr.w	r2, [r0, #-4]
  40654e:	f022 0203 	bic.w	r2, r2, #3
  406552:	3a04      	subs	r2, #4
  406554:	2a24      	cmp	r2, #36	; 0x24
  406556:	d818      	bhi.n	40658a <_calloc_r+0x4e>
  406558:	2a13      	cmp	r2, #19
  40655a:	d914      	bls.n	406586 <_calloc_r+0x4a>
  40655c:	2300      	movs	r3, #0
  40655e:	2a1b      	cmp	r2, #27
  406560:	6003      	str	r3, [r0, #0]
  406562:	6043      	str	r3, [r0, #4]
  406564:	d916      	bls.n	406594 <_calloc_r+0x58>
  406566:	2a24      	cmp	r2, #36	; 0x24
  406568:	6083      	str	r3, [r0, #8]
  40656a:	60c3      	str	r3, [r0, #12]
  40656c:	bf11      	iteee	ne
  40656e:	f100 0210 	addne.w	r2, r0, #16
  406572:	6103      	streq	r3, [r0, #16]
  406574:	6143      	streq	r3, [r0, #20]
  406576:	f100 0218 	addeq.w	r2, r0, #24
  40657a:	2300      	movs	r3, #0
  40657c:	6013      	str	r3, [r2, #0]
  40657e:	6053      	str	r3, [r2, #4]
  406580:	6093      	str	r3, [r2, #8]
  406582:	4620      	mov	r0, r4
  406584:	bd10      	pop	{r4, pc}
  406586:	4602      	mov	r2, r0
  406588:	e7f7      	b.n	40657a <_calloc_r+0x3e>
  40658a:	2100      	movs	r1, #0
  40658c:	f7fb fc40 	bl	401e10 <memset>
  406590:	4620      	mov	r0, r4
  406592:	bd10      	pop	{r4, pc}
  406594:	f100 0208 	add.w	r2, r0, #8
  406598:	e7ef      	b.n	40657a <_calloc_r+0x3e>
  40659a:	bf00      	nop

0040659c <_close_r>:
  40659c:	b538      	push	{r3, r4, r5, lr}
  40659e:	4c07      	ldr	r4, [pc, #28]	; (4065bc <_close_r+0x20>)
  4065a0:	2300      	movs	r3, #0
  4065a2:	4605      	mov	r5, r0
  4065a4:	4608      	mov	r0, r1
  4065a6:	6023      	str	r3, [r4, #0]
  4065a8:	f7fa fdac 	bl	401104 <_close>
  4065ac:	1c43      	adds	r3, r0, #1
  4065ae:	d000      	beq.n	4065b2 <_close_r+0x16>
  4065b0:	bd38      	pop	{r3, r4, r5, pc}
  4065b2:	6823      	ldr	r3, [r4, #0]
  4065b4:	2b00      	cmp	r3, #0
  4065b6:	d0fb      	beq.n	4065b0 <_close_r+0x14>
  4065b8:	602b      	str	r3, [r5, #0]
  4065ba:	bd38      	pop	{r3, r4, r5, pc}
  4065bc:	20400b48 	.word	0x20400b48

004065c0 <_fclose_r>:
  4065c0:	b570      	push	{r4, r5, r6, lr}
  4065c2:	b159      	cbz	r1, 4065dc <_fclose_r+0x1c>
  4065c4:	4605      	mov	r5, r0
  4065c6:	460c      	mov	r4, r1
  4065c8:	b110      	cbz	r0, 4065d0 <_fclose_r+0x10>
  4065ca:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4065cc:	2b00      	cmp	r3, #0
  4065ce:	d03c      	beq.n	40664a <_fclose_r+0x8a>
  4065d0:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4065d2:	07d8      	lsls	r0, r3, #31
  4065d4:	d505      	bpl.n	4065e2 <_fclose_r+0x22>
  4065d6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4065da:	b92b      	cbnz	r3, 4065e8 <_fclose_r+0x28>
  4065dc:	2600      	movs	r6, #0
  4065de:	4630      	mov	r0, r6
  4065e0:	bd70      	pop	{r4, r5, r6, pc}
  4065e2:	89a3      	ldrh	r3, [r4, #12]
  4065e4:	0599      	lsls	r1, r3, #22
  4065e6:	d53c      	bpl.n	406662 <_fclose_r+0xa2>
  4065e8:	4621      	mov	r1, r4
  4065ea:	4628      	mov	r0, r5
  4065ec:	f7fe f936 	bl	40485c <__sflush_r>
  4065f0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  4065f2:	4606      	mov	r6, r0
  4065f4:	b133      	cbz	r3, 406604 <_fclose_r+0x44>
  4065f6:	69e1      	ldr	r1, [r4, #28]
  4065f8:	4628      	mov	r0, r5
  4065fa:	4798      	blx	r3
  4065fc:	2800      	cmp	r0, #0
  4065fe:	bfb8      	it	lt
  406600:	f04f 36ff 	movlt.w	r6, #4294967295
  406604:	89a3      	ldrh	r3, [r4, #12]
  406606:	061a      	lsls	r2, r3, #24
  406608:	d422      	bmi.n	406650 <_fclose_r+0x90>
  40660a:	6b21      	ldr	r1, [r4, #48]	; 0x30
  40660c:	b141      	cbz	r1, 406620 <_fclose_r+0x60>
  40660e:	f104 0340 	add.w	r3, r4, #64	; 0x40
  406612:	4299      	cmp	r1, r3
  406614:	d002      	beq.n	40661c <_fclose_r+0x5c>
  406616:	4628      	mov	r0, r5
  406618:	f7fe faba 	bl	404b90 <_free_r>
  40661c:	2300      	movs	r3, #0
  40661e:	6323      	str	r3, [r4, #48]	; 0x30
  406620:	6c61      	ldr	r1, [r4, #68]	; 0x44
  406622:	b121      	cbz	r1, 40662e <_fclose_r+0x6e>
  406624:	4628      	mov	r0, r5
  406626:	f7fe fab3 	bl	404b90 <_free_r>
  40662a:	2300      	movs	r3, #0
  40662c:	6463      	str	r3, [r4, #68]	; 0x44
  40662e:	f7fe fa39 	bl	404aa4 <__sfp_lock_acquire>
  406632:	6e63      	ldr	r3, [r4, #100]	; 0x64
  406634:	2200      	movs	r2, #0
  406636:	07db      	lsls	r3, r3, #31
  406638:	81a2      	strh	r2, [r4, #12]
  40663a:	d50e      	bpl.n	40665a <_fclose_r+0x9a>
  40663c:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40663e:	f7fe fd4d 	bl	4050dc <__retarget_lock_close_recursive>
  406642:	f7fe fa35 	bl	404ab0 <__sfp_lock_release>
  406646:	4630      	mov	r0, r6
  406648:	bd70      	pop	{r4, r5, r6, pc}
  40664a:	f7fe f9ff 	bl	404a4c <__sinit>
  40664e:	e7bf      	b.n	4065d0 <_fclose_r+0x10>
  406650:	6921      	ldr	r1, [r4, #16]
  406652:	4628      	mov	r0, r5
  406654:	f7fe fa9c 	bl	404b90 <_free_r>
  406658:	e7d7      	b.n	40660a <_fclose_r+0x4a>
  40665a:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40665c:	f7fe fd42 	bl	4050e4 <__retarget_lock_release_recursive>
  406660:	e7ec      	b.n	40663c <_fclose_r+0x7c>
  406662:	6da0      	ldr	r0, [r4, #88]	; 0x58
  406664:	f7fe fd3c 	bl	4050e0 <__retarget_lock_acquire_recursive>
  406668:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40666c:	2b00      	cmp	r3, #0
  40666e:	d1bb      	bne.n	4065e8 <_fclose_r+0x28>
  406670:	6e66      	ldr	r6, [r4, #100]	; 0x64
  406672:	f016 0601 	ands.w	r6, r6, #1
  406676:	d1b1      	bne.n	4065dc <_fclose_r+0x1c>
  406678:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40667a:	f7fe fd33 	bl	4050e4 <__retarget_lock_release_recursive>
  40667e:	4630      	mov	r0, r6
  406680:	bd70      	pop	{r4, r5, r6, pc}
  406682:	bf00      	nop

00406684 <__fputwc>:
  406684:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  406688:	b082      	sub	sp, #8
  40668a:	4680      	mov	r8, r0
  40668c:	4689      	mov	r9, r1
  40668e:	4614      	mov	r4, r2
  406690:	f7fe fd06 	bl	4050a0 <__locale_mb_cur_max>
  406694:	2801      	cmp	r0, #1
  406696:	d036      	beq.n	406706 <__fputwc+0x82>
  406698:	464a      	mov	r2, r9
  40669a:	f104 035c 	add.w	r3, r4, #92	; 0x5c
  40669e:	a901      	add	r1, sp, #4
  4066a0:	4640      	mov	r0, r8
  4066a2:	f000 f8c5 	bl	406830 <_wcrtomb_r>
  4066a6:	1c42      	adds	r2, r0, #1
  4066a8:	4606      	mov	r6, r0
  4066aa:	d025      	beq.n	4066f8 <__fputwc+0x74>
  4066ac:	b3a8      	cbz	r0, 40671a <__fputwc+0x96>
  4066ae:	f89d e004 	ldrb.w	lr, [sp, #4]
  4066b2:	2500      	movs	r5, #0
  4066b4:	f10d 0a04 	add.w	sl, sp, #4
  4066b8:	e009      	b.n	4066ce <__fputwc+0x4a>
  4066ba:	6823      	ldr	r3, [r4, #0]
  4066bc:	1c5a      	adds	r2, r3, #1
  4066be:	6022      	str	r2, [r4, #0]
  4066c0:	f883 e000 	strb.w	lr, [r3]
  4066c4:	3501      	adds	r5, #1
  4066c6:	42b5      	cmp	r5, r6
  4066c8:	d227      	bcs.n	40671a <__fputwc+0x96>
  4066ca:	f815 e00a 	ldrb.w	lr, [r5, sl]
  4066ce:	68a3      	ldr	r3, [r4, #8]
  4066d0:	3b01      	subs	r3, #1
  4066d2:	2b00      	cmp	r3, #0
  4066d4:	60a3      	str	r3, [r4, #8]
  4066d6:	daf0      	bge.n	4066ba <__fputwc+0x36>
  4066d8:	69a7      	ldr	r7, [r4, #24]
  4066da:	42bb      	cmp	r3, r7
  4066dc:	4671      	mov	r1, lr
  4066de:	4622      	mov	r2, r4
  4066e0:	4640      	mov	r0, r8
  4066e2:	db02      	blt.n	4066ea <__fputwc+0x66>
  4066e4:	f1be 0f0a 	cmp.w	lr, #10
  4066e8:	d1e7      	bne.n	4066ba <__fputwc+0x36>
  4066ea:	f7ff fe49 	bl	406380 <__swbuf_r>
  4066ee:	1c43      	adds	r3, r0, #1
  4066f0:	d1e8      	bne.n	4066c4 <__fputwc+0x40>
  4066f2:	b002      	add	sp, #8
  4066f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4066f8:	89a3      	ldrh	r3, [r4, #12]
  4066fa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4066fe:	81a3      	strh	r3, [r4, #12]
  406700:	b002      	add	sp, #8
  406702:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406706:	f109 33ff 	add.w	r3, r9, #4294967295
  40670a:	2bfe      	cmp	r3, #254	; 0xfe
  40670c:	d8c4      	bhi.n	406698 <__fputwc+0x14>
  40670e:	fa5f fe89 	uxtb.w	lr, r9
  406712:	4606      	mov	r6, r0
  406714:	f88d e004 	strb.w	lr, [sp, #4]
  406718:	e7cb      	b.n	4066b2 <__fputwc+0x2e>
  40671a:	4648      	mov	r0, r9
  40671c:	b002      	add	sp, #8
  40671e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406722:	bf00      	nop

00406724 <_fputwc_r>:
  406724:	b530      	push	{r4, r5, lr}
  406726:	6e53      	ldr	r3, [r2, #100]	; 0x64
  406728:	f013 0f01 	tst.w	r3, #1
  40672c:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
  406730:	4614      	mov	r4, r2
  406732:	b083      	sub	sp, #12
  406734:	4605      	mov	r5, r0
  406736:	b29a      	uxth	r2, r3
  406738:	d101      	bne.n	40673e <_fputwc_r+0x1a>
  40673a:	0590      	lsls	r0, r2, #22
  40673c:	d51c      	bpl.n	406778 <_fputwc_r+0x54>
  40673e:	0490      	lsls	r0, r2, #18
  406740:	d406      	bmi.n	406750 <_fputwc_r+0x2c>
  406742:	6e62      	ldr	r2, [r4, #100]	; 0x64
  406744:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  406748:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  40674c:	81a3      	strh	r3, [r4, #12]
  40674e:	6662      	str	r2, [r4, #100]	; 0x64
  406750:	4628      	mov	r0, r5
  406752:	4622      	mov	r2, r4
  406754:	f7ff ff96 	bl	406684 <__fputwc>
  406758:	6e63      	ldr	r3, [r4, #100]	; 0x64
  40675a:	07da      	lsls	r2, r3, #31
  40675c:	4605      	mov	r5, r0
  40675e:	d402      	bmi.n	406766 <_fputwc_r+0x42>
  406760:	89a3      	ldrh	r3, [r4, #12]
  406762:	059b      	lsls	r3, r3, #22
  406764:	d502      	bpl.n	40676c <_fputwc_r+0x48>
  406766:	4628      	mov	r0, r5
  406768:	b003      	add	sp, #12
  40676a:	bd30      	pop	{r4, r5, pc}
  40676c:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40676e:	f7fe fcb9 	bl	4050e4 <__retarget_lock_release_recursive>
  406772:	4628      	mov	r0, r5
  406774:	b003      	add	sp, #12
  406776:	bd30      	pop	{r4, r5, pc}
  406778:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40677a:	9101      	str	r1, [sp, #4]
  40677c:	f7fe fcb0 	bl	4050e0 <__retarget_lock_acquire_recursive>
  406780:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  406784:	9901      	ldr	r1, [sp, #4]
  406786:	b29a      	uxth	r2, r3
  406788:	e7d9      	b.n	40673e <_fputwc_r+0x1a>
  40678a:	bf00      	nop

0040678c <_fstat_r>:
  40678c:	b538      	push	{r3, r4, r5, lr}
  40678e:	460b      	mov	r3, r1
  406790:	4c07      	ldr	r4, [pc, #28]	; (4067b0 <_fstat_r+0x24>)
  406792:	4605      	mov	r5, r0
  406794:	4611      	mov	r1, r2
  406796:	4618      	mov	r0, r3
  406798:	2300      	movs	r3, #0
  40679a:	6023      	str	r3, [r4, #0]
  40679c:	f7fa fcb5 	bl	40110a <_fstat>
  4067a0:	1c43      	adds	r3, r0, #1
  4067a2:	d000      	beq.n	4067a6 <_fstat_r+0x1a>
  4067a4:	bd38      	pop	{r3, r4, r5, pc}
  4067a6:	6823      	ldr	r3, [r4, #0]
  4067a8:	2b00      	cmp	r3, #0
  4067aa:	d0fb      	beq.n	4067a4 <_fstat_r+0x18>
  4067ac:	602b      	str	r3, [r5, #0]
  4067ae:	bd38      	pop	{r3, r4, r5, pc}
  4067b0:	20400b48 	.word	0x20400b48

004067b4 <_isatty_r>:
  4067b4:	b538      	push	{r3, r4, r5, lr}
  4067b6:	4c07      	ldr	r4, [pc, #28]	; (4067d4 <_isatty_r+0x20>)
  4067b8:	2300      	movs	r3, #0
  4067ba:	4605      	mov	r5, r0
  4067bc:	4608      	mov	r0, r1
  4067be:	6023      	str	r3, [r4, #0]
  4067c0:	f7fa fca8 	bl	401114 <_isatty>
  4067c4:	1c43      	adds	r3, r0, #1
  4067c6:	d000      	beq.n	4067ca <_isatty_r+0x16>
  4067c8:	bd38      	pop	{r3, r4, r5, pc}
  4067ca:	6823      	ldr	r3, [r4, #0]
  4067cc:	2b00      	cmp	r3, #0
  4067ce:	d0fb      	beq.n	4067c8 <_isatty_r+0x14>
  4067d0:	602b      	str	r3, [r5, #0]
  4067d2:	bd38      	pop	{r3, r4, r5, pc}
  4067d4:	20400b48 	.word	0x20400b48

004067d8 <_lseek_r>:
  4067d8:	b570      	push	{r4, r5, r6, lr}
  4067da:	460d      	mov	r5, r1
  4067dc:	4c08      	ldr	r4, [pc, #32]	; (406800 <_lseek_r+0x28>)
  4067de:	4611      	mov	r1, r2
  4067e0:	4606      	mov	r6, r0
  4067e2:	461a      	mov	r2, r3
  4067e4:	4628      	mov	r0, r5
  4067e6:	2300      	movs	r3, #0
  4067e8:	6023      	str	r3, [r4, #0]
  4067ea:	f7fa fc95 	bl	401118 <_lseek>
  4067ee:	1c43      	adds	r3, r0, #1
  4067f0:	d000      	beq.n	4067f4 <_lseek_r+0x1c>
  4067f2:	bd70      	pop	{r4, r5, r6, pc}
  4067f4:	6823      	ldr	r3, [r4, #0]
  4067f6:	2b00      	cmp	r3, #0
  4067f8:	d0fb      	beq.n	4067f2 <_lseek_r+0x1a>
  4067fa:	6033      	str	r3, [r6, #0]
  4067fc:	bd70      	pop	{r4, r5, r6, pc}
  4067fe:	bf00      	nop
  406800:	20400b48 	.word	0x20400b48

00406804 <_read_r>:
  406804:	b570      	push	{r4, r5, r6, lr}
  406806:	460d      	mov	r5, r1
  406808:	4c08      	ldr	r4, [pc, #32]	; (40682c <_read_r+0x28>)
  40680a:	4611      	mov	r1, r2
  40680c:	4606      	mov	r6, r0
  40680e:	461a      	mov	r2, r3
  406810:	4628      	mov	r0, r5
  406812:	2300      	movs	r3, #0
  406814:	6023      	str	r3, [r4, #0]
  406816:	f7fa f82f 	bl	400878 <_read>
  40681a:	1c43      	adds	r3, r0, #1
  40681c:	d000      	beq.n	406820 <_read_r+0x1c>
  40681e:	bd70      	pop	{r4, r5, r6, pc}
  406820:	6823      	ldr	r3, [r4, #0]
  406822:	2b00      	cmp	r3, #0
  406824:	d0fb      	beq.n	40681e <_read_r+0x1a>
  406826:	6033      	str	r3, [r6, #0]
  406828:	bd70      	pop	{r4, r5, r6, pc}
  40682a:	bf00      	nop
  40682c:	20400b48 	.word	0x20400b48

00406830 <_wcrtomb_r>:
  406830:	b5f0      	push	{r4, r5, r6, r7, lr}
  406832:	4606      	mov	r6, r0
  406834:	b085      	sub	sp, #20
  406836:	461f      	mov	r7, r3
  406838:	b189      	cbz	r1, 40685e <_wcrtomb_r+0x2e>
  40683a:	4c10      	ldr	r4, [pc, #64]	; (40687c <_wcrtomb_r+0x4c>)
  40683c:	4d10      	ldr	r5, [pc, #64]	; (406880 <_wcrtomb_r+0x50>)
  40683e:	6824      	ldr	r4, [r4, #0]
  406840:	6b64      	ldr	r4, [r4, #52]	; 0x34
  406842:	2c00      	cmp	r4, #0
  406844:	bf08      	it	eq
  406846:	462c      	moveq	r4, r5
  406848:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
  40684c:	47a0      	blx	r4
  40684e:	1c43      	adds	r3, r0, #1
  406850:	d103      	bne.n	40685a <_wcrtomb_r+0x2a>
  406852:	2200      	movs	r2, #0
  406854:	238a      	movs	r3, #138	; 0x8a
  406856:	603a      	str	r2, [r7, #0]
  406858:	6033      	str	r3, [r6, #0]
  40685a:	b005      	add	sp, #20
  40685c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40685e:	460c      	mov	r4, r1
  406860:	4906      	ldr	r1, [pc, #24]	; (40687c <_wcrtomb_r+0x4c>)
  406862:	4a07      	ldr	r2, [pc, #28]	; (406880 <_wcrtomb_r+0x50>)
  406864:	6809      	ldr	r1, [r1, #0]
  406866:	6b49      	ldr	r1, [r1, #52]	; 0x34
  406868:	2900      	cmp	r1, #0
  40686a:	bf08      	it	eq
  40686c:	4611      	moveq	r1, r2
  40686e:	4622      	mov	r2, r4
  406870:	f8d1 40e0 	ldr.w	r4, [r1, #224]	; 0xe0
  406874:	a901      	add	r1, sp, #4
  406876:	47a0      	blx	r4
  406878:	e7e9      	b.n	40684e <_wcrtomb_r+0x1e>
  40687a:	bf00      	nop
  40687c:	20400010 	.word	0x20400010
  406880:	20400444 	.word	0x20400444

00406884 <__aeabi_dcmpun>:
  406884:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  406888:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  40688c:	d102      	bne.n	406894 <__aeabi_dcmpun+0x10>
  40688e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  406892:	d10a      	bne.n	4068aa <__aeabi_dcmpun+0x26>
  406894:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  406898:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  40689c:	d102      	bne.n	4068a4 <__aeabi_dcmpun+0x20>
  40689e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  4068a2:	d102      	bne.n	4068aa <__aeabi_dcmpun+0x26>
  4068a4:	f04f 0000 	mov.w	r0, #0
  4068a8:	4770      	bx	lr
  4068aa:	f04f 0001 	mov.w	r0, #1
  4068ae:	4770      	bx	lr

004068b0 <__aeabi_d2iz>:
  4068b0:	ea4f 0241 	mov.w	r2, r1, lsl #1
  4068b4:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  4068b8:	d215      	bcs.n	4068e6 <__aeabi_d2iz+0x36>
  4068ba:	d511      	bpl.n	4068e0 <__aeabi_d2iz+0x30>
  4068bc:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  4068c0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  4068c4:	d912      	bls.n	4068ec <__aeabi_d2iz+0x3c>
  4068c6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  4068ca:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  4068ce:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  4068d2:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4068d6:	fa23 f002 	lsr.w	r0, r3, r2
  4068da:	bf18      	it	ne
  4068dc:	4240      	negne	r0, r0
  4068de:	4770      	bx	lr
  4068e0:	f04f 0000 	mov.w	r0, #0
  4068e4:	4770      	bx	lr
  4068e6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  4068ea:	d105      	bne.n	4068f8 <__aeabi_d2iz+0x48>
  4068ec:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  4068f0:	bf08      	it	eq
  4068f2:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  4068f6:	4770      	bx	lr
  4068f8:	f04f 0000 	mov.w	r0, #0
  4068fc:	4770      	bx	lr
  4068fe:	bf00      	nop

00406900 <__aeabi_uldivmod>:
  406900:	b953      	cbnz	r3, 406918 <__aeabi_uldivmod+0x18>
  406902:	b94a      	cbnz	r2, 406918 <__aeabi_uldivmod+0x18>
  406904:	2900      	cmp	r1, #0
  406906:	bf08      	it	eq
  406908:	2800      	cmpeq	r0, #0
  40690a:	bf1c      	itt	ne
  40690c:	f04f 31ff 	movne.w	r1, #4294967295
  406910:	f04f 30ff 	movne.w	r0, #4294967295
  406914:	f000 b97a 	b.w	406c0c <__aeabi_idiv0>
  406918:	f1ad 0c08 	sub.w	ip, sp, #8
  40691c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  406920:	f000 f806 	bl	406930 <__udivmoddi4>
  406924:	f8dd e004 	ldr.w	lr, [sp, #4]
  406928:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  40692c:	b004      	add	sp, #16
  40692e:	4770      	bx	lr

00406930 <__udivmoddi4>:
  406930:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  406934:	468c      	mov	ip, r1
  406936:	460d      	mov	r5, r1
  406938:	4604      	mov	r4, r0
  40693a:	9e08      	ldr	r6, [sp, #32]
  40693c:	2b00      	cmp	r3, #0
  40693e:	d151      	bne.n	4069e4 <__udivmoddi4+0xb4>
  406940:	428a      	cmp	r2, r1
  406942:	4617      	mov	r7, r2
  406944:	d96d      	bls.n	406a22 <__udivmoddi4+0xf2>
  406946:	fab2 fe82 	clz	lr, r2
  40694a:	f1be 0f00 	cmp.w	lr, #0
  40694e:	d00b      	beq.n	406968 <__udivmoddi4+0x38>
  406950:	f1ce 0c20 	rsb	ip, lr, #32
  406954:	fa01 f50e 	lsl.w	r5, r1, lr
  406958:	fa20 fc0c 	lsr.w	ip, r0, ip
  40695c:	fa02 f70e 	lsl.w	r7, r2, lr
  406960:	ea4c 0c05 	orr.w	ip, ip, r5
  406964:	fa00 f40e 	lsl.w	r4, r0, lr
  406968:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  40696c:	0c25      	lsrs	r5, r4, #16
  40696e:	fbbc f8fa 	udiv	r8, ip, sl
  406972:	fa1f f987 	uxth.w	r9, r7
  406976:	fb0a cc18 	mls	ip, sl, r8, ip
  40697a:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  40697e:	fb08 f309 	mul.w	r3, r8, r9
  406982:	42ab      	cmp	r3, r5
  406984:	d90a      	bls.n	40699c <__udivmoddi4+0x6c>
  406986:	19ed      	adds	r5, r5, r7
  406988:	f108 32ff 	add.w	r2, r8, #4294967295
  40698c:	f080 8123 	bcs.w	406bd6 <__udivmoddi4+0x2a6>
  406990:	42ab      	cmp	r3, r5
  406992:	f240 8120 	bls.w	406bd6 <__udivmoddi4+0x2a6>
  406996:	f1a8 0802 	sub.w	r8, r8, #2
  40699a:	443d      	add	r5, r7
  40699c:	1aed      	subs	r5, r5, r3
  40699e:	b2a4      	uxth	r4, r4
  4069a0:	fbb5 f0fa 	udiv	r0, r5, sl
  4069a4:	fb0a 5510 	mls	r5, sl, r0, r5
  4069a8:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  4069ac:	fb00 f909 	mul.w	r9, r0, r9
  4069b0:	45a1      	cmp	r9, r4
  4069b2:	d909      	bls.n	4069c8 <__udivmoddi4+0x98>
  4069b4:	19e4      	adds	r4, r4, r7
  4069b6:	f100 33ff 	add.w	r3, r0, #4294967295
  4069ba:	f080 810a 	bcs.w	406bd2 <__udivmoddi4+0x2a2>
  4069be:	45a1      	cmp	r9, r4
  4069c0:	f240 8107 	bls.w	406bd2 <__udivmoddi4+0x2a2>
  4069c4:	3802      	subs	r0, #2
  4069c6:	443c      	add	r4, r7
  4069c8:	eba4 0409 	sub.w	r4, r4, r9
  4069cc:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4069d0:	2100      	movs	r1, #0
  4069d2:	2e00      	cmp	r6, #0
  4069d4:	d061      	beq.n	406a9a <__udivmoddi4+0x16a>
  4069d6:	fa24 f40e 	lsr.w	r4, r4, lr
  4069da:	2300      	movs	r3, #0
  4069dc:	6034      	str	r4, [r6, #0]
  4069de:	6073      	str	r3, [r6, #4]
  4069e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4069e4:	428b      	cmp	r3, r1
  4069e6:	d907      	bls.n	4069f8 <__udivmoddi4+0xc8>
  4069e8:	2e00      	cmp	r6, #0
  4069ea:	d054      	beq.n	406a96 <__udivmoddi4+0x166>
  4069ec:	2100      	movs	r1, #0
  4069ee:	e886 0021 	stmia.w	r6, {r0, r5}
  4069f2:	4608      	mov	r0, r1
  4069f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4069f8:	fab3 f183 	clz	r1, r3
  4069fc:	2900      	cmp	r1, #0
  4069fe:	f040 808e 	bne.w	406b1e <__udivmoddi4+0x1ee>
  406a02:	42ab      	cmp	r3, r5
  406a04:	d302      	bcc.n	406a0c <__udivmoddi4+0xdc>
  406a06:	4282      	cmp	r2, r0
  406a08:	f200 80fa 	bhi.w	406c00 <__udivmoddi4+0x2d0>
  406a0c:	1a84      	subs	r4, r0, r2
  406a0e:	eb65 0503 	sbc.w	r5, r5, r3
  406a12:	2001      	movs	r0, #1
  406a14:	46ac      	mov	ip, r5
  406a16:	2e00      	cmp	r6, #0
  406a18:	d03f      	beq.n	406a9a <__udivmoddi4+0x16a>
  406a1a:	e886 1010 	stmia.w	r6, {r4, ip}
  406a1e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406a22:	b912      	cbnz	r2, 406a2a <__udivmoddi4+0xfa>
  406a24:	2701      	movs	r7, #1
  406a26:	fbb7 f7f2 	udiv	r7, r7, r2
  406a2a:	fab7 fe87 	clz	lr, r7
  406a2e:	f1be 0f00 	cmp.w	lr, #0
  406a32:	d134      	bne.n	406a9e <__udivmoddi4+0x16e>
  406a34:	1beb      	subs	r3, r5, r7
  406a36:	0c3a      	lsrs	r2, r7, #16
  406a38:	fa1f fc87 	uxth.w	ip, r7
  406a3c:	2101      	movs	r1, #1
  406a3e:	fbb3 f8f2 	udiv	r8, r3, r2
  406a42:	0c25      	lsrs	r5, r4, #16
  406a44:	fb02 3318 	mls	r3, r2, r8, r3
  406a48:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  406a4c:	fb0c f308 	mul.w	r3, ip, r8
  406a50:	42ab      	cmp	r3, r5
  406a52:	d907      	bls.n	406a64 <__udivmoddi4+0x134>
  406a54:	19ed      	adds	r5, r5, r7
  406a56:	f108 30ff 	add.w	r0, r8, #4294967295
  406a5a:	d202      	bcs.n	406a62 <__udivmoddi4+0x132>
  406a5c:	42ab      	cmp	r3, r5
  406a5e:	f200 80d1 	bhi.w	406c04 <__udivmoddi4+0x2d4>
  406a62:	4680      	mov	r8, r0
  406a64:	1aed      	subs	r5, r5, r3
  406a66:	b2a3      	uxth	r3, r4
  406a68:	fbb5 f0f2 	udiv	r0, r5, r2
  406a6c:	fb02 5510 	mls	r5, r2, r0, r5
  406a70:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  406a74:	fb0c fc00 	mul.w	ip, ip, r0
  406a78:	45a4      	cmp	ip, r4
  406a7a:	d907      	bls.n	406a8c <__udivmoddi4+0x15c>
  406a7c:	19e4      	adds	r4, r4, r7
  406a7e:	f100 33ff 	add.w	r3, r0, #4294967295
  406a82:	d202      	bcs.n	406a8a <__udivmoddi4+0x15a>
  406a84:	45a4      	cmp	ip, r4
  406a86:	f200 80b8 	bhi.w	406bfa <__udivmoddi4+0x2ca>
  406a8a:	4618      	mov	r0, r3
  406a8c:	eba4 040c 	sub.w	r4, r4, ip
  406a90:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  406a94:	e79d      	b.n	4069d2 <__udivmoddi4+0xa2>
  406a96:	4631      	mov	r1, r6
  406a98:	4630      	mov	r0, r6
  406a9a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406a9e:	f1ce 0420 	rsb	r4, lr, #32
  406aa2:	fa05 f30e 	lsl.w	r3, r5, lr
  406aa6:	fa07 f70e 	lsl.w	r7, r7, lr
  406aaa:	fa20 f804 	lsr.w	r8, r0, r4
  406aae:	0c3a      	lsrs	r2, r7, #16
  406ab0:	fa25 f404 	lsr.w	r4, r5, r4
  406ab4:	ea48 0803 	orr.w	r8, r8, r3
  406ab8:	fbb4 f1f2 	udiv	r1, r4, r2
  406abc:	ea4f 4518 	mov.w	r5, r8, lsr #16
  406ac0:	fb02 4411 	mls	r4, r2, r1, r4
  406ac4:	fa1f fc87 	uxth.w	ip, r7
  406ac8:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  406acc:	fb01 f30c 	mul.w	r3, r1, ip
  406ad0:	42ab      	cmp	r3, r5
  406ad2:	fa00 f40e 	lsl.w	r4, r0, lr
  406ad6:	d909      	bls.n	406aec <__udivmoddi4+0x1bc>
  406ad8:	19ed      	adds	r5, r5, r7
  406ada:	f101 30ff 	add.w	r0, r1, #4294967295
  406ade:	f080 808a 	bcs.w	406bf6 <__udivmoddi4+0x2c6>
  406ae2:	42ab      	cmp	r3, r5
  406ae4:	f240 8087 	bls.w	406bf6 <__udivmoddi4+0x2c6>
  406ae8:	3902      	subs	r1, #2
  406aea:	443d      	add	r5, r7
  406aec:	1aeb      	subs	r3, r5, r3
  406aee:	fa1f f588 	uxth.w	r5, r8
  406af2:	fbb3 f0f2 	udiv	r0, r3, r2
  406af6:	fb02 3310 	mls	r3, r2, r0, r3
  406afa:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  406afe:	fb00 f30c 	mul.w	r3, r0, ip
  406b02:	42ab      	cmp	r3, r5
  406b04:	d907      	bls.n	406b16 <__udivmoddi4+0x1e6>
  406b06:	19ed      	adds	r5, r5, r7
  406b08:	f100 38ff 	add.w	r8, r0, #4294967295
  406b0c:	d26f      	bcs.n	406bee <__udivmoddi4+0x2be>
  406b0e:	42ab      	cmp	r3, r5
  406b10:	d96d      	bls.n	406bee <__udivmoddi4+0x2be>
  406b12:	3802      	subs	r0, #2
  406b14:	443d      	add	r5, r7
  406b16:	1aeb      	subs	r3, r5, r3
  406b18:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  406b1c:	e78f      	b.n	406a3e <__udivmoddi4+0x10e>
  406b1e:	f1c1 0720 	rsb	r7, r1, #32
  406b22:	fa22 f807 	lsr.w	r8, r2, r7
  406b26:	408b      	lsls	r3, r1
  406b28:	fa05 f401 	lsl.w	r4, r5, r1
  406b2c:	ea48 0303 	orr.w	r3, r8, r3
  406b30:	fa20 fe07 	lsr.w	lr, r0, r7
  406b34:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  406b38:	40fd      	lsrs	r5, r7
  406b3a:	ea4e 0e04 	orr.w	lr, lr, r4
  406b3e:	fbb5 f9fc 	udiv	r9, r5, ip
  406b42:	ea4f 441e 	mov.w	r4, lr, lsr #16
  406b46:	fb0c 5519 	mls	r5, ip, r9, r5
  406b4a:	fa1f f883 	uxth.w	r8, r3
  406b4e:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  406b52:	fb09 f408 	mul.w	r4, r9, r8
  406b56:	42ac      	cmp	r4, r5
  406b58:	fa02 f201 	lsl.w	r2, r2, r1
  406b5c:	fa00 fa01 	lsl.w	sl, r0, r1
  406b60:	d908      	bls.n	406b74 <__udivmoddi4+0x244>
  406b62:	18ed      	adds	r5, r5, r3
  406b64:	f109 30ff 	add.w	r0, r9, #4294967295
  406b68:	d243      	bcs.n	406bf2 <__udivmoddi4+0x2c2>
  406b6a:	42ac      	cmp	r4, r5
  406b6c:	d941      	bls.n	406bf2 <__udivmoddi4+0x2c2>
  406b6e:	f1a9 0902 	sub.w	r9, r9, #2
  406b72:	441d      	add	r5, r3
  406b74:	1b2d      	subs	r5, r5, r4
  406b76:	fa1f fe8e 	uxth.w	lr, lr
  406b7a:	fbb5 f0fc 	udiv	r0, r5, ip
  406b7e:	fb0c 5510 	mls	r5, ip, r0, r5
  406b82:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  406b86:	fb00 f808 	mul.w	r8, r0, r8
  406b8a:	45a0      	cmp	r8, r4
  406b8c:	d907      	bls.n	406b9e <__udivmoddi4+0x26e>
  406b8e:	18e4      	adds	r4, r4, r3
  406b90:	f100 35ff 	add.w	r5, r0, #4294967295
  406b94:	d229      	bcs.n	406bea <__udivmoddi4+0x2ba>
  406b96:	45a0      	cmp	r8, r4
  406b98:	d927      	bls.n	406bea <__udivmoddi4+0x2ba>
  406b9a:	3802      	subs	r0, #2
  406b9c:	441c      	add	r4, r3
  406b9e:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  406ba2:	eba4 0408 	sub.w	r4, r4, r8
  406ba6:	fba0 8902 	umull	r8, r9, r0, r2
  406baa:	454c      	cmp	r4, r9
  406bac:	46c6      	mov	lr, r8
  406bae:	464d      	mov	r5, r9
  406bb0:	d315      	bcc.n	406bde <__udivmoddi4+0x2ae>
  406bb2:	d012      	beq.n	406bda <__udivmoddi4+0x2aa>
  406bb4:	b156      	cbz	r6, 406bcc <__udivmoddi4+0x29c>
  406bb6:	ebba 030e 	subs.w	r3, sl, lr
  406bba:	eb64 0405 	sbc.w	r4, r4, r5
  406bbe:	fa04 f707 	lsl.w	r7, r4, r7
  406bc2:	40cb      	lsrs	r3, r1
  406bc4:	431f      	orrs	r7, r3
  406bc6:	40cc      	lsrs	r4, r1
  406bc8:	6037      	str	r7, [r6, #0]
  406bca:	6074      	str	r4, [r6, #4]
  406bcc:	2100      	movs	r1, #0
  406bce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406bd2:	4618      	mov	r0, r3
  406bd4:	e6f8      	b.n	4069c8 <__udivmoddi4+0x98>
  406bd6:	4690      	mov	r8, r2
  406bd8:	e6e0      	b.n	40699c <__udivmoddi4+0x6c>
  406bda:	45c2      	cmp	sl, r8
  406bdc:	d2ea      	bcs.n	406bb4 <__udivmoddi4+0x284>
  406bde:	ebb8 0e02 	subs.w	lr, r8, r2
  406be2:	eb69 0503 	sbc.w	r5, r9, r3
  406be6:	3801      	subs	r0, #1
  406be8:	e7e4      	b.n	406bb4 <__udivmoddi4+0x284>
  406bea:	4628      	mov	r0, r5
  406bec:	e7d7      	b.n	406b9e <__udivmoddi4+0x26e>
  406bee:	4640      	mov	r0, r8
  406bf0:	e791      	b.n	406b16 <__udivmoddi4+0x1e6>
  406bf2:	4681      	mov	r9, r0
  406bf4:	e7be      	b.n	406b74 <__udivmoddi4+0x244>
  406bf6:	4601      	mov	r1, r0
  406bf8:	e778      	b.n	406aec <__udivmoddi4+0x1bc>
  406bfa:	3802      	subs	r0, #2
  406bfc:	443c      	add	r4, r7
  406bfe:	e745      	b.n	406a8c <__udivmoddi4+0x15c>
  406c00:	4608      	mov	r0, r1
  406c02:	e708      	b.n	406a16 <__udivmoddi4+0xe6>
  406c04:	f1a8 0802 	sub.w	r8, r8, #2
  406c08:	443d      	add	r5, r7
  406c0a:	e72b      	b.n	406a64 <__udivmoddi4+0x134>

00406c0c <__aeabi_idiv0>:
  406c0c:	4770      	bx	lr
  406c0e:	bf00      	nop
  406c10:	4c202d2d 	.word	0x4c202d2d
  406c14:	736f6d75 	.word	0x736f6d75
  406c18:	616d5320 	.word	0x616d5320
  406c1c:	4c207472 	.word	0x4c207472
  406c20:	74686769 	.word	0x74686769
  406c24:	6e757220 	.word	0x6e757220
  406c28:	676e696e 	.word	0x676e696e
  406c2c:	0d2d2d20 	.word	0x0d2d2d20
  406c30:	202d2d0a 	.word	0x202d2d0a
  406c34:	454d4153 	.word	0x454d4153
  406c38:	582d3037 	.word	0x582d3037
  406c3c:	20444c50 	.word	0x20444c50
  406c40:	0a0d2d2d 	.word	0x0a0d2d2d
  406c44:	43202d2d 	.word	0x43202d2d
  406c48:	69706d6f 	.word	0x69706d6f
  406c4c:	3a64656c 	.word	0x3a64656c
  406c50:	79614d20 	.word	0x79614d20
  406c54:	20313220 	.word	0x20313220
  406c58:	38313032 	.word	0x38313032
  406c5c:	3a303220 	.word	0x3a303220
  406c60:	323a3730 	.word	0x323a3730
  406c64:	2d2d2031 	.word	0x2d2d2031
  406c68:	0000000d 	.word	0x0000000d
  406c6c:	706d6554 	.word	0x706d6554
  406c70:	74617265 	.word	0x74617265
  406c74:	3a617275 	.word	0x3a617275
  406c78:	666c2520 	.word	0x666c2520
  406c7c:	00000a20 	.word	0x00000a20
  406c80:	696d7548 	.word	0x696d7548
  406c84:	65646164 	.word	0x65646164
  406c88:	6c25203a 	.word	0x6c25203a
  406c8c:	000a2066 	.word	0x000a2066
  406c90:	63617473 	.word	0x63617473
  406c94:	766f206b 	.word	0x766f206b
  406c98:	6c667265 	.word	0x6c667265
  406c9c:	2520776f 	.word	0x2520776f
  406ca0:	73252078 	.word	0x73252078
  406ca4:	00000a0d 	.word	0x00000a0d

00406ca8 <_global_impure_ptr>:
  406ca8:	20400018 0000000a 00464e49 00666e69     ..@ ....INF.inf.
  406cb8:	004e414e 006e616e 33323130 37363534     NAN.nan.01234567
  406cc8:	42413938 46454443 00000000 33323130     89ABCDEF....0123
  406cd8:	37363534 62613938 66656463 00000000     456789abcdef....
  406ce8:	6c756e28 0000296c 00000030              (null)..0...

00406cf4 <blanks.7238>:
  406cf4:	20202020 20202020 20202020 20202020                     

00406d04 <zeroes.7239>:
  406d04:	30303030 30303030 30303030 30303030     0000000000000000
  406d14:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
  406d24:	00000043 49534f50 00000058 0000002e     C...POSIX.......
  406d34:	00000000                                ....

00406d38 <__mprec_bigtens>:
  406d38:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
  406d48:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
  406d58:	7f73bf3c 75154fdd                       <.s..O.u

00406d60 <__mprec_tens>:
  406d60:	00000000 3ff00000 00000000 40240000     .......?......$@
  406d70:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
  406d80:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
  406d90:	00000000 412e8480 00000000 416312d0     .......A......cA
  406da0:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
  406db0:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
  406dc0:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
  406dd0:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
  406de0:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
  406df0:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
  406e00:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
  406e10:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
  406e20:	79d99db4 44ea7843                       ...yCx.D

00406e28 <p05.6055>:
  406e28:	00000005 00000019 0000007d              ........}...

00406e34 <_ctype_>:
  406e34:	20202000 20202020 28282020 20282828     .         ((((( 
  406e44:	20202020 20202020 20202020 20202020                     
  406e54:	10108820 10101010 10101010 10101010      ...............
  406e64:	04040410 04040404 10040404 10101010     ................
  406e74:	41411010 41414141 01010101 01010101     ..AAAAAA........
  406e84:	01010101 01010101 01010101 10101010     ................
  406e94:	42421010 42424242 02020202 02020202     ..BBBBBB........
  406ea4:	02020202 02020202 02020202 10101010     ................
  406eb4:	00000020 00000000 00000000 00000000      ...............
	...

00406f38 <_init>:
  406f38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406f3a:	bf00      	nop
  406f3c:	bcf8      	pop	{r3, r4, r5, r6, r7}
  406f3e:	bc08      	pop	{r3}
  406f40:	469e      	mov	lr, r3
  406f42:	4770      	bx	lr

00406f44 <__init_array_start>:
  406f44:	004038c1 	.word	0x004038c1

00406f48 <__frame_dummy_init_array_entry>:
  406f48:	00400165                                e.@.

00406f4c <_fini>:
  406f4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406f4e:	bf00      	nop
  406f50:	bcf8      	pop	{r3, r4, r5, r6, r7}
  406f52:	bc08      	pop	{r3}
  406f54:	469e      	mov	lr, r3
  406f56:	4770      	bx	lr

00406f58 <__fini_array_start>:
  406f58:	00400141 	.word	0x00400141

Disassembly of section .relocate:

20400000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20400000:	f3bf 8f5f 	dmb	sy
20400004:	3801      	subs	r0, #1
20400006:	d1fb      	bne.n	20400000 <portable_delay_cycles>
20400008:	4770      	bx	lr

2040000a <g_interrupt_enabled>:
2040000a:	0001                                        ..

2040000c <SystemCoreClock>:
2040000c:	0900 003d                                   ..=.

20400010 <_impure_ptr>:
20400010:	0018 2040 0000 0000                         ..@ ....

20400018 <impure_data>:
20400018:	0000 0000 0304 2040 036c 2040 03d4 2040     ......@ l.@ ..@ 
	...
204000c0:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
204000d0:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20400440 <__atexit_recursive_mutex>:
20400440:	0b24 2040                                   $.@ 

20400444 <__global_locale>:
20400444:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400464:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400484:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204004a4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204004c4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204004e4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400504:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400524:	6431 0040 5749 0040 0000 0000 6e34 0040     1d@.IW@.....4n@.
20400534:	6d30 0040 6cd0 0040 6cd0 0040 6cd0 0040     0m@..l@..l@..l@.
20400544:	6cd0 0040 6cd0 0040 6cd0 0040 6cd0 0040     .l@..l@..l@..l@.
20400554:	6cd0 0040 6cd0 0040 ffff ffff ffff ffff     .l@..l@.........
20400564:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
2040058c:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...

204005b0 <__malloc_av_>:
	...
204005b8:	05b0 2040 05b0 2040 05b8 2040 05b8 2040     ..@ ..@ ..@ ..@ 
204005c8:	05c0 2040 05c0 2040 05c8 2040 05c8 2040     ..@ ..@ ..@ ..@ 
204005d8:	05d0 2040 05d0 2040 05d8 2040 05d8 2040     ..@ ..@ ..@ ..@ 
204005e8:	05e0 2040 05e0 2040 05e8 2040 05e8 2040     ..@ ..@ ..@ ..@ 
204005f8:	05f0 2040 05f0 2040 05f8 2040 05f8 2040     ..@ ..@ ..@ ..@ 
20400608:	0600 2040 0600 2040 0608 2040 0608 2040     ..@ ..@ ..@ ..@ 
20400618:	0610 2040 0610 2040 0618 2040 0618 2040     ..@ ..@ ..@ ..@ 
20400628:	0620 2040 0620 2040 0628 2040 0628 2040      .@  .@ (.@ (.@ 
20400638:	0630 2040 0630 2040 0638 2040 0638 2040     0.@ 0.@ 8.@ 8.@ 
20400648:	0640 2040 0640 2040 0648 2040 0648 2040     @.@ @.@ H.@ H.@ 
20400658:	0650 2040 0650 2040 0658 2040 0658 2040     P.@ P.@ X.@ X.@ 
20400668:	0660 2040 0660 2040 0668 2040 0668 2040     `.@ `.@ h.@ h.@ 
20400678:	0670 2040 0670 2040 0678 2040 0678 2040     p.@ p.@ x.@ x.@ 
20400688:	0680 2040 0680 2040 0688 2040 0688 2040     ..@ ..@ ..@ ..@ 
20400698:	0690 2040 0690 2040 0698 2040 0698 2040     ..@ ..@ ..@ ..@ 
204006a8:	06a0 2040 06a0 2040 06a8 2040 06a8 2040     ..@ ..@ ..@ ..@ 
204006b8:	06b0 2040 06b0 2040 06b8 2040 06b8 2040     ..@ ..@ ..@ ..@ 
204006c8:	06c0 2040 06c0 2040 06c8 2040 06c8 2040     ..@ ..@ ..@ ..@ 
204006d8:	06d0 2040 06d0 2040 06d8 2040 06d8 2040     ..@ ..@ ..@ ..@ 
204006e8:	06e0 2040 06e0 2040 06e8 2040 06e8 2040     ..@ ..@ ..@ ..@ 
204006f8:	06f0 2040 06f0 2040 06f8 2040 06f8 2040     ..@ ..@ ..@ ..@ 
20400708:	0700 2040 0700 2040 0708 2040 0708 2040     ..@ ..@ ..@ ..@ 
20400718:	0710 2040 0710 2040 0718 2040 0718 2040     ..@ ..@ ..@ ..@ 
20400728:	0720 2040 0720 2040 0728 2040 0728 2040      .@  .@ (.@ (.@ 
20400738:	0730 2040 0730 2040 0738 2040 0738 2040     0.@ 0.@ 8.@ 8.@ 
20400748:	0740 2040 0740 2040 0748 2040 0748 2040     @.@ @.@ H.@ H.@ 
20400758:	0750 2040 0750 2040 0758 2040 0758 2040     P.@ P.@ X.@ X.@ 
20400768:	0760 2040 0760 2040 0768 2040 0768 2040     `.@ `.@ h.@ h.@ 
20400778:	0770 2040 0770 2040 0778 2040 0778 2040     p.@ p.@ x.@ x.@ 
20400788:	0780 2040 0780 2040 0788 2040 0788 2040     ..@ ..@ ..@ ..@ 
20400798:	0790 2040 0790 2040 0798 2040 0798 2040     ..@ ..@ ..@ ..@ 
204007a8:	07a0 2040 07a0 2040 07a8 2040 07a8 2040     ..@ ..@ ..@ ..@ 
204007b8:	07b0 2040 07b0 2040 07b8 2040 07b8 2040     ..@ ..@ ..@ ..@ 
204007c8:	07c0 2040 07c0 2040 07c8 2040 07c8 2040     ..@ ..@ ..@ ..@ 
204007d8:	07d0 2040 07d0 2040 07d8 2040 07d8 2040     ..@ ..@ ..@ ..@ 
204007e8:	07e0 2040 07e0 2040 07e8 2040 07e8 2040     ..@ ..@ ..@ ..@ 
204007f8:	07f0 2040 07f0 2040 07f8 2040 07f8 2040     ..@ ..@ ..@ ..@ 
20400808:	0800 2040 0800 2040 0808 2040 0808 2040     ..@ ..@ ..@ ..@ 
20400818:	0810 2040 0810 2040 0818 2040 0818 2040     ..@ ..@ ..@ ..@ 
20400828:	0820 2040 0820 2040 0828 2040 0828 2040      .@  .@ (.@ (.@ 
20400838:	0830 2040 0830 2040 0838 2040 0838 2040     0.@ 0.@ 8.@ 8.@ 
20400848:	0840 2040 0840 2040 0848 2040 0848 2040     @.@ @.@ H.@ H.@ 
20400858:	0850 2040 0850 2040 0858 2040 0858 2040     P.@ P.@ X.@ X.@ 
20400868:	0860 2040 0860 2040 0868 2040 0868 2040     `.@ `.@ h.@ h.@ 
20400878:	0870 2040 0870 2040 0878 2040 0878 2040     p.@ p.@ x.@ x.@ 
20400888:	0880 2040 0880 2040 0888 2040 0888 2040     ..@ ..@ ..@ ..@ 
20400898:	0890 2040 0890 2040 0898 2040 0898 2040     ..@ ..@ ..@ ..@ 
204008a8:	08a0 2040 08a0 2040 08a8 2040 08a8 2040     ..@ ..@ ..@ ..@ 
204008b8:	08b0 2040 08b0 2040 08b8 2040 08b8 2040     ..@ ..@ ..@ ..@ 
204008c8:	08c0 2040 08c0 2040 08c8 2040 08c8 2040     ..@ ..@ ..@ ..@ 
204008d8:	08d0 2040 08d0 2040 08d8 2040 08d8 2040     ..@ ..@ ..@ ..@ 
204008e8:	08e0 2040 08e0 2040 08e8 2040 08e8 2040     ..@ ..@ ..@ ..@ 
204008f8:	08f0 2040 08f0 2040 08f8 2040 08f8 2040     ..@ ..@ ..@ ..@ 
20400908:	0900 2040 0900 2040 0908 2040 0908 2040     ..@ ..@ ..@ ..@ 
20400918:	0910 2040 0910 2040 0918 2040 0918 2040     ..@ ..@ ..@ ..@ 
20400928:	0920 2040 0920 2040 0928 2040 0928 2040      .@  .@ (.@ (.@ 
20400938:	0930 2040 0930 2040 0938 2040 0938 2040     0.@ 0.@ 8.@ 8.@ 
20400948:	0940 2040 0940 2040 0948 2040 0948 2040     @.@ @.@ H.@ H.@ 
20400958:	0950 2040 0950 2040 0958 2040 0958 2040     P.@ P.@ X.@ X.@ 
20400968:	0960 2040 0960 2040 0968 2040 0968 2040     `.@ `.@ h.@ h.@ 
20400978:	0970 2040 0970 2040 0978 2040 0978 2040     p.@ p.@ x.@ x.@ 
20400988:	0980 2040 0980 2040 0988 2040 0988 2040     ..@ ..@ ..@ ..@ 
20400998:	0990 2040 0990 2040 0998 2040 0998 2040     ..@ ..@ ..@ ..@ 
204009a8:	09a0 2040 09a0 2040 09a8 2040 09a8 2040     ..@ ..@ ..@ ..@ 

204009b8 <__malloc_sbrk_base>:
204009b8:	ffff ffff                                   ....

204009bc <__malloc_trim_threshold>:
204009bc:	0000 0002                                   ....
